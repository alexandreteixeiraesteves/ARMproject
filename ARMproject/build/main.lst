ARM GAS  /tmp/cc1J8E70.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB136:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc1J8E70.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c ****  TIM_HandleTypeDef htim10;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c ****   char uart_buf[50];
  51:Core/Src/main.c ****   int uart_buf_len;
  52:Core/Src/main.c ****   uint16_t timer_val;
  53:Core/Src/main.c ****   uint16_t nb_push_second = 0; //nombre de seconde entre appuie et relachement 
  54:Core/Src/main.c ****   size_t state = 0;
  55:Core/Src/main.c ****   
  56:Core/Src/main.c ****   uint8_t *buffer;
  57:Core/Src/main.c ****   
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_TIM10_Init(void);
  64:Core/Src/main.c **** static void MX_DMA_Init(void);
  65:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****  /* 
  74:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
  75:Core/Src/main.c **** 	uart_buf_len = sprintf(uart_buf, "Ok fine !\r\n");
  76:Core/Src/main.c ****   	HAL_UART_Transmit_DMA(&huart2, (uint8_t *)uart_buf, uart_buf_len);
  77:Core/Src/main.c ****   	received = 1;
  78:Core/Src/main.c **** }
  79:Core/Src/main.c **** */
  80:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
  81:Core/Src/main.c **** 	//TODO for reception
  82:Core/Src/main.c **** }
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  /tmp/cc1J8E70.s 			page 3


  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_TIM10_Init();
 116:Core/Src/main.c ****   MX_DMA_Init();
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   // Start timer
 121:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim10);
 122:Core/Src/main.c ****   
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   while (1)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     HAL_UART_Receive_DMA(&huart2, &buffer, 10);// TODO ne fonctionne pas
 131:Core/Src/main.c ****     __WFI();
 132:Core/Src/main.c ****     HAL_UART_Transmit_DMA(&huart2, &buffer, 10);
 133:Core/Src/main.c ****     
 134:Core/Src/main.c ****     
 135:Core/Src/main.c ****     switch( state )
 136:Core/Src/main.c **** 		   {
 137:Core/Src/main.c **** 		      case 0:
 138:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 139:Core/Src/main.c ****     			 HAL_Delay(100);
 140:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 141:Core/Src/main.c ****     			 HAL_Delay(100);
 142:Core/Src/main.c ****     			 break;
 143:Core/Src/main.c ****                      case 1:
 144:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 145:Core/Src/main.c ****                         HAL_Delay(1000);
ARM GAS  /tmp/cc1J8E70.s 			page 4


 146:Core/Src/main.c ****                         nb_push_second++;
 147:Core/Src/main.c ****                         break;
 148:Core/Src/main.c ****                      case 2:
 149:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 150:Core/Src/main.c ****     			 HAL_Delay(1000);
 151:Core/Src/main.c ****     			 nb_push_second++;
 152:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 153:Core/Src/main.c ****     			 HAL_Delay(1000);
 154:Core/Src/main.c ****     			 nb_push_second++;
 155:Core/Src/main.c ****     			 break;
 156:Core/Src/main.c ****                      default:
 157:Core/Src/main.c ****                      	 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 158:Core/Src/main.c ****                      	 break;
 159:Core/Src/main.c ****                   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /* USER CODE END 3 */
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief System Clock Configuration
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void SystemClock_Config(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 173:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 178:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 195:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 202:Core/Src/main.c ****   {
ARM GAS  /tmp/cc1J8E70.s 			page 5


 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief TIM10 Initialization Function
 209:Core/Src/main.c ****   * @param None
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** static void MX_TIM10_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END TIM10_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END TIM10_Init 1 */
 222:Core/Src/main.c ****   htim10.Instance = TIM10;
 223:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 224:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 225:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 226:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 227:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 228:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END TIM10_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** }
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****   * @brief USART2 Initialization Function
 240:Core/Src/main.c ****   * @param None
 241:Core/Src/main.c ****   * @retval None
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 244:Core/Src/main.c **** {
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 253:Core/Src/main.c ****   huart2.Instance = USART2;
 254:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 255:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 256:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 257:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 258:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 259:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/cc1J8E70.s 			page 6


 260:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 261:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * Enable DMA controller clock
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c **** static void MX_DMA_Init(void)
 275:Core/Src/main.c **** {
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* DMA controller clock enable */
 278:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* DMA interrupt init */
 281:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 282:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 283:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 284:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 285:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 286:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief GPIO Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_GPIO_Init(void)
 296:Core/Src/main.c **** {
  28              		.loc 1 296 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 297:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 297 3 view .LVU1
  42              		.loc 1 297 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/cc1J8E70.s 			page 7


  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 300:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 300 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 300 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 300 3 view .LVU5
  54 0012 1C4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 300 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 300 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 300 3 view .LVU8
 301:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 301 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 301 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 301 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 301 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 301 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 301 3 view .LVU14
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 304:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  82              		.loc 1 304 3 view .LVU15
  83 003a 134D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 307:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  89              		.loc 1 307 3 view .LVU16
  90              		.loc 1 307 23 is_stmt 0 view .LVU17
  91 0046 4FF40053 		mov	r3, #8192
  92 004a 0393     		str	r3, [sp, #12]
 308:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
ARM GAS  /tmp/cc1J8E70.s 			page 8


  93              		.loc 1 308 3 is_stmt 1 view .LVU18
  94              		.loc 1 308 24 is_stmt 0 view .LVU19
  95 004c 4FF44413 		mov	r3, #3211264
  96 0050 0493     		str	r3, [sp, #16]
 309:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 309 3 is_stmt 1 view .LVU20
  98              		.loc 1 309 24 is_stmt 0 view .LVU21
  99 0052 0594     		str	r4, [sp, #20]
 310:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 100              		.loc 1 310 3 is_stmt 1 view .LVU22
 101 0054 03A9     		add	r1, sp, #12
 102 0056 0D48     		ldr	r0, .L3+8
 103 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 313:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 105              		.loc 1 313 3 view .LVU23
 106              		.loc 1 313 23 is_stmt 0 view .LVU24
 107 005c 2023     		movs	r3, #32
 108 005e 0393     		str	r3, [sp, #12]
 314:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 314 3 is_stmt 1 view .LVU25
 110              		.loc 1 314 24 is_stmt 0 view .LVU26
 111 0060 0123     		movs	r3, #1
 112 0062 0493     		str	r3, [sp, #16]
 315:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 315 3 is_stmt 1 view .LVU27
 114              		.loc 1 315 24 is_stmt 0 view .LVU28
 115 0064 0594     		str	r4, [sp, #20]
 316:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 316 3 is_stmt 1 view .LVU29
 117              		.loc 1 316 25 is_stmt 0 view .LVU30
 118 0066 0694     		str	r4, [sp, #24]
 317:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119              		.loc 1 317 3 is_stmt 1 view .LVU31
 120 0068 03A9     		add	r1, sp, #12
 121 006a 2846     		mov	r0, r5
 122 006c FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* EXTI interrupt init*/
 320:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 124              		.loc 1 320 3 view .LVU32
 125 0070 2246     		mov	r2, r4
 126 0072 2146     		mov	r1, r4
 127 0074 2820     		movs	r0, #40
 128 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 129              	.LVL3:
 321:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 130              		.loc 1 321 3 view .LVU33
 131 007a 2820     		movs	r0, #40
 132 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 133              	.LVL4:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** }
 134              		.loc 1 323 1 is_stmt 0 view .LVU34
ARM GAS  /tmp/cc1J8E70.s 			page 9


 135 0080 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0082 30BD     		pop	{r4, r5, pc}
 140              	.L4:
 141              		.align	2
 142              	.L3:
 143 0084 00380240 		.word	1073887232
 144 0088 00000240 		.word	1073872896
 145 008c 00080240 		.word	1073874944
 146              		.cfi_endproc
 147              	.LFE136:
 149              		.section	.text.MX_DMA_Init,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	MX_DMA_Init:
 157              	.LFB135:
 275:Core/Src/main.c **** 
 158              		.loc 1 275 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 16
 278:Core/Src/main.c **** 
 170              		.loc 1 278 3 view .LVU36
 171              	.LBB6:
 278:Core/Src/main.c **** 
 172              		.loc 1 278 3 view .LVU37
 173 0004 0024     		movs	r4, #0
 174 0006 0194     		str	r4, [sp, #4]
 278:Core/Src/main.c **** 
 175              		.loc 1 278 3 view .LVU38
 176 0008 0D4B     		ldr	r3, .L7
 177 000a 1A6B     		ldr	r2, [r3, #48]
 178 000c 42F40012 		orr	r2, r2, #2097152
 179 0010 1A63     		str	r2, [r3, #48]
 278:Core/Src/main.c **** 
 180              		.loc 1 278 3 view .LVU39
 181 0012 1B6B     		ldr	r3, [r3, #48]
 182 0014 03F40013 		and	r3, r3, #2097152
 183 0018 0193     		str	r3, [sp, #4]
 278:Core/Src/main.c **** 
 184              		.loc 1 278 3 view .LVU40
 185 001a 019B     		ldr	r3, [sp, #4]
 186              	.LBE6:
 278:Core/Src/main.c **** 
ARM GAS  /tmp/cc1J8E70.s 			page 10


 187              		.loc 1 278 3 view .LVU41
 282:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 188              		.loc 1 282 3 view .LVU42
 189 001c 2246     		mov	r2, r4
 190 001e 2146     		mov	r1, r4
 191 0020 1020     		movs	r0, #16
 192 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL5:
 283:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 194              		.loc 1 283 3 view .LVU43
 195 0026 1020     		movs	r0, #16
 196 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL6:
 285:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 198              		.loc 1 285 3 view .LVU44
 199 002c 2246     		mov	r2, r4
 200 002e 2146     		mov	r1, r4
 201 0030 1120     		movs	r0, #17
 202 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL7:
 286:Core/Src/main.c **** 
 204              		.loc 1 286 3 view .LVU45
 205 0036 1120     		movs	r0, #17
 206 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL8:
 288:Core/Src/main.c **** 
 208              		.loc 1 288 1 is_stmt 0 view .LVU46
 209 003c 02B0     		add	sp, sp, #8
 210              	.LCFI5:
 211              		.cfi_def_cfa_offset 8
 212              		@ sp needed
 213 003e 10BD     		pop	{r4, pc}
 214              	.L8:
 215              		.align	2
 216              	.L7:
 217 0040 00380240 		.word	1073887232
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 222              		.align	1
 223              		.global	HAL_UART_RxCpltCallback
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_UART_RxCpltCallback:
 230              	.LVL9:
 231              	.LFB130:
  80:Core/Src/main.c **** 	//TODO for reception
 232              		.loc 1 80 56 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
  82:Core/Src/main.c **** 
 237              		.loc 1 82 1 view .LVU48
 238 0000 7047     		bx	lr
ARM GAS  /tmp/cc1J8E70.s 			page 11


 239              		.cfi_endproc
 240              	.LFE130:
 242              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 243              		.align	2
 244              	.LC0:
 245 0000 30202D2D 		.ascii	"0 --> 1\015\012\000"
 245      3E20310D 
 245      0A00
 246 000a 0000     		.align	2
 247              	.LC1:
 248 000c 31202D2D 		.ascii	"1 --> 2\015\012\000"
 248      3E20320D 
 248      0A00
 249 0016 0000     		.align	2
 250              	.LC2:
 251 0018 31202D2D 		.ascii	"1 --> 1\015\012\000"
 251      3E20310D 
 251      0A00
 252 0022 0000     		.align	2
 253              	.LC3:
 254 0024 32202D2D 		.ascii	"2 --> 0\015\012\000"
 254      3E20300D 
 254      0A00
 255 002e 0000     		.align	2
 256              	.LC4:
 257 0030 32202D2D 		.ascii	"2 --> 1\015\012\000"
 257      3E20310D 
 257      0A00
 258              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_GPIO_EXTI_Callback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	HAL_GPIO_EXTI_Callback:
 267              	.LVL10:
 268              	.LFB137:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 330:Core/Src/main.c **** {
 269              		.loc 1 330 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 331:Core/Src/main.c **** 	int tmp;
 273              		.loc 1 331 2 view .LVU50
 332:Core/Src/main.c **** 	if( GPIO_Pin == GPIO_PIN_13 ) {
 274              		.loc 1 332 2 view .LVU51
 275              		.loc 1 332 4 is_stmt 0 view .LVU52
 276 0000 B0F5005F 		cmp	r0, #8192
 277 0004 00D0     		beq	.L21
 278 0006 7047     		bx	lr
ARM GAS  /tmp/cc1J8E70.s 			page 12


 279              	.L21:
 330:Core/Src/main.c **** 	int tmp;
 280              		.loc 1 330 1 view .LVU53
 281 0008 08B5     		push	{r3, lr}
 282              	.LCFI6:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 333:Core/Src/main.c **** 		tmp = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
 286              		.loc 1 333 3 is_stmt 1 view .LVU54
 287              		.loc 1 333 9 is_stmt 0 view .LVU55
 288 000a 4FF40051 		mov	r1, #8192
 289 000e 00F18040 		add	r0, r0, #1073741824
 290              	.LVL11:
 291              		.loc 1 333 9 view .LVU56
 292 0012 00F5F430 		add	r0, r0, #124928
 293 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 294              	.LVL12:
 334:Core/Src/main.c **** 		if (tmp == 0) // on appuie
 295              		.loc 1 334 3 is_stmt 1 view .LVU57
 296              		.loc 1 334 6 is_stmt 0 view .LVU58
 297 001a 18B9     		cbnz	r0, .L12
 335:Core/Src/main.c **** 		{
 336:Core/Src/main.c **** 		   nb_push_second = 0;
 298              		.loc 1 336 6 is_stmt 1 view .LVU59
 299              		.loc 1 336 21 is_stmt 0 view .LVU60
 300 001c 1E4B     		ldr	r3, .L22
 301 001e 0022     		movs	r2, #0
 302 0020 1A80     		strh	r2, [r3]	@ movhi
 303              	.LVL13:
 304              	.L10:
 337:Core/Src/main.c **** 		} 
 338:Core/Src/main.c **** 		else		// onrelache
 339:Core/Src/main.c **** 		{
 340:Core/Src/main.c **** 		   switch( state )
 341:Core/Src/main.c **** 		   {
 342:Core/Src/main.c **** 		      case 0:
 343:Core/Src/main.c ****                         HAL_UART_Transmit_DMA(&huart2,"0 --> 1\r\n", 11);
 344:Core/Src/main.c ****                         /*
 345:Core/Src/main.c ****                         HAL_UART_Receive_DMA(&huart2, &buffer, 10);// TODO ne fonctionne pas
 346:Core/Src/main.c ****                         __WFI();
 347:Core/Src/main.c ****                         HAL_UART_Transmit_DMA(&huart2, (uint8_t *)buffer, 10);
 348:Core/Src/main.c ****                         */
 349:Core/Src/main.c ****                         state = 1;
 350:Core/Src/main.c ****                         break;
 351:Core/Src/main.c ****                      case 1:
 352:Core/Src/main.c ****                      	 if(nb_push_second < 1){
 353:Core/Src/main.c ****                      	    //TODO accepte dévérouillage pendant 30s
 354:Core/Src/main.c ****                      	    state = 2;
 355:Core/Src/main.c ****                      	    HAL_UART_Transmit_DMA(&huart2,"1 --> 2\r\n", 11);
 356:Core/Src/main.c ****                      	 }
 357:Core/Src/main.c ****                      	 else
 358:Core/Src/main.c ****                      	 	HAL_UART_Transmit_DMA(&huart2,"1 --> 1\r\n", 11);
 359:Core/Src/main.c ****                         break;
 360:Core/Src/main.c ****                      case 2:
 361:Core/Src/main.c ****                         if(nb_push_second > 5){
 362:Core/Src/main.c ****                         	state = 0;
ARM GAS  /tmp/cc1J8E70.s 			page 13


 363:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 0\r\n", 11);
 364:Core/Src/main.c ****                         }
 365:Core/Src/main.c ****                         else {
 366:Core/Src/main.c ****                         	state = 1;
 367:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 1\r\n", 11);
 368:Core/Src/main.c ****                         }
 369:Core/Src/main.c ****                         break;
 370:Core/Src/main.c ****                      default:
 371:Core/Src/main.c **** 			 break;                     	
 372:Core/Src/main.c ****                   }
 373:Core/Src/main.c **** 		}
 374:Core/Src/main.c **** 		
 375:Core/Src/main.c **** 	}
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** }
 305              		.loc 1 377 1 view .LVU61
 306 0022 08BD     		pop	{r3, pc}
 307              	.LVL14:
 308              	.L12:
 340:Core/Src/main.c **** 		   {
 309              		.loc 1 340 6 is_stmt 1 view .LVU62
 310 0024 1D4B     		ldr	r3, .L22+4
 311 0026 1B68     		ldr	r3, [r3]
 312 0028 012B     		cmp	r3, #1
 313 002a 0CD0     		beq	.L13
 314 002c 022B     		cmp	r3, #2
 315 002e 1CD0     		beq	.L14
 316 0030 002B     		cmp	r3, #0
 317 0032 F6D1     		bne	.L10
 343:Core/Src/main.c ****                         /*
 318              		.loc 1 343 25 view .LVU63
 319 0034 0B22     		movs	r2, #11
 320 0036 1A49     		ldr	r1, .L22+8
 321 0038 1A48     		ldr	r0, .L22+12
 322              	.LVL15:
 343:Core/Src/main.c ****                         /*
 323              		.loc 1 343 25 is_stmt 0 view .LVU64
 324 003a FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 325              	.LVL16:
 349:Core/Src/main.c ****                         break;
 326              		.loc 1 349 25 is_stmt 1 view .LVU65
 349:Core/Src/main.c ****                         break;
 327              		.loc 1 349 31 is_stmt 0 view .LVU66
 328 003e 174B     		ldr	r3, .L22+4
 329 0040 0122     		movs	r2, #1
 330 0042 1A60     		str	r2, [r3]
 350:Core/Src/main.c ****                      case 1:
 331              		.loc 1 350 25 is_stmt 1 view .LVU67
 332 0044 EDE7     		b	.L10
 333              	.LVL17:
 334              	.L13:
 352:Core/Src/main.c ****                      	    //TODO accepte dévérouillage pendant 30s
 335              		.loc 1 352 24 view .LVU68
 352:Core/Src/main.c ****                      	    //TODO accepte dévérouillage pendant 30s
 336              		.loc 1 352 42 is_stmt 0 view .LVU69
 337 0046 144B     		ldr	r3, .L22
 338 0048 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/cc1J8E70.s 			page 14


 352:Core/Src/main.c ****                      	    //TODO accepte dévérouillage pendant 30s
 339              		.loc 1 352 26 view .LVU70
 340 004a 43B9     		cbnz	r3, .L15
 354:Core/Src/main.c ****                      	    HAL_UART_Transmit_DMA(&huart2,"1 --> 2\r\n", 11);
 341              		.loc 1 354 27 is_stmt 1 view .LVU71
 354:Core/Src/main.c ****                      	    HAL_UART_Transmit_DMA(&huart2,"1 --> 2\r\n", 11);
 342              		.loc 1 354 33 is_stmt 0 view .LVU72
 343 004c 134B     		ldr	r3, .L22+4
 344 004e 0222     		movs	r2, #2
 345 0050 1A60     		str	r2, [r3]
 355:Core/Src/main.c ****                      	 }
 346              		.loc 1 355 27 is_stmt 1 view .LVU73
 347 0052 0B22     		movs	r2, #11
 348 0054 1449     		ldr	r1, .L22+16
 349 0056 1348     		ldr	r0, .L22+12
 350              	.LVL18:
 355:Core/Src/main.c ****                      	 }
 351              		.loc 1 355 27 is_stmt 0 view .LVU74
 352 0058 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 353              	.LVL19:
 354 005c E1E7     		b	.L10
 355              	.LVL20:
 356              	.L15:
 358:Core/Src/main.c ****                         break;
 357              		.loc 1 358 25 is_stmt 1 view .LVU75
 358 005e 0B22     		movs	r2, #11
 359 0060 1249     		ldr	r1, .L22+20
 360 0062 1048     		ldr	r0, .L22+12
 361              	.LVL21:
 358:Core/Src/main.c ****                         break;
 362              		.loc 1 358 25 is_stmt 0 view .LVU76
 363 0064 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 364              	.LVL22:
 365 0068 DBE7     		b	.L10
 366              	.LVL23:
 367              	.L14:
 361:Core/Src/main.c ****                         	state = 0;
 368              		.loc 1 361 25 is_stmt 1 view .LVU77
 361:Core/Src/main.c ****                         	state = 0;
 369              		.loc 1 361 43 is_stmt 0 view .LVU78
 370 006a 0B4B     		ldr	r3, .L22
 371 006c 1B88     		ldrh	r3, [r3]
 361:Core/Src/main.c ****                         	state = 0;
 372              		.loc 1 361 27 view .LVU79
 373 006e 052B     		cmp	r3, #5
 374 0070 08D9     		bls	.L16
 362:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 0\r\n", 11);
 375              		.loc 1 362 26 is_stmt 1 view .LVU80
 362:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 0\r\n", 11);
 376              		.loc 1 362 32 is_stmt 0 view .LVU81
 377 0072 0A4B     		ldr	r3, .L22+4
 378 0074 0022     		movs	r2, #0
 379 0076 1A60     		str	r2, [r3]
 363:Core/Src/main.c ****                         }
 380              		.loc 1 363 26 is_stmt 1 view .LVU82
 381 0078 0B22     		movs	r2, #11
 382 007a 0D49     		ldr	r1, .L22+24
ARM GAS  /tmp/cc1J8E70.s 			page 15


 383 007c 0948     		ldr	r0, .L22+12
 384              	.LVL24:
 363:Core/Src/main.c ****                         }
 385              		.loc 1 363 26 is_stmt 0 view .LVU83
 386 007e FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 387              	.LVL25:
 388 0082 CEE7     		b	.L10
 389              	.LVL26:
 390              	.L16:
 366:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 1\r\n", 11);
 391              		.loc 1 366 26 is_stmt 1 view .LVU84
 366:Core/Src/main.c ****                         	HAL_UART_Transmit_DMA(&huart2,"2 --> 1\r\n", 11);
 392              		.loc 1 366 32 is_stmt 0 view .LVU85
 393 0084 054B     		ldr	r3, .L22+4
 394 0086 0122     		movs	r2, #1
 395 0088 1A60     		str	r2, [r3]
 367:Core/Src/main.c ****                         }
 396              		.loc 1 367 26 is_stmt 1 view .LVU86
 397 008a 0B22     		movs	r2, #11
 398 008c 0949     		ldr	r1, .L22+28
 399 008e 0548     		ldr	r0, .L22+12
 400              	.LVL27:
 367:Core/Src/main.c ****                         }
 401              		.loc 1 367 26 is_stmt 0 view .LVU87
 402 0090 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 403              	.LVL28:
 404              		.loc 1 377 1 view .LVU88
 405 0094 C5E7     		b	.L10
 406              	.L23:
 407 0096 00BF     		.align	2
 408              	.L22:
 409 0098 00000000 		.word	.LANCHOR0
 410 009c 00000000 		.word	.LANCHOR1
 411 00a0 00000000 		.word	.LC0
 412 00a4 00000000 		.word	huart2
 413 00a8 0C000000 		.word	.LC1
 414 00ac 18000000 		.word	.LC2
 415 00b0 24000000 		.word	.LC3
 416 00b4 30000000 		.word	.LC4
 417              		.cfi_endproc
 418              	.LFE137:
 420              		.section	.text.Error_Handler,"ax",%progbits
 421              		.align	1
 422              		.global	Error_Handler
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv4-sp-d16
 428              	Error_Handler:
 429              	.LFB138:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /* USER CODE END 4 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 383:Core/Src/main.c ****   * @retval None
 384:Core/Src/main.c ****   */
ARM GAS  /tmp/cc1J8E70.s 			page 16


 385:Core/Src/main.c **** void Error_Handler(void)
 386:Core/Src/main.c **** {
 430              		.loc 1 386 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ Volatile: function does not return.
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 387:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 388:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 389:Core/Src/main.c ****   __disable_irq();
 436              		.loc 1 389 3 view .LVU90
 437              	.LBB7:
 438              	.LBI7:
 439              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc1J8E70.s 			page 17


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc1J8E70.s 			page 18


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 440              		.loc 2 140 27 view .LVU91
 441              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 442              		.loc 2 142 3 view .LVU92
 443              		.syntax unified
 444              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 445 0000 72B6     		cpsid i
 446              	@ 0 "" 2
 447              		.thumb
 448              		.syntax unified
 449              	.L25:
 450              	.LBE8:
 451              	.LBE7:
 390:Core/Src/main.c ****   while (1)
 452              		.loc 1 390 3 discriminator 1 view .LVU93
ARM GAS  /tmp/cc1J8E70.s 			page 19


 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****   }
 453              		.loc 1 392 3 discriminator 1 view .LVU94
 390:Core/Src/main.c ****   while (1)
 454              		.loc 1 390 9 discriminator 1 view .LVU95
 455 0002 FEE7     		b	.L25
 456              		.cfi_endproc
 457              	.LFE138:
 459              		.section	.text.MX_TIM10_Init,"ax",%progbits
 460              		.align	1
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	MX_TIM10_Init:
 467              	.LFB133:
 213:Core/Src/main.c **** 
 468              		.loc 1 213 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI7:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
 222:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 477              		.loc 1 222 3 view .LVU97
 222:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 478              		.loc 1 222 19 is_stmt 0 view .LVU98
 479 0002 0948     		ldr	r0, .L30
 480 0004 094B     		ldr	r3, .L30+4
 481 0006 0360     		str	r3, [r0]
 223:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 482              		.loc 1 223 3 is_stmt 1 view .LVU99
 223:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 483              		.loc 1 223 25 is_stmt 0 view .LVU100
 484 0008 0F23     		movs	r3, #15
 485 000a 4360     		str	r3, [r0, #4]
 224:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 486              		.loc 1 224 3 is_stmt 1 view .LVU101
 224:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 487              		.loc 1 224 27 is_stmt 0 view .LVU102
 488 000c 0023     		movs	r3, #0
 489 000e 8360     		str	r3, [r0, #8]
 225:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 490              		.loc 1 225 3 is_stmt 1 view .LVU103
 225:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 491              		.loc 1 225 22 is_stmt 0 view .LVU104
 492 0010 4FF6FF72 		movw	r2, #65535
 493 0014 C260     		str	r2, [r0, #12]
 226:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 494              		.loc 1 226 3 is_stmt 1 view .LVU105
 226:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 495              		.loc 1 226 29 is_stmt 0 view .LVU106
 496 0016 0361     		str	r3, [r0, #16]
 227:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
ARM GAS  /tmp/cc1J8E70.s 			page 20


 497              		.loc 1 227 3 is_stmt 1 view .LVU107
 227:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 498              		.loc 1 227 33 is_stmt 0 view .LVU108
 499 0018 8361     		str	r3, [r0, #24]
 228:Core/Src/main.c ****   {
 500              		.loc 1 228 3 is_stmt 1 view .LVU109
 228:Core/Src/main.c ****   {
 501              		.loc 1 228 7 is_stmt 0 view .LVU110
 502 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 503              	.LVL29:
 228:Core/Src/main.c ****   {
 504              		.loc 1 228 6 view .LVU111
 505 001e 00B9     		cbnz	r0, .L29
 236:Core/Src/main.c **** 
 506              		.loc 1 236 1 view .LVU112
 507 0020 08BD     		pop	{r3, pc}
 508              	.L29:
 230:Core/Src/main.c ****   }
 509              		.loc 1 230 5 is_stmt 1 view .LVU113
 510 0022 FFF7FEFF 		bl	Error_Handler
 511              	.LVL30:
 512              	.L31:
 513 0026 00BF     		.align	2
 514              	.L30:
 515 0028 00000000 		.word	htim10
 516 002c 00440140 		.word	1073824768
 517              		.cfi_endproc
 518              	.LFE133:
 520              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 521              		.align	1
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv4-sp-d16
 527              	MX_USART2_UART_Init:
 528              	.LFB134:
 244:Core/Src/main.c **** 
 529              		.loc 1 244 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              	.LCFI8:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 3, -8
 537              		.cfi_offset 14, -4
 253:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 538              		.loc 1 253 3 view .LVU115
 253:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 539              		.loc 1 253 19 is_stmt 0 view .LVU116
 540 0002 0A48     		ldr	r0, .L36
 541 0004 0A4B     		ldr	r3, .L36+4
 542 0006 0360     		str	r3, [r0]
 254:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 543              		.loc 1 254 3 is_stmt 1 view .LVU117
 254:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 544              		.loc 1 254 24 is_stmt 0 view .LVU118
ARM GAS  /tmp/cc1J8E70.s 			page 21


 545 0008 4FF4E133 		mov	r3, #115200
 546 000c 4360     		str	r3, [r0, #4]
 255:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 547              		.loc 1 255 3 is_stmt 1 view .LVU119
 255:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 548              		.loc 1 255 26 is_stmt 0 view .LVU120
 549 000e 0023     		movs	r3, #0
 550 0010 8360     		str	r3, [r0, #8]
 256:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 551              		.loc 1 256 3 is_stmt 1 view .LVU121
 256:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 552              		.loc 1 256 24 is_stmt 0 view .LVU122
 553 0012 C360     		str	r3, [r0, #12]
 257:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 554              		.loc 1 257 3 is_stmt 1 view .LVU123
 257:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 555              		.loc 1 257 22 is_stmt 0 view .LVU124
 556 0014 0361     		str	r3, [r0, #16]
 258:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 557              		.loc 1 258 3 is_stmt 1 view .LVU125
 258:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 558              		.loc 1 258 20 is_stmt 0 view .LVU126
 559 0016 0C22     		movs	r2, #12
 560 0018 4261     		str	r2, [r0, #20]
 259:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 561              		.loc 1 259 3 is_stmt 1 view .LVU127
 259:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 562              		.loc 1 259 25 is_stmt 0 view .LVU128
 563 001a 8361     		str	r3, [r0, #24]
 260:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 564              		.loc 1 260 3 is_stmt 1 view .LVU129
 260:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 565              		.loc 1 260 28 is_stmt 0 view .LVU130
 566 001c C361     		str	r3, [r0, #28]
 261:Core/Src/main.c ****   {
 567              		.loc 1 261 3 is_stmt 1 view .LVU131
 261:Core/Src/main.c ****   {
 568              		.loc 1 261 7 is_stmt 0 view .LVU132
 569 001e FFF7FEFF 		bl	HAL_UART_Init
 570              	.LVL31:
 261:Core/Src/main.c ****   {
 571              		.loc 1 261 6 view .LVU133
 572 0022 00B9     		cbnz	r0, .L35
 269:Core/Src/main.c **** 
 573              		.loc 1 269 1 view .LVU134
 574 0024 08BD     		pop	{r3, pc}
 575              	.L35:
 263:Core/Src/main.c ****   }
 576              		.loc 1 263 5 is_stmt 1 view .LVU135
 577 0026 FFF7FEFF 		bl	Error_Handler
 578              	.LVL32:
 579              	.L37:
 580 002a 00BF     		.align	2
 581              	.L36:
 582 002c 00000000 		.word	huart2
 583 0030 00440040 		.word	1073759232
 584              		.cfi_endproc
ARM GAS  /tmp/cc1J8E70.s 			page 22


 585              	.LFE134:
 587              		.section	.text.SystemClock_Config,"ax",%progbits
 588              		.align	1
 589              		.global	SystemClock_Config
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	SystemClock_Config:
 596              	.LFB132:
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 597              		.loc 1 171 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 80
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601 0000 00B5     		push	{lr}
 602              	.LCFI9:
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 14, -4
 605 0002 95B0     		sub	sp, sp, #84
 606              	.LCFI10:
 607              		.cfi_def_cfa_offset 88
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 608              		.loc 1 172 3 view .LVU137
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 609              		.loc 1 172 22 is_stmt 0 view .LVU138
 610 0004 3022     		movs	r2, #48
 611 0006 0021     		movs	r1, #0
 612 0008 08A8     		add	r0, sp, #32
 613 000a FFF7FEFF 		bl	memset
 614              	.LVL33:
 173:Core/Src/main.c **** 
 615              		.loc 1 173 3 is_stmt 1 view .LVU139
 173:Core/Src/main.c **** 
 616              		.loc 1 173 22 is_stmt 0 view .LVU140
 617 000e 0023     		movs	r3, #0
 618 0010 0393     		str	r3, [sp, #12]
 619 0012 0493     		str	r3, [sp, #16]
 620 0014 0593     		str	r3, [sp, #20]
 621 0016 0693     		str	r3, [sp, #24]
 622 0018 0793     		str	r3, [sp, #28]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 623              		.loc 1 177 3 is_stmt 1 view .LVU141
 624              	.LBB9:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 625              		.loc 1 177 3 view .LVU142
 626 001a 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 627              		.loc 1 177 3 view .LVU143
 628 001c 194A     		ldr	r2, .L44
 629 001e 116C     		ldr	r1, [r2, #64]
 630 0020 41F08051 		orr	r1, r1, #268435456
 631 0024 1164     		str	r1, [r2, #64]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 632              		.loc 1 177 3 view .LVU144
 633 0026 126C     		ldr	r2, [r2, #64]
 634 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/cc1J8E70.s 			page 23


 635 002c 0192     		str	r2, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 636              		.loc 1 177 3 view .LVU145
 637 002e 019A     		ldr	r2, [sp, #4]
 638              	.LBE9:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 639              		.loc 1 177 3 view .LVU146
 178:Core/Src/main.c **** 
 640              		.loc 1 178 3 view .LVU147
 641              	.LBB10:
 178:Core/Src/main.c **** 
 642              		.loc 1 178 3 view .LVU148
 643 0030 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c **** 
 644              		.loc 1 178 3 view .LVU149
 645 0032 1549     		ldr	r1, .L44+4
 646 0034 0A68     		ldr	r2, [r1]
 647 0036 22F44042 		bic	r2, r2, #49152
 648 003a 42F40042 		orr	r2, r2, #32768
 649 003e 0A60     		str	r2, [r1]
 178:Core/Src/main.c **** 
 650              		.loc 1 178 3 view .LVU150
 651 0040 0A68     		ldr	r2, [r1]
 652 0042 02F44042 		and	r2, r2, #49152
 653 0046 0292     		str	r2, [sp, #8]
 178:Core/Src/main.c **** 
 654              		.loc 1 178 3 view .LVU151
 655 0048 029A     		ldr	r2, [sp, #8]
 656              	.LBE10:
 178:Core/Src/main.c **** 
 657              		.loc 1 178 3 view .LVU152
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 658              		.loc 1 183 3 view .LVU153
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 659              		.loc 1 183 36 is_stmt 0 view .LVU154
 660 004a 0222     		movs	r2, #2
 661 004c 0892     		str	r2, [sp, #32]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 662              		.loc 1 184 3 is_stmt 1 view .LVU155
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 663              		.loc 1 184 30 is_stmt 0 view .LVU156
 664 004e 0122     		movs	r2, #1
 665 0050 0B92     		str	r2, [sp, #44]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 666              		.loc 1 185 3 is_stmt 1 view .LVU157
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 667              		.loc 1 185 41 is_stmt 0 view .LVU158
 668 0052 1022     		movs	r2, #16
 669 0054 0C92     		str	r2, [sp, #48]
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 670              		.loc 1 186 3 is_stmt 1 view .LVU159
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 671              		.loc 1 186 34 is_stmt 0 view .LVU160
 672 0056 0E93     		str	r3, [sp, #56]
 187:Core/Src/main.c ****   {
 673              		.loc 1 187 3 is_stmt 1 view .LVU161
 187:Core/Src/main.c ****   {
ARM GAS  /tmp/cc1J8E70.s 			page 24


 674              		.loc 1 187 7 is_stmt 0 view .LVU162
 675 0058 08A8     		add	r0, sp, #32
 676 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 677              	.LVL34:
 187:Core/Src/main.c ****   {
 678              		.loc 1 187 6 view .LVU163
 679 005e 68B9     		cbnz	r0, .L42
 194:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 680              		.loc 1 194 3 is_stmt 1 view .LVU164
 194:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 681              		.loc 1 194 31 is_stmt 0 view .LVU165
 682 0060 0F23     		movs	r3, #15
 683 0062 0393     		str	r3, [sp, #12]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 684              		.loc 1 196 3 is_stmt 1 view .LVU166
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 685              		.loc 1 196 34 is_stmt 0 view .LVU167
 686 0064 0021     		movs	r1, #0
 687 0066 0491     		str	r1, [sp, #16]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 688              		.loc 1 197 3 is_stmt 1 view .LVU168
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 689              		.loc 1 197 35 is_stmt 0 view .LVU169
 690 0068 0591     		str	r1, [sp, #20]
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 691              		.loc 1 198 3 is_stmt 1 view .LVU170
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 692              		.loc 1 198 36 is_stmt 0 view .LVU171
 693 006a 0691     		str	r1, [sp, #24]
 199:Core/Src/main.c **** 
 694              		.loc 1 199 3 is_stmt 1 view .LVU172
 199:Core/Src/main.c **** 
 695              		.loc 1 199 36 is_stmt 0 view .LVU173
 696 006c 0791     		str	r1, [sp, #28]
 201:Core/Src/main.c ****   {
 697              		.loc 1 201 3 is_stmt 1 view .LVU174
 201:Core/Src/main.c ****   {
 698              		.loc 1 201 7 is_stmt 0 view .LVU175
 699 006e 03A8     		add	r0, sp, #12
 700 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 701              	.LVL35:
 201:Core/Src/main.c ****   {
 702              		.loc 1 201 6 view .LVU176
 703 0074 20B9     		cbnz	r0, .L43
 205:Core/Src/main.c **** 
 704              		.loc 1 205 1 view .LVU177
 705 0076 15B0     		add	sp, sp, #84
 706              	.LCFI11:
 707              		.cfi_remember_state
 708              		.cfi_def_cfa_offset 4
 709              		@ sp needed
 710 0078 5DF804FB 		ldr	pc, [sp], #4
 711              	.L42:
 712              	.LCFI12:
 713              		.cfi_restore_state
 189:Core/Src/main.c ****   }
 714              		.loc 1 189 5 is_stmt 1 view .LVU178
ARM GAS  /tmp/cc1J8E70.s 			page 25


 715 007c FFF7FEFF 		bl	Error_Handler
 716              	.LVL36:
 717              	.L43:
 203:Core/Src/main.c ****   }
 718              		.loc 1 203 5 view .LVU179
 719 0080 FFF7FEFF 		bl	Error_Handler
 720              	.LVL37:
 721              	.L45:
 722              		.align	2
 723              	.L44:
 724 0084 00380240 		.word	1073887232
 725 0088 00700040 		.word	1073770496
 726              		.cfi_endproc
 727              	.LFE132:
 729              		.section	.text.main,"ax",%progbits
 730              		.align	1
 731              		.global	main
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	main:
 738              	.LFB131:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 739              		.loc 1 92 1 view -0
 740              		.cfi_startproc
 741              		@ Volatile: function does not return.
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744 0000 08B5     		push	{r3, lr}
 745              	.LCFI13:
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 3, -8
 748              		.cfi_offset 14, -4
 100:Core/Src/main.c **** 
 749              		.loc 1 100 3 view .LVU181
 750 0002 FFF7FEFF 		bl	HAL_Init
 751              	.LVL38:
 107:Core/Src/main.c **** 
 752              		.loc 1 107 3 view .LVU182
 753 0006 FFF7FEFF 		bl	SystemClock_Config
 754              	.LVL39:
 114:Core/Src/main.c ****   MX_TIM10_Init();
 755              		.loc 1 114 3 view .LVU183
 756 000a FFF7FEFF 		bl	MX_GPIO_Init
 757              	.LVL40:
 115:Core/Src/main.c ****   MX_DMA_Init();
 758              		.loc 1 115 3 view .LVU184
 759 000e FFF7FEFF 		bl	MX_TIM10_Init
 760              	.LVL41:
 116:Core/Src/main.c ****   MX_USART2_UART_Init();
 761              		.loc 1 116 3 view .LVU185
 762 0012 FFF7FEFF 		bl	MX_DMA_Init
 763              	.LVL42:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 764              		.loc 1 117 3 view .LVU186
 765 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
ARM GAS  /tmp/cc1J8E70.s 			page 26


 766              	.LVL43:
 121:Core/Src/main.c ****   
 767              		.loc 1 121 3 view .LVU187
 768 001a 2C48     		ldr	r0, .L54
 769 001c FFF7FEFF 		bl	HAL_TIM_Base_Start
 770              	.LVL44:
 771 0020 10E0     		b	.L47
 772              	.L53:
 138:Core/Src/main.c ****     			 HAL_Delay(100);
 773              		.loc 1 138 25 view .LVU188
 774 0022 2B4C     		ldr	r4, .L54+4
 775 0024 0122     		movs	r2, #1
 776 0026 2021     		movs	r1, #32
 777 0028 2046     		mov	r0, r4
 778 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 779              	.LVL45:
 139:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 780              		.loc 1 139 9 view .LVU189
 781 002e 6420     		movs	r0, #100
 782 0030 FFF7FEFF 		bl	HAL_Delay
 783              	.LVL46:
 140:Core/Src/main.c ****     			 HAL_Delay(100);
 784              		.loc 1 140 9 view .LVU190
 785 0034 0022     		movs	r2, #0
 786 0036 2021     		movs	r1, #32
 787 0038 2046     		mov	r0, r4
 788 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 789              	.LVL47:
 141:Core/Src/main.c ****     			 break;
 790              		.loc 1 141 9 view .LVU191
 791 003e 6420     		movs	r0, #100
 792 0040 FFF7FEFF 		bl	HAL_Delay
 793              	.LVL48:
 142:Core/Src/main.c ****                      case 1:
 794              		.loc 1 142 9 view .LVU192
 795              	.L47:
 128:Core/Src/main.c ****   {
 796              		.loc 1 128 3 view .LVU193
 130:Core/Src/main.c ****     __WFI();
 797              		.loc 1 130 5 view .LVU194
 798 0044 234D     		ldr	r5, .L54+8
 799 0046 244C     		ldr	r4, .L54+12
 800 0048 0A22     		movs	r2, #10
 801 004a 2946     		mov	r1, r5
 802 004c 2046     		mov	r0, r4
 803 004e FFF7FEFF 		bl	HAL_UART_Receive_DMA
 804              	.LVL49:
 131:Core/Src/main.c ****     HAL_UART_Transmit_DMA(&huart2, &buffer, 10);
 805              		.loc 1 131 5 view .LVU195
 806              		.syntax unified
 807              	@ 131 "Core/Src/main.c" 1
 808 0052 30BF     		wfi
 809              	@ 0 "" 2
 132:Core/Src/main.c ****     
 810              		.loc 1 132 5 view .LVU196
 811              		.thumb
 812              		.syntax unified
ARM GAS  /tmp/cc1J8E70.s 			page 27


 813 0054 0A22     		movs	r2, #10
 814 0056 2946     		mov	r1, r5
 815 0058 2046     		mov	r0, r4
 816 005a FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 817              	.LVL50:
 135:Core/Src/main.c **** 		   {
 818              		.loc 1 135 5 view .LVU197
 819 005e 1F4B     		ldr	r3, .L54+16
 820 0060 1B68     		ldr	r3, [r3]
 821 0062 012B     		cmp	r3, #1
 822 0064 09D0     		beq	.L48
 823 0066 022B     		cmp	r3, #2
 824 0068 15D0     		beq	.L49
 825 006a 002B     		cmp	r3, #0
 826 006c D9D0     		beq	.L53
 157:Core/Src/main.c ****                      	 break;
 827              		.loc 1 157 24 view .LVU198
 828 006e 0022     		movs	r2, #0
 829 0070 2021     		movs	r1, #32
 830 0072 1748     		ldr	r0, .L54+4
 831 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 832              	.LVL51:
 158:Core/Src/main.c ****                   }
 833              		.loc 1 158 24 view .LVU199
 834 0078 E4E7     		b	.L47
 835              	.L48:
 144:Core/Src/main.c ****                         HAL_Delay(1000);
 836              		.loc 1 144 25 view .LVU200
 837 007a 0122     		movs	r2, #1
 838 007c 2021     		movs	r1, #32
 839 007e 1448     		ldr	r0, .L54+4
 840 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 841              	.LVL52:
 145:Core/Src/main.c ****                         nb_push_second++;
 842              		.loc 1 145 25 view .LVU201
 843 0084 4FF47A70 		mov	r0, #1000
 844 0088 FFF7FEFF 		bl	HAL_Delay
 845              	.LVL53:
 146:Core/Src/main.c ****                         break;
 846              		.loc 1 146 25 view .LVU202
 146:Core/Src/main.c ****                         break;
 847              		.loc 1 146 39 is_stmt 0 view .LVU203
 848 008c 144A     		ldr	r2, .L54+20
 849 008e 1388     		ldrh	r3, [r2]
 850 0090 0133     		adds	r3, r3, #1
 851 0092 1380     		strh	r3, [r2]	@ movhi
 147:Core/Src/main.c ****                      case 2:
 852              		.loc 1 147 25 is_stmt 1 view .LVU204
 853 0094 D6E7     		b	.L47
 854              	.L49:
 149:Core/Src/main.c ****     			 HAL_Delay(1000);
 855              		.loc 1 149 25 view .LVU205
 856 0096 0E4D     		ldr	r5, .L54+4
 857 0098 0122     		movs	r2, #1
 858 009a 2021     		movs	r1, #32
 859 009c 2846     		mov	r0, r5
 860 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc1J8E70.s 			page 28


 861              	.LVL54:
 150:Core/Src/main.c ****     			 nb_push_second++;
 862              		.loc 1 150 9 view .LVU206
 863 00a2 4FF47A70 		mov	r0, #1000
 864 00a6 FFF7FEFF 		bl	HAL_Delay
 865              	.LVL55:
 151:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 866              		.loc 1 151 9 view .LVU207
 151:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 867              		.loc 1 151 23 is_stmt 0 view .LVU208
 868 00aa 0D4C     		ldr	r4, .L54+20
 869 00ac 2388     		ldrh	r3, [r4]
 870 00ae 0133     		adds	r3, r3, #1
 871 00b0 2380     		strh	r3, [r4]	@ movhi
 152:Core/Src/main.c ****     			 HAL_Delay(1000);
 872              		.loc 1 152 9 is_stmt 1 view .LVU209
 873 00b2 0022     		movs	r2, #0
 874 00b4 2021     		movs	r1, #32
 875 00b6 2846     		mov	r0, r5
 876 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 877              	.LVL56:
 153:Core/Src/main.c ****     			 nb_push_second++;
 878              		.loc 1 153 9 view .LVU210
 879 00bc 4FF47A70 		mov	r0, #1000
 880 00c0 FFF7FEFF 		bl	HAL_Delay
 881              	.LVL57:
 154:Core/Src/main.c ****     			 break;
 882              		.loc 1 154 9 view .LVU211
 154:Core/Src/main.c ****     			 break;
 883              		.loc 1 154 23 is_stmt 0 view .LVU212
 884 00c4 2388     		ldrh	r3, [r4]
 885 00c6 0133     		adds	r3, r3, #1
 886 00c8 2380     		strh	r3, [r4]	@ movhi
 155:Core/Src/main.c ****                      default:
 887              		.loc 1 155 9 is_stmt 1 view .LVU213
 888 00ca BBE7     		b	.L47
 889              	.L55:
 890              		.align	2
 891              	.L54:
 892 00cc 00000000 		.word	htim10
 893 00d0 00000240 		.word	1073872896
 894 00d4 00000000 		.word	buffer
 895 00d8 00000000 		.word	huart2
 896 00dc 00000000 		.word	.LANCHOR1
 897 00e0 00000000 		.word	.LANCHOR0
 898              		.cfi_endproc
 899              	.LFE131:
 901              		.comm	buffer,4,4
 902              		.global	state
 903              		.global	nb_push_second
 904              		.comm	timer_val,2,2
 905              		.comm	uart_buf_len,4,4
 906              		.comm	uart_buf,50,4
 907              		.comm	hdma_usart2_tx,96,4
 908              		.comm	hdma_usart2_rx,96,4
 909              		.comm	huart2,68,4
 910              		.comm	htim10,72,4
ARM GAS  /tmp/cc1J8E70.s 			page 29


 911              		.section	.bss.nb_push_second,"aw",%nobits
 912              		.align	1
 913              		.set	.LANCHOR0,. + 0
 916              	nb_push_second:
 917 0000 0000     		.space	2
 918              		.section	.bss.state,"aw",%nobits
 919              		.align	2
 920              		.set	.LANCHOR1,. + 0
 923              	state:
 924 0000 00000000 		.space	4
 925              		.text
 926              	.Letext0:
 927              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 928              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 929              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 930              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 931              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 932              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 933              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 934              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 935              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 936              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 937              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 938              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 939              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 940              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 941              		.file 17 "<built-in>"
ARM GAS  /tmp/cc1J8E70.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc1J8E70.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc1J8E70.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc1J8E70.s:143    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/cc1J8E70.s:150    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc1J8E70.s:156    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc1J8E70.s:217    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/cc1J8E70.s:222    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc1J8E70.s:229    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc1J8E70.s:243    .rodata.HAL_GPIO_EXTI_Callback.str1.4:0000000000000000 $d
     /tmp/cc1J8E70.s:259    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cc1J8E70.s:266    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cc1J8E70.s:409    .text.HAL_GPIO_EXTI_Callback:0000000000000098 $d
                            *COM*:0000000000000044 huart2
     /tmp/cc1J8E70.s:421    .text.Error_Handler:0000000000000000 $t
     /tmp/cc1J8E70.s:428    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc1J8E70.s:460    .text.MX_TIM10_Init:0000000000000000 $t
     /tmp/cc1J8E70.s:466    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
     /tmp/cc1J8E70.s:515    .text.MX_TIM10_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim10
     /tmp/cc1J8E70.s:521    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc1J8E70.s:527    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc1J8E70.s:582    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/cc1J8E70.s:588    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc1J8E70.s:595    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc1J8E70.s:724    .text.SystemClock_Config:0000000000000084 $d
     /tmp/cc1J8E70.s:730    .text.main:0000000000000000 $t
     /tmp/cc1J8E70.s:737    .text.main:0000000000000000 main
     /tmp/cc1J8E70.s:892    .text.main:00000000000000cc $d
                            *COM*:0000000000000004 buffer
     /tmp/cc1J8E70.s:923    .bss.state:0000000000000000 state
     /tmp/cc1J8E70.s:916    .bss.nb_push_second:0000000000000000 nb_push_second
                            *COM*:0000000000000002 timer_val
                            *COM*:0000000000000004 uart_buf_len
                            *COM*:0000000000000032 uart_buf
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_usart2_rx
     /tmp/cc1J8E70.s:912    .bss.nb_push_second:0000000000000000 $d
     /tmp/cc1J8E70.s:919    .bss.state:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_ReadPin
HAL_UART_Transmit_DMA
HAL_TIM_Base_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
HAL_UART_Receive_DMA
ARM GAS  /tmp/cc1J8E70.s 			page 31


