ARM GAS  /tmp/cckL8aRb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB136:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cckL8aRb.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** typedef struct {
  35:Core/Src/main.c **** 	char magic[8];
  36:Core/Src/main.c **** 	char idx;
  37:Core/Src/main.c **** 	char data[256];
  38:Core/Src/main.c **** } data_store_t;
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c ****  TIM_HandleTypeDef htim10;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart2;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c ****   char uart_buf[50];
  56:Core/Src/main.c ****   int uart_buf_len;
  57:Core/Src/main.c ****   uint16_t timer_val;
  58:Core/Src/main.c ****   uint16_t nb_push_second = 0; //nombre de seconde entre appuie et relachement 
  59:Core/Src/main.c ****   size_t state = 0;
  60:Core/Src/main.c ****   
  61:Core/Src/main.c ****   uint8_t buffer;
  62:Core/Src/main.c ****   
  63:Core/Src/main.c ****   static const data_store_t datastore __attribute__((__section__(".datastore"))) = {    // mémoire
  64:Core/Src/main.c **** 	.idx = 10,
  65:Core/Src/main.c **** 	.magic = "M4GIKNB",
  66:Core/Src/main.c **** 	.data = "alexandre"
  67:Core/Src/main.c ****   };
  68:Core/Src/main.c ****   
  69:Core/Src/main.c ****   size_t mdp_max_size = 10;
  70:Core/Src/main.c ****   size_t mdp_size = 0;
  71:Core/Src/main.c ****   uint8_t mdp[10];
  72:Core/Src/main.c ****   
  73:Core/Src/main.c ****   size_t mdp_try_size = 0;
  74:Core/Src/main.c ****   uint8_t mdp_try[10];
  75:Core/Src/main.c ****   
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   
  78:Core/Src/main.c **** /* USER CODE END PV */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  81:Core/Src/main.c **** void SystemClock_Config(void);
  82:Core/Src/main.c **** static void MX_GPIO_Init(void);
  83:Core/Src/main.c **** static void MX_TIM10_Init(void);
  84:Core/Src/main.c **** static void MX_DMA_Init(void);
  85:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  86:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  /tmp/cckL8aRb.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
  94:Core/Src/main.c **** 	
  95:Core/Src/main.c **** 	if(state == 0){
  96:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
  97:Core/Src/main.c **** 		if(buffer == '\r')
  98:Core/Src/main.c **** 		{
  99:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, "End of MDP ! There is \' ", 24, 100);
 100:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, mdp, mdp_size, 100);
 101:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, " \'\r\n", 3, 100);
 102:Core/Src/main.c **** 			state = 1;
 103:Core/Src/main.c **** 		}	
 104:Core/Src/main.c **** 		else
 105:Core/Src/main.c **** 			if (mdp_size >= mdp_max_size){
 106:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 107:Core/Src/main.c **** 				mdp_size = 0;
 108:Core/Src/main.c **** 			}else{
 109:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, &buffer, 1, 10);
 110:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 111:Core/Src/main.c **** 				mdp[mdp_size++] = buffer;
 112:Core/Src/main.c **** 			}		
 113:Core/Src/main.c **** 	}
 114:Core/Src/main.c **** 	else if(state == 1){
 115:Core/Src/main.c **** 	
 116:Core/Src/main.c **** 		if(mdp_try_size==0){
 117:Core/Src/main.c **** 			nb_push_second = 0;
 118:Core/Src/main.c **** 		}
 119:Core/Src/main.c **** 		
 120:Core/Src/main.c **** 		if(nb_push_second > 30)
 121:Core/Src/main.c **** 		{
 122:Core/Src/main.c **** 			//HAL_DMA_Abort(DMA1_Stream5_IRQn);
 123:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, "End reception of the try !\r\n", 15, 100);
 124:Core/Src/main.c **** 			return;
 125:Core/Src/main.c **** 		}
 126:Core/Src/main.c **** 	
 127:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "[TRY] Received : ", 17, 10);
 128:Core/Src/main.c **** 		
 129:Core/Src/main.c **** 		
 130:Core/Src/main.c **** 		if(buffer == '\r')
 131:Core/Src/main.c **** 		{
 132:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, "End of TRY ! \r\n", 15, 100);
 133:Core/Src/main.c **** 			if((mdp_try_size == mdp_size) && (strncmp(mdp,mdp_try,mdp_size) == 0)){
 134:Core/Src/main.c **** 				state = 2;
 135:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 136:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2,"1 --> 2\r\n", 11,100);
 137:Core/Src/main.c **** 				mdp_try_size = 0;
 138:Core/Src/main.c **** 			} else {
 139:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Failed ! \r\n", 25, 100);
 140:Core/Src/main.c **** 				mdp_try_size = 0;
 141:Core/Src/main.c **** 			}
 142:Core/Src/main.c **** 			
 143:Core/Src/main.c **** 		}	
 144:Core/Src/main.c **** 		else{
 145:Core/Src/main.c **** 			if (mdp_try_size >= mdp_max_size){
ARM GAS  /tmp/cckL8aRb.s 			page 4


 146:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 147:Core/Src/main.c **** 				mdp_try_size = 0;
 148:Core/Src/main.c **** 			}else{
 149:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, &buffer, 1, 10);
 150:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 151:Core/Src/main.c **** 				mdp_try[mdp_try_size++] = buffer;
 152:Core/Src/main.c **** 				HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 153:Core/Src/main.c **** 			}
 154:Core/Src/main.c **** 		}
 155:Core/Src/main.c **** 	}
 156:Core/Src/main.c **** 	
 157:Core/Src/main.c **** 	
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /*
 161:Core/Src/main.c **** 	~~~   Note Utile ~~~
 162:Core/Src/main.c **** 	
 163:Core/Src/main.c **** 	Pour écrire un retour à la ligne il faut un \r\n 
 164:Core/Src/main.c **** 	Pour capter un retour à la ligne il faut capté \r
 165:Core/Src/main.c **** */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /* USER CODE END 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /**
 171:Core/Src/main.c ****   * @brief  The application entry point.
 172:Core/Src/main.c ****   * @retval int
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c **** int main(void)
 175:Core/Src/main.c **** {
 176:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END 1 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 183:Core/Src/main.c ****   HAL_Init();
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END Init */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* Configure the system clock */
 190:Core/Src/main.c ****   SystemClock_Config();
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END SysInit */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* Initialize all configured peripherals */
 197:Core/Src/main.c ****   MX_GPIO_Init();
 198:Core/Src/main.c ****   MX_TIM10_Init();
 199:Core/Src/main.c ****   MX_DMA_Init();
 200:Core/Src/main.c ****   MX_USART2_UART_Init();
 201:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/cckL8aRb.s 			page 5


 203:Core/Src/main.c ****   // Start timer
 204:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim10);
 205:Core/Src/main.c ****   
 206:Core/Src/main.c ****   //TODO décommenter pour voir élément dans la mémoire 
 207:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, &datastore, sizeof(datastore), 200);
 208:Core/Src/main.c ****   
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END 2 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* Infinite loop */
 213:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 214:Core/Src/main.c ****   while (1)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 219:Core/Src/main.c ****     
 220:Core/Src/main.c ****     
 221:Core/Src/main.c ****     
 222:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, &buffer, 10, 10);
 223:Core/Src/main.c ****     
 224:Core/Src/main.c ****     
 225:Core/Src/main.c ****     switch( state )
 226:Core/Src/main.c **** 		   {
 227:Core/Src/main.c **** 		      case 0:   // state 0 : carte non configuré
 228:Core/Src/main.c **** 		        // TODO initialisation de la carte ? 
 229:Core/Src/main.c **** 		        
 230:Core/Src/main.c **** 		        HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 231:Core/Src/main.c **** 		        
 232:Core/Src/main.c **** 		        // si carte pas initialisé clé de chiffrement &mot de passe vide sinon clé et mot de p
 233:Core/Src/main.c **** 		        // clé et mot de passe en flash utile que mise hors tenssion de la carte.
 234:Core/Src/main.c **** 		        //  commande d'initialisation mot de passe  "./mon-script init "mon-mot-de-passe"
 235:Core/Src/main.c **** 		        //	tant que clé et mots de passe sont NULL alors on est à létat 0 sinon on passe état
 236:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 237:Core/Src/main.c ****     			 HAL_Delay(100);
 238:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 239:Core/Src/main.c ****     			 HAL_Delay(100);
 240:Core/Src/main.c ****     			 break;
 241:Core/Src/main.c ****                      case 1:   // state 1 : carte vérouillé
 242:Core/Src/main.c ****                      	 // pour dévérouillé on appuie et on a 30s pour écrire le mot de passe 
 243:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 244:Core/Src/main.c ****                         HAL_Delay(1000);
 245:Core/Src/main.c ****                         nb_push_second++;
 246:Core/Src/main.c ****                         break;
 247:Core/Src/main.c ****                      case 2:   // state 3 : carte dévérouillé
 248:Core/Src/main.c ****                      	 //une fois la carte dévérouiller elle peux effectuer le chiffrement d'un f
 249:Core/Src/main.c ****                      	 
 250:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 251:Core/Src/main.c ****     			 HAL_Delay(1000);
 252:Core/Src/main.c ****     			 nb_push_second++;
 253:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 254:Core/Src/main.c ****     			 HAL_Delay(1000);
 255:Core/Src/main.c ****     			 nb_push_second++;
 256:Core/Src/main.c ****     			 break;
 257:Core/Src/main.c ****                      default:
 258:Core/Src/main.c ****                      	 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 259:Core/Src/main.c ****                      	 break;
ARM GAS  /tmp/cckL8aRb.s 			page 6


 260:Core/Src/main.c ****                   }
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   /* USER CODE END 3 */
 263:Core/Src/main.c **** }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /**
 266:Core/Src/main.c ****   * @brief System Clock Configuration
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** void SystemClock_Config(void)
 270:Core/Src/main.c **** {
 271:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 272:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 277:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 280:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 283:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 284:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 285:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 286:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 294:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 295:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 296:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     Error_Handler();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****   * @brief TIM10 Initialization Function
 308:Core/Src/main.c ****   * @param None
 309:Core/Src/main.c ****   * @retval None
 310:Core/Src/main.c ****   */
 311:Core/Src/main.c **** static void MX_TIM10_Init(void)
 312:Core/Src/main.c **** {
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 0 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END TIM10_Init 0 */
ARM GAS  /tmp/cckL8aRb.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 1 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END TIM10_Init 1 */
 321:Core/Src/main.c ****   htim10.Instance = TIM10;
 322:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 323:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 324:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 325:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 326:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 327:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 2 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END TIM10_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief USART2 Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 352:Core/Src/main.c ****   huart2.Instance = USART2;
 353:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 354:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 355:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 356:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 357:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 358:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 359:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 360:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * Enable DMA controller clock
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_DMA_Init(void)
ARM GAS  /tmp/cckL8aRb.s 			page 8


 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* DMA controller clock enable */
 377:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* DMA interrupt init */
 380:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 381:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 1, 0);
 382:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 383:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 384:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 385:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** }
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** /**
 390:Core/Src/main.c ****   * @brief GPIO Initialization Function
 391:Core/Src/main.c ****   * @param None
 392:Core/Src/main.c ****   * @retval None
 393:Core/Src/main.c ****   */
 394:Core/Src/main.c **** static void MX_GPIO_Init(void)
 395:Core/Src/main.c **** {
  28              		.loc 1 395 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 396:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 396 3 view .LVU1
  42              		.loc 1 396 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 399:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 399 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 399 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 399 3 view .LVU5
  54 0012 1C4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 399 3 view .LVU6
ARM GAS  /tmp/cckL8aRb.s 			page 9


  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 399 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 399 3 view .LVU8
 400:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 400 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 400 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 400 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 400 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 400 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 400 3 view .LVU14
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 403:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  82              		.loc 1 403 3 view .LVU15
  83 003a 134D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 406:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  89              		.loc 1 406 3 view .LVU16
  90              		.loc 1 406 23 is_stmt 0 view .LVU17
  91 0046 4FF40053 		mov	r3, #8192
  92 004a 0393     		str	r3, [sp, #12]
 407:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  93              		.loc 1 407 3 is_stmt 1 view .LVU18
  94              		.loc 1 407 24 is_stmt 0 view .LVU19
  95 004c 4FF44413 		mov	r3, #3211264
  96 0050 0493     		str	r3, [sp, #16]
 408:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 408 3 is_stmt 1 view .LVU20
  98              		.loc 1 408 24 is_stmt 0 view .LVU21
  99 0052 0594     		str	r4, [sp, #20]
 409:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 100              		.loc 1 409 3 is_stmt 1 view .LVU22
 101 0054 03A9     		add	r1, sp, #12
 102 0056 0D48     		ldr	r0, .L3+8
 103 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 410:Core/Src/main.c **** 
ARM GAS  /tmp/cckL8aRb.s 			page 10


 411:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 412:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 105              		.loc 1 412 3 view .LVU23
 106              		.loc 1 412 23 is_stmt 0 view .LVU24
 107 005c 2023     		movs	r3, #32
 108 005e 0393     		str	r3, [sp, #12]
 413:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 413 3 is_stmt 1 view .LVU25
 110              		.loc 1 413 24 is_stmt 0 view .LVU26
 111 0060 0123     		movs	r3, #1
 112 0062 0493     		str	r3, [sp, #16]
 414:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 414 3 is_stmt 1 view .LVU27
 114              		.loc 1 414 24 is_stmt 0 view .LVU28
 115 0064 0594     		str	r4, [sp, #20]
 415:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 415 3 is_stmt 1 view .LVU29
 117              		.loc 1 415 25 is_stmt 0 view .LVU30
 118 0066 0694     		str	r4, [sp, #24]
 416:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119              		.loc 1 416 3 is_stmt 1 view .LVU31
 120 0068 03A9     		add	r1, sp, #12
 121 006a 2846     		mov	r0, r5
 122 006c FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* EXTI interrupt init*/
 419:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 124              		.loc 1 419 3 view .LVU32
 125 0070 2246     		mov	r2, r4
 126 0072 2146     		mov	r1, r4
 127 0074 2820     		movs	r0, #40
 128 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 129              	.LVL3:
 420:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 130              		.loc 1 420 3 view .LVU33
 131 007a 2820     		movs	r0, #40
 132 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 133              	.LVL4:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** }
 134              		.loc 1 422 1 is_stmt 0 view .LVU34
 135 0080 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0082 30BD     		pop	{r4, r5, pc}
 140              	.L4:
 141              		.align	2
 142              	.L3:
 143 0084 00380240 		.word	1073887232
 144 0088 00000240 		.word	1073872896
 145 008c 00080240 		.word	1073874944
 146              		.cfi_endproc
 147              	.LFE136:
 149              		.section	.text.MX_DMA_Init,"ax",%progbits
 150              		.align	1
ARM GAS  /tmp/cckL8aRb.s 			page 11


 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	MX_DMA_Init:
 157              	.LFB135:
 374:Core/Src/main.c **** 
 158              		.loc 1 374 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 16
 377:Core/Src/main.c **** 
 170              		.loc 1 377 3 view .LVU36
 171              	.LBB6:
 377:Core/Src/main.c **** 
 172              		.loc 1 377 3 view .LVU37
 173 0004 0024     		movs	r4, #0
 174 0006 0194     		str	r4, [sp, #4]
 377:Core/Src/main.c **** 
 175              		.loc 1 377 3 view .LVU38
 176 0008 0D4B     		ldr	r3, .L7
 177 000a 1A6B     		ldr	r2, [r3, #48]
 178 000c 42F40012 		orr	r2, r2, #2097152
 179 0010 1A63     		str	r2, [r3, #48]
 377:Core/Src/main.c **** 
 180              		.loc 1 377 3 view .LVU39
 181 0012 1B6B     		ldr	r3, [r3, #48]
 182 0014 03F40013 		and	r3, r3, #2097152
 183 0018 0193     		str	r3, [sp, #4]
 377:Core/Src/main.c **** 
 184              		.loc 1 377 3 view .LVU40
 185 001a 019B     		ldr	r3, [sp, #4]
 186              	.LBE6:
 377:Core/Src/main.c **** 
 187              		.loc 1 377 3 view .LVU41
 381:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 188              		.loc 1 381 3 view .LVU42
 189 001c 2246     		mov	r2, r4
 190 001e 0121     		movs	r1, #1
 191 0020 1020     		movs	r0, #16
 192 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL5:
 382:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 194              		.loc 1 382 3 view .LVU43
 195 0026 1020     		movs	r0, #16
 196 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL6:
 384:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 198              		.loc 1 384 3 view .LVU44
ARM GAS  /tmp/cckL8aRb.s 			page 12


 199 002c 2246     		mov	r2, r4
 200 002e 2146     		mov	r1, r4
 201 0030 1120     		movs	r0, #17
 202 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL7:
 385:Core/Src/main.c **** 
 204              		.loc 1 385 3 view .LVU45
 205 0036 1120     		movs	r0, #17
 206 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL8:
 387:Core/Src/main.c **** 
 208              		.loc 1 387 1 is_stmt 0 view .LVU46
 209 003c 02B0     		add	sp, sp, #8
 210              	.LCFI5:
 211              		.cfi_def_cfa_offset 8
 212              		@ sp needed
 213 003e 10BD     		pop	{r4, pc}
 214              	.L8:
 215              		.align	2
 216              	.L7:
 217 0040 00380240 		.word	1073887232
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 222              		.align	2
 223              	.LC0:
 224 0000 52656365 		.ascii	"Received : \000"
 224      69766564 
 224      203A2000 
 225              		.align	2
 226              	.LC1:
 227 000c 456E6420 		.ascii	"End of MDP ! There is ' \000"
 227      6F66204D 
 227      44502021 
 227      20546865 
 227      72652069 
 228 0025 000000   		.align	2
 229              	.LC2:
 230 0028 20270D0A 		.ascii	" '\015\012\000"
 230      00
 231 002d 000000   		.align	2
 232              	.LC3:
 233 0030 596F7572 		.ascii	"Your MDP is too long, rewrite it please with max 10"
 233      204D4450 
 233      20697320 
 233      746F6F20 
 233      6C6F6E67 
 234 0063 20636172 		.ascii	" caracters\015\012\000"
 234      61637465 
 234      72730D0A 
 234      00
 235              		.align	2
 236              	.LC4:
 237 0070 0D0A00   		.ascii	"\015\012\000"
 238 0073 00       		.align	2
 239              	.LC5:
 240 0074 456E6420 		.ascii	"End reception of the try !\015\012\000"
ARM GAS  /tmp/cckL8aRb.s 			page 13


 240      72656365 
 240      7074696F 
 240      6E206F66 
 240      20746865 
 241 0091 000000   		.align	2
 242              	.LC6:
 243 0094 5B545259 		.ascii	"[TRY] Received : \000"
 243      5D205265 
 243      63656976 
 243      6564203A 
 243      2000
 244 00a6 0000     		.align	2
 245              	.LC7:
 246 00a8 456E6420 		.ascii	"End of TRY ! \015\012\000"
 246      6F662054 
 246      52592021 
 246      200D0A00 
 247              		.align	2
 248              	.LC8:
 249 00b8 44657665 		.ascii	"Deverouillage Done ! \015\012\000"
 249      726F7569 
 249      6C6C6167 
 249      6520446F 
 249      6E652021 
 250              		.align	2
 251              	.LC9:
 252 00d0 31202D2D 		.ascii	"1 --> 2\015\012\000"
 252      3E20320D 
 252      0A00
 253 00da 0000     		.align	2
 254              	.LC10:
 255 00dc 44657665 		.ascii	"Deverouillage Failed ! \015\012\000"
 255      726F7569 
 255      6C6C6167 
 255      65204661 
 255      696C6564 
 256              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 257              		.align	1
 258              		.global	HAL_UART_RxCpltCallback
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv4-sp-d16
 264              	HAL_UART_RxCpltCallback:
 265              	.LVL9:
 266              	.LFB130:
  93:Core/Src/main.c **** 	
 267              		.loc 1 93 56 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/main.c **** 	
 271              		.loc 1 93 56 is_stmt 0 view .LVU48
 272 0000 38B5     		push	{r3, r4, r5, lr}
 273              	.LCFI6:
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 3, -16
ARM GAS  /tmp/cckL8aRb.s 			page 14


 276              		.cfi_offset 4, -12
 277              		.cfi_offset 5, -8
 278              		.cfi_offset 14, -4
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 279              		.loc 1 95 2 is_stmt 1 view .LVU49
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 280              		.loc 1 95 11 is_stmt 0 view .LVU50
 281 0002 614B     		ldr	r3, .L26
 282 0004 1B68     		ldr	r3, [r3]
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 283              		.loc 1 95 4 view .LVU51
 284 0006 13B1     		cbz	r3, .L20
 114:Core/Src/main.c **** 	
 285              		.loc 1 114 7 is_stmt 1 view .LVU52
 114:Core/Src/main.c **** 	
 286              		.loc 1 114 9 is_stmt 0 view .LVU53
 287 0008 012B     		cmp	r3, #1
 288 000a 48D0     		beq	.L21
 289              	.LVL10:
 290              	.L9:
 158:Core/Src/main.c **** 
 291              		.loc 1 158 1 view .LVU54
 292 000c 38BD     		pop	{r3, r4, r5, pc}
 293              	.LVL11:
 294              	.L20:
  96:Core/Src/main.c **** 		if(buffer == '\r')
 295              		.loc 1 96 3 is_stmt 1 view .LVU55
 296 000e 0A23     		movs	r3, #10
 297 0010 0B22     		movs	r2, #11
 298 0012 5E49     		ldr	r1, .L26+4
 299 0014 5E48     		ldr	r0, .L26+8
 300              	.LVL12:
  96:Core/Src/main.c **** 		if(buffer == '\r')
 301              		.loc 1 96 3 is_stmt 0 view .LVU56
 302 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 303              	.LVL13:
  97:Core/Src/main.c **** 		{
 304              		.loc 1 97 3 is_stmt 1 view .LVU57
  97:Core/Src/main.c **** 		{
 305              		.loc 1 97 13 is_stmt 0 view .LVU58
 306 001a 5E4B     		ldr	r3, .L26+12
 307 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97:Core/Src/main.c **** 		{
 308              		.loc 1 97 5 view .LVU59
 309 001e 0D2B     		cmp	r3, #13
 310 0020 0FD0     		beq	.L22
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 311              		.loc 1 105 4 is_stmt 1 view .LVU60
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 312              		.loc 1 105 17 is_stmt 0 view .LVU61
 313 0022 5D4B     		ldr	r3, .L26+16
 314 0024 1A68     		ldr	r2, [r3]
 315 0026 5D4B     		ldr	r3, .L26+20
 316 0028 1B68     		ldr	r3, [r3]
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 317              		.loc 1 105 7 view .LVU62
 318 002a 9A42     		cmp	r2, r3
ARM GAS  /tmp/cckL8aRb.s 			page 15


 319 002c 21D3     		bcc	.L13
 106:Core/Src/main.c **** 				mdp_size = 0;
 320              		.loc 1 106 5 is_stmt 1 view .LVU63
 321 002e 6423     		movs	r3, #100
 322 0030 3F22     		movs	r2, #63
 323 0032 5B49     		ldr	r1, .L26+24
 324 0034 5648     		ldr	r0, .L26+8
 325 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 326              	.LVL14:
 107:Core/Src/main.c **** 			}else{
 327              		.loc 1 107 5 view .LVU64
 107:Core/Src/main.c **** 			}else{
 328              		.loc 1 107 14 is_stmt 0 view .LVU65
 329 003a 574B     		ldr	r3, .L26+16
 330 003c 0022     		movs	r2, #0
 331 003e 1A60     		str	r2, [r3]
 332 0040 E4E7     		b	.L9
 333              	.L22:
  99:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, mdp, mdp_size, 100);
 334              		.loc 1 99 4 is_stmt 1 view .LVU66
 335 0042 534C     		ldr	r4, .L26+8
 336 0044 6423     		movs	r3, #100
 337 0046 1822     		movs	r2, #24
 338 0048 5649     		ldr	r1, .L26+28
 339 004a 2046     		mov	r0, r4
 340 004c FFF7FEFF 		bl	HAL_UART_Transmit
 341              	.LVL15:
 100:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, " \'\r\n", 3, 100);
 342              		.loc 1 100 4 view .LVU67
 343 0050 6423     		movs	r3, #100
 344 0052 514A     		ldr	r2, .L26+16
 345 0054 1288     		ldrh	r2, [r2]
 346 0056 5449     		ldr	r1, .L26+32
 347 0058 2046     		mov	r0, r4
 348 005a FFF7FEFF 		bl	HAL_UART_Transmit
 349              	.LVL16:
 101:Core/Src/main.c **** 			state = 1;
 350              		.loc 1 101 4 view .LVU68
 351 005e 6423     		movs	r3, #100
 352 0060 0322     		movs	r2, #3
 353 0062 5249     		ldr	r1, .L26+36
 354 0064 2046     		mov	r0, r4
 355 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 356              	.LVL17:
 102:Core/Src/main.c **** 		}	
 357              		.loc 1 102 4 view .LVU69
 102:Core/Src/main.c **** 		}	
 358              		.loc 1 102 10 is_stmt 0 view .LVU70
 359 006a 474B     		ldr	r3, .L26
 360 006c 0122     		movs	r2, #1
 361 006e 1A60     		str	r2, [r3]
 362 0070 CCE7     		b	.L9
 363              	.L13:
 109:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 364              		.loc 1 109 5 is_stmt 1 view .LVU71
 365 0072 484C     		ldr	r4, .L26+12
 366 0074 464D     		ldr	r5, .L26+8
ARM GAS  /tmp/cckL8aRb.s 			page 16


 367 0076 0A23     		movs	r3, #10
 368 0078 0122     		movs	r2, #1
 369 007a 2146     		mov	r1, r4
 370 007c 2846     		mov	r0, r5
 371 007e FFF7FEFF 		bl	HAL_UART_Transmit
 372              	.LVL18:
 110:Core/Src/main.c **** 				mdp[mdp_size++] = buffer;
 373              		.loc 1 110 5 view .LVU72
 374 0082 6423     		movs	r3, #100
 375 0084 0222     		movs	r2, #2
 376 0086 4A49     		ldr	r1, .L26+40
 377 0088 2846     		mov	r0, r5
 378 008a FFF7FEFF 		bl	HAL_UART_Transmit
 379              	.LVL19:
 111:Core/Src/main.c **** 			}		
 380              		.loc 1 111 5 view .LVU73
 111:Core/Src/main.c **** 			}		
 381              		.loc 1 111 17 is_stmt 0 view .LVU74
 382 008e 424A     		ldr	r2, .L26+16
 383 0090 1368     		ldr	r3, [r2]
 384 0092 591C     		adds	r1, r3, #1
 385 0094 1160     		str	r1, [r2]
 111:Core/Src/main.c **** 			}		
 386              		.loc 1 111 21 view .LVU75
 387 0096 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 388 0098 434A     		ldr	r2, .L26+32
 389 009a D154     		strb	r1, [r2, r3]
 390 009c B6E7     		b	.L9
 391              	.LVL20:
 392              	.L21:
 116:Core/Src/main.c **** 			nb_push_second = 0;
 393              		.loc 1 116 3 is_stmt 1 view .LVU76
 116:Core/Src/main.c **** 			nb_push_second = 0;
 394              		.loc 1 116 18 is_stmt 0 view .LVU77
 395 009e 454B     		ldr	r3, .L26+44
 396 00a0 1B68     		ldr	r3, [r3]
 116:Core/Src/main.c **** 			nb_push_second = 0;
 397              		.loc 1 116 5 view .LVU78
 398 00a2 13B9     		cbnz	r3, .L14
 117:Core/Src/main.c **** 		}
 399              		.loc 1 117 4 is_stmt 1 view .LVU79
 117:Core/Src/main.c **** 		}
 400              		.loc 1 117 19 is_stmt 0 view .LVU80
 401 00a4 444B     		ldr	r3, .L26+48
 402 00a6 0022     		movs	r2, #0
 403 00a8 1A80     		strh	r2, [r3]	@ movhi
 404              	.L14:
 120:Core/Src/main.c **** 		{
 405              		.loc 1 120 3 is_stmt 1 view .LVU81
 120:Core/Src/main.c **** 		{
 406              		.loc 1 120 21 is_stmt 0 view .LVU82
 407 00aa 434B     		ldr	r3, .L26+48
 408 00ac 1B88     		ldrh	r3, [r3]
 120:Core/Src/main.c **** 		{
 409              		.loc 1 120 5 view .LVU83
 410 00ae 1E2B     		cmp	r3, #30
 411 00b0 19D8     		bhi	.L23
ARM GAS  /tmp/cckL8aRb.s 			page 17


 127:Core/Src/main.c **** 		
 412              		.loc 1 127 3 is_stmt 1 view .LVU84
 413 00b2 0A23     		movs	r3, #10
 414 00b4 1122     		movs	r2, #17
 415 00b6 4149     		ldr	r1, .L26+52
 416 00b8 3548     		ldr	r0, .L26+8
 417              	.LVL21:
 127:Core/Src/main.c **** 		
 418              		.loc 1 127 3 is_stmt 0 view .LVU85
 419 00ba FFF7FEFF 		bl	HAL_UART_Transmit
 420              	.LVL22:
 130:Core/Src/main.c **** 		{
 421              		.loc 1 130 3 is_stmt 1 view .LVU86
 130:Core/Src/main.c **** 		{
 422              		.loc 1 130 13 is_stmt 0 view .LVU87
 423 00be 354B     		ldr	r3, .L26+12
 424 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:Core/Src/main.c **** 		{
 425              		.loc 1 130 5 view .LVU88
 426 00c2 0D2B     		cmp	r3, #13
 427 00c4 16D0     		beq	.L24
 145:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 428              		.loc 1 145 4 is_stmt 1 view .LVU89
 145:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 429              		.loc 1 145 21 is_stmt 0 view .LVU90
 430 00c6 3B4B     		ldr	r3, .L26+44
 431 00c8 1A68     		ldr	r2, [r3]
 432 00ca 344B     		ldr	r3, .L26+20
 433 00cc 1B68     		ldr	r3, [r3]
 145:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 434              		.loc 1 145 7 view .LVU91
 435 00ce 9A42     		cmp	r2, r3
 436 00d0 3FD3     		bcc	.L18
 146:Core/Src/main.c **** 				mdp_try_size = 0;
 437              		.loc 1 146 5 is_stmt 1 view .LVU92
 438 00d2 6423     		movs	r3, #100
 439 00d4 3F22     		movs	r2, #63
 440 00d6 3249     		ldr	r1, .L26+24
 441 00d8 2D48     		ldr	r0, .L26+8
 442 00da FFF7FEFF 		bl	HAL_UART_Transmit
 443              	.LVL23:
 147:Core/Src/main.c **** 			}else{
 444              		.loc 1 147 5 view .LVU93
 147:Core/Src/main.c **** 			}else{
 445              		.loc 1 147 18 is_stmt 0 view .LVU94
 446 00de 354B     		ldr	r3, .L26+44
 447 00e0 0022     		movs	r2, #0
 448 00e2 1A60     		str	r2, [r3]
 449 00e4 92E7     		b	.L9
 450              	.LVL24:
 451              	.L23:
 123:Core/Src/main.c **** 			return;
 452              		.loc 1 123 4 is_stmt 1 view .LVU95
 453 00e6 6423     		movs	r3, #100
 454 00e8 0F22     		movs	r2, #15
 455 00ea 3549     		ldr	r1, .L26+56
 456 00ec 2848     		ldr	r0, .L26+8
ARM GAS  /tmp/cckL8aRb.s 			page 18


 457              	.LVL25:
 123:Core/Src/main.c **** 			return;
 458              		.loc 1 123 4 is_stmt 0 view .LVU96
 459 00ee FFF7FEFF 		bl	HAL_UART_Transmit
 460              	.LVL26:
 124:Core/Src/main.c **** 		}
 461              		.loc 1 124 4 is_stmt 1 view .LVU97
 462 00f2 8BE7     		b	.L9
 463              	.L24:
 132:Core/Src/main.c **** 			if((mdp_try_size == mdp_size) && (strncmp(mdp,mdp_try,mdp_size) == 0)){
 464              		.loc 1 132 4 view .LVU98
 465 00f4 6423     		movs	r3, #100
 466 00f6 0F22     		movs	r2, #15
 467 00f8 3249     		ldr	r1, .L26+60
 468 00fa 2548     		ldr	r0, .L26+8
 469 00fc FFF7FEFF 		bl	HAL_UART_Transmit
 470              	.LVL27:
 133:Core/Src/main.c **** 				state = 2;
 471              		.loc 1 133 4 view .LVU99
 472              	.LBB7:
 133:Core/Src/main.c **** 				state = 2;
 473              		.loc 1 133 21 is_stmt 0 view .LVU100
 474 0100 2C4B     		ldr	r3, .L26+44
 475 0102 1B68     		ldr	r3, [r3]
 476 0104 244A     		ldr	r2, .L26+16
 477 0106 1268     		ldr	r2, [r2]
 133:Core/Src/main.c **** 				state = 2;
 478              		.loc 1 133 6 view .LVU101
 479 0108 9342     		cmp	r3, r2
 480 010a 04D1     		bne	.L17
 133:Core/Src/main.c **** 				state = 2;
 481              		.loc 1 133 38 discriminator 1 view .LVU102
 482 010c 2E49     		ldr	r1, .L26+64
 483 010e 2648     		ldr	r0, .L26+32
 484 0110 FFF7FEFF 		bl	strncmp
 485              	.LVL28:
 133:Core/Src/main.c **** 				state = 2;
 486              		.loc 1 133 34 discriminator 1 view .LVU103
 487 0114 48B1     		cbz	r0, .L25
 488              	.L17:
 139:Core/Src/main.c **** 				mdp_try_size = 0;
 489              		.loc 1 139 5 is_stmt 1 view .LVU104
 490 0116 6423     		movs	r3, #100
 491 0118 1922     		movs	r2, #25
 492 011a 2C49     		ldr	r1, .L26+68
 493 011c 1C48     		ldr	r0, .L26+8
 494 011e FFF7FEFF 		bl	HAL_UART_Transmit
 495              	.LVL29:
 140:Core/Src/main.c **** 			}
 496              		.loc 1 140 5 view .LVU105
 140:Core/Src/main.c **** 			}
 497              		.loc 1 140 18 is_stmt 0 view .LVU106
 498 0122 244B     		ldr	r3, .L26+44
 499 0124 0022     		movs	r2, #0
 500 0126 1A60     		str	r2, [r3]
 501 0128 70E7     		b	.L9
 502              	.L25:
ARM GAS  /tmp/cckL8aRb.s 			page 19


 134:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 503              		.loc 1 134 5 is_stmt 1 view .LVU107
 134:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 504              		.loc 1 134 11 is_stmt 0 view .LVU108
 505 012a 174B     		ldr	r3, .L26
 506 012c 0222     		movs	r2, #2
 507 012e 1A60     		str	r2, [r3]
 135:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2,"1 --> 2\r\n", 11,100);
 508              		.loc 1 135 5 is_stmt 1 view .LVU109
 509 0130 174C     		ldr	r4, .L26+8
 510 0132 6423     		movs	r3, #100
 511 0134 1722     		movs	r2, #23
 512 0136 2649     		ldr	r1, .L26+72
 513 0138 2046     		mov	r0, r4
 514 013a FFF7FEFF 		bl	HAL_UART_Transmit
 515              	.LVL30:
 136:Core/Src/main.c **** 				mdp_try_size = 0;
 516              		.loc 1 136 5 view .LVU110
 517 013e 6423     		movs	r3, #100
 518 0140 0B22     		movs	r2, #11
 519 0142 2449     		ldr	r1, .L26+76
 520 0144 2046     		mov	r0, r4
 521 0146 FFF7FEFF 		bl	HAL_UART_Transmit
 522              	.LVL31:
 137:Core/Src/main.c **** 			} else {
 523              		.loc 1 137 5 view .LVU111
 137:Core/Src/main.c **** 			} else {
 524              		.loc 1 137 18 is_stmt 0 view .LVU112
 525 014a 1A4B     		ldr	r3, .L26+44
 526 014c 0022     		movs	r2, #0
 527 014e 1A60     		str	r2, [r3]
 528 0150 5CE7     		b	.L9
 529              	.L18:
 530              	.LBE7:
 149:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 531              		.loc 1 149 5 is_stmt 1 view .LVU113
 532 0152 104D     		ldr	r5, .L26+12
 533 0154 0E4C     		ldr	r4, .L26+8
 534 0156 0A23     		movs	r3, #10
 535 0158 0122     		movs	r2, #1
 536 015a 2946     		mov	r1, r5
 537 015c 2046     		mov	r0, r4
 538 015e FFF7FEFF 		bl	HAL_UART_Transmit
 539              	.LVL32:
 150:Core/Src/main.c **** 				mdp_try[mdp_try_size++] = buffer;
 540              		.loc 1 150 5 view .LVU114
 541 0162 6423     		movs	r3, #100
 542 0164 0222     		movs	r2, #2
 543 0166 1249     		ldr	r1, .L26+40
 544 0168 2046     		mov	r0, r4
 545 016a FFF7FEFF 		bl	HAL_UART_Transmit
 546              	.LVL33:
 151:Core/Src/main.c **** 				HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 547              		.loc 1 151 5 view .LVU115
 151:Core/Src/main.c **** 				HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 548              		.loc 1 151 25 is_stmt 0 view .LVU116
 549 016e 114A     		ldr	r2, .L26+44
ARM GAS  /tmp/cckL8aRb.s 			page 20


 550 0170 1368     		ldr	r3, [r2]
 551 0172 591C     		adds	r1, r3, #1
 552 0174 1160     		str	r1, [r2]
 151:Core/Src/main.c **** 				HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 553              		.loc 1 151 29 view .LVU117
 554 0176 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 555 0178 134A     		ldr	r2, .L26+64
 556 017a D154     		strb	r1, [r2, r3]
 152:Core/Src/main.c **** 			}
 557              		.loc 1 152 5 is_stmt 1 view .LVU118
 558 017c 0122     		movs	r2, #1
 559 017e 2946     		mov	r1, r5
 560 0180 2046     		mov	r0, r4
 561 0182 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 562              	.LVL34:
 563 0186 41E7     		b	.L9
 564              	.L27:
 565              		.align	2
 566              	.L26:
 567 0188 00000000 		.word	.LANCHOR0
 568 018c 00000000 		.word	.LC0
 569 0190 00000000 		.word	huart2
 570 0194 00000000 		.word	buffer
 571 0198 00000000 		.word	.LANCHOR1
 572 019c 00000000 		.word	.LANCHOR2
 573 01a0 30000000 		.word	.LC3
 574 01a4 0C000000 		.word	.LC1
 575 01a8 00000000 		.word	mdp
 576 01ac 28000000 		.word	.LC2
 577 01b0 70000000 		.word	.LC4
 578 01b4 00000000 		.word	.LANCHOR3
 579 01b8 00000000 		.word	.LANCHOR4
 580 01bc 94000000 		.word	.LC6
 581 01c0 74000000 		.word	.LC5
 582 01c4 A8000000 		.word	.LC7
 583 01c8 00000000 		.word	mdp_try
 584 01cc DC000000 		.word	.LC10
 585 01d0 B8000000 		.word	.LC8
 586 01d4 D0000000 		.word	.LC9
 587              		.cfi_endproc
 588              	.LFE130:
 590              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 591              		.align	2
 592              	.LC11:
 593 0000 30202D2D 		.ascii	"0 --> 1\015\012\000"
 593      3E20310D 
 593      0A00
 594 000a 0000     		.align	2
 595              	.LC12:
 596 000c 31202D2D 		.ascii	"1 --> 1\015\012\000"
 596      3E20310D 
 596      0A00
 597 0016 0000     		.align	2
 598              	.LC13:
 599 0018 32202D2D 		.ascii	"2 --> 0\015\012\000"
 599      3E20300D 
 599      0A00
ARM GAS  /tmp/cckL8aRb.s 			page 21


 600 0022 0000     		.align	2
 601              	.LC14:
 602 0024 32202D2D 		.ascii	"2 --> 1\015\012\000"
 602      3E20310D 
 602      0A00
 603              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 604              		.align	1
 605              		.global	HAL_GPIO_EXTI_Callback
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv4-sp-d16
 611              	HAL_GPIO_EXTI_Callback:
 612              	.LVL35:
 613              	.LFB137:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 429:Core/Src/main.c **** {
 614              		.loc 1 429 1 view -0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 430:Core/Src/main.c **** 	int tmp;
 618              		.loc 1 430 2 view .LVU120
 431:Core/Src/main.c **** 	if( GPIO_Pin == GPIO_PIN_13 ) {
 619              		.loc 1 431 2 view .LVU121
 620              		.loc 1 431 4 is_stmt 0 view .LVU122
 621 0000 B0F5005F 		cmp	r0, #8192
 622 0004 00D0     		beq	.L39
 623 0006 7047     		bx	lr
 624              	.L39:
 429:Core/Src/main.c **** 	int tmp;
 625              		.loc 1 429 1 view .LVU123
 626 0008 08B5     		push	{r3, lr}
 627              	.LCFI7:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
 432:Core/Src/main.c **** 		tmp = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
 631              		.loc 1 432 3 is_stmt 1 view .LVU124
 632              		.loc 1 432 9 is_stmt 0 view .LVU125
 633 000a 4FF40051 		mov	r1, #8192
 634 000e 00F18040 		add	r0, r0, #1073741824
 635              	.LVL36:
 636              		.loc 1 432 9 view .LVU126
 637 0012 00F5F430 		add	r0, r0, #124928
 638 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 639              	.LVL37:
 433:Core/Src/main.c **** 		if (tmp == 0) // on appuie
 640              		.loc 1 433 3 is_stmt 1 view .LVU127
 641              		.loc 1 433 6 is_stmt 0 view .LVU128
 642 001a 18B9     		cbnz	r0, .L30
 434:Core/Src/main.c **** 		{
ARM GAS  /tmp/cckL8aRb.s 			page 22


 435:Core/Src/main.c **** 		   nb_push_second = 0;
 643              		.loc 1 435 6 is_stmt 1 view .LVU129
 644              		.loc 1 435 21 is_stmt 0 view .LVU130
 645 001c 1F4B     		ldr	r3, .L40
 646 001e 0022     		movs	r2, #0
 647 0020 1A80     		strh	r2, [r3]	@ movhi
 648              	.LVL38:
 649              	.L28:
 436:Core/Src/main.c **** 		} 
 437:Core/Src/main.c **** 		else		// onrelache
 438:Core/Src/main.c **** 		{
 439:Core/Src/main.c **** 		   switch( state )
 440:Core/Src/main.c **** 		   {
 441:Core/Src/main.c **** 		      case 0:
 442:Core/Src/main.c ****                         HAL_UART_Transmit(&huart2,"0 --> 1\r\n",11, 100);
 443:Core/Src/main.c ****                         state = 1;
 444:Core/Src/main.c ****                         break;
 445:Core/Src/main.c ****                      case 1:
 446:Core/Src/main.c ****                      	 if(nb_push_second < 1){   	// appuie cours de moins 1s
 447:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); //TODO accepte dévérouillage
 448:Core/Src/main.c ****                      	    // Lecture du mot de pass //TODO 30s max et teste si ok
 449:Core/Src/main.c ****                      	 }
 450:Core/Src/main.c ****                      	 else
 451:Core/Src/main.c ****                      	 	HAL_UART_Transmit(&huart2,"1 --> 1\r\n", 11,100);
 452:Core/Src/main.c ****                         break;
 453:Core/Src/main.c ****                      case 2:
 454:Core/Src/main.c ****                         if(nb_push_second > 5){  	// appuie de plus de 5s reset la carte 
 455:Core/Src/main.c ****                         	state = 0;
 456:Core/Src/main.c ****                         	mdp_size = 0;
 457:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 458:Core/Src/main.c ****                         }
 459:Core/Src/main.c ****                         else {			// appuie de plus de moins de 1s vérouillage de la carte  
 460:Core/Src/main.c ****                         	state = 1;
 461:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
 462:Core/Src/main.c ****                         }
 463:Core/Src/main.c ****                         break;
 464:Core/Src/main.c ****                      default:
 465:Core/Src/main.c **** 			 break;                     	
 466:Core/Src/main.c ****                   }
 467:Core/Src/main.c **** 		}
 468:Core/Src/main.c **** 		
 469:Core/Src/main.c **** 	}
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** }
 650              		.loc 1 471 1 view .LVU131
 651 0022 08BD     		pop	{r3, pc}
 652              	.LVL39:
 653              	.L30:
 439:Core/Src/main.c **** 		   {
 654              		.loc 1 439 6 is_stmt 1 view .LVU132
 655 0024 1E4B     		ldr	r3, .L40+4
 656 0026 1B68     		ldr	r3, [r3]
 657 0028 012B     		cmp	r3, #1
 658 002a 0DD0     		beq	.L31
 659 002c 022B     		cmp	r3, #2
 660 002e 1BD0     		beq	.L32
 661 0030 002B     		cmp	r3, #0
ARM GAS  /tmp/cckL8aRb.s 			page 23


 662 0032 F6D1     		bne	.L28
 442:Core/Src/main.c ****                         state = 1;
 663              		.loc 1 442 25 view .LVU133
 664 0034 6423     		movs	r3, #100
 665 0036 0B22     		movs	r2, #11
 666 0038 1A49     		ldr	r1, .L40+8
 667 003a 1B48     		ldr	r0, .L40+12
 668              	.LVL40:
 442:Core/Src/main.c ****                         state = 1;
 669              		.loc 1 442 25 is_stmt 0 view .LVU134
 670 003c FFF7FEFF 		bl	HAL_UART_Transmit
 671              	.LVL41:
 443:Core/Src/main.c ****                         break;
 672              		.loc 1 443 25 is_stmt 1 view .LVU135
 443:Core/Src/main.c ****                         break;
 673              		.loc 1 443 31 is_stmt 0 view .LVU136
 674 0040 174B     		ldr	r3, .L40+4
 675 0042 0122     		movs	r2, #1
 676 0044 1A60     		str	r2, [r3]
 444:Core/Src/main.c ****                      case 1:
 677              		.loc 1 444 25 is_stmt 1 view .LVU137
 678 0046 ECE7     		b	.L28
 679              	.LVL42:
 680              	.L31:
 446:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); //TODO accepte dévérouillage
 681              		.loc 1 446 24 view .LVU138
 446:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); //TODO accepte dévérouillage
 682              		.loc 1 446 42 is_stmt 0 view .LVU139
 683 0048 144B     		ldr	r3, .L40
 684 004a 1B88     		ldrh	r3, [r3]
 446:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); //TODO accepte dévérouillage
 685              		.loc 1 446 26 view .LVU140
 686 004c 2BB9     		cbnz	r3, .L33
 447:Core/Src/main.c ****                      	    // Lecture du mot de pass //TODO 30s max et teste si ok
 687              		.loc 1 447 27 is_stmt 1 view .LVU141
 688 004e 0122     		movs	r2, #1
 689 0050 1649     		ldr	r1, .L40+16
 690 0052 1548     		ldr	r0, .L40+12
 691              	.LVL43:
 447:Core/Src/main.c ****                      	    // Lecture du mot de pass //TODO 30s max et teste si ok
 692              		.loc 1 447 27 is_stmt 0 view .LVU142
 693 0054 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 694              	.LVL44:
 695 0058 E3E7     		b	.L28
 696              	.LVL45:
 697              	.L33:
 451:Core/Src/main.c ****                         break;
 698              		.loc 1 451 25 is_stmt 1 view .LVU143
 699 005a 6423     		movs	r3, #100
 700 005c 0B22     		movs	r2, #11
 701 005e 1449     		ldr	r1, .L40+20
 702 0060 1148     		ldr	r0, .L40+12
 703              	.LVL46:
 451:Core/Src/main.c ****                         break;
 704              		.loc 1 451 25 is_stmt 0 view .LVU144
 705 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 706              	.LVL47:
ARM GAS  /tmp/cckL8aRb.s 			page 24


 707 0066 DCE7     		b	.L28
 708              	.LVL48:
 709              	.L32:
 454:Core/Src/main.c ****                         	state = 0;
 710              		.loc 1 454 25 is_stmt 1 view .LVU145
 454:Core/Src/main.c ****                         	state = 0;
 711              		.loc 1 454 43 is_stmt 0 view .LVU146
 712 0068 0C4B     		ldr	r3, .L40
 713 006a 1B88     		ldrh	r3, [r3]
 454:Core/Src/main.c ****                         	state = 0;
 714              		.loc 1 454 27 view .LVU147
 715 006c 052B     		cmp	r3, #5
 716 006e 0BD9     		bls	.L34
 455:Core/Src/main.c ****                         	mdp_size = 0;
 717              		.loc 1 455 26 is_stmt 1 view .LVU148
 455:Core/Src/main.c ****                         	mdp_size = 0;
 718              		.loc 1 455 32 is_stmt 0 view .LVU149
 719 0070 0023     		movs	r3, #0
 720 0072 0B4A     		ldr	r2, .L40+4
 721 0074 1360     		str	r3, [r2]
 456:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 722              		.loc 1 456 26 is_stmt 1 view .LVU150
 456:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 723              		.loc 1 456 35 is_stmt 0 view .LVU151
 724 0076 0F4A     		ldr	r2, .L40+24
 725 0078 1360     		str	r3, [r2]
 457:Core/Src/main.c ****                         }
 726              		.loc 1 457 26 is_stmt 1 view .LVU152
 727 007a 6423     		movs	r3, #100
 728 007c 0B22     		movs	r2, #11
 729 007e 0E49     		ldr	r1, .L40+28
 730 0080 0948     		ldr	r0, .L40+12
 731              	.LVL49:
 457:Core/Src/main.c ****                         }
 732              		.loc 1 457 26 is_stmt 0 view .LVU153
 733 0082 FFF7FEFF 		bl	HAL_UART_Transmit
 734              	.LVL50:
 735 0086 CCE7     		b	.L28
 736              	.LVL51:
 737              	.L34:
 460:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
 738              		.loc 1 460 26 is_stmt 1 view .LVU154
 460:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
 739              		.loc 1 460 32 is_stmt 0 view .LVU155
 740 0088 054B     		ldr	r3, .L40+4
 741 008a 0122     		movs	r2, #1
 742 008c 1A60     		str	r2, [r3]
 461:Core/Src/main.c ****                         }
 743              		.loc 1 461 26 is_stmt 1 view .LVU156
 744 008e 6423     		movs	r3, #100
 745 0090 0B22     		movs	r2, #11
 746 0092 0A49     		ldr	r1, .L40+32
 747 0094 0448     		ldr	r0, .L40+12
 748              	.LVL52:
 461:Core/Src/main.c ****                         }
 749              		.loc 1 461 26 is_stmt 0 view .LVU157
 750 0096 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/cckL8aRb.s 			page 25


 751              	.LVL53:
 752              		.loc 1 471 1 view .LVU158
 753 009a C2E7     		b	.L28
 754              	.L41:
 755              		.align	2
 756              	.L40:
 757 009c 00000000 		.word	.LANCHOR4
 758 00a0 00000000 		.word	.LANCHOR0
 759 00a4 00000000 		.word	.LC11
 760 00a8 00000000 		.word	huart2
 761 00ac 00000000 		.word	buffer
 762 00b0 0C000000 		.word	.LC12
 763 00b4 00000000 		.word	.LANCHOR1
 764 00b8 18000000 		.word	.LC13
 765 00bc 24000000 		.word	.LC14
 766              		.cfi_endproc
 767              	.LFE137:
 769              		.section	.text.Error_Handler,"ax",%progbits
 770              		.align	1
 771              		.global	Error_Handler
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv4-sp-d16
 777              	Error_Handler:
 778              	.LFB138:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** /* USER CODE END 4 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** /**
 476:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 477:Core/Src/main.c ****   * @retval None
 478:Core/Src/main.c ****   */
 479:Core/Src/main.c **** void Error_Handler(void)
 480:Core/Src/main.c **** {
 779              		.loc 1 480 1 is_stmt 1 view -0
 780              		.cfi_startproc
 781              		@ Volatile: function does not return.
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 481:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 482:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 483:Core/Src/main.c ****   __disable_irq();
 785              		.loc 1 483 3 view .LVU160
 786              	.LBB8:
 787              	.LBI8:
 788              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cckL8aRb.s 			page 26


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cckL8aRb.s 			page 27


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cckL8aRb.s 			page 28


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 789              		.loc 2 140 27 view .LVU161
 790              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 791              		.loc 2 142 3 view .LVU162
 792              		.syntax unified
 793              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 794 0000 72B6     		cpsid i
 795              	@ 0 "" 2
 796              		.thumb
 797              		.syntax unified
 798              	.L43:
 799              	.LBE9:
 800              	.LBE8:
 484:Core/Src/main.c ****   while (1)
 801              		.loc 1 484 3 discriminator 1 view .LVU163
 485:Core/Src/main.c ****   {
 486:Core/Src/main.c ****   }
 802              		.loc 1 486 3 discriminator 1 view .LVU164
 484:Core/Src/main.c ****   while (1)
 803              		.loc 1 484 9 discriminator 1 view .LVU165
 804 0002 FEE7     		b	.L43
 805              		.cfi_endproc
 806              	.LFE138:
 808              		.section	.text.MX_TIM10_Init,"ax",%progbits
 809              		.align	1
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	MX_TIM10_Init:
 816              	.LFB133:
 312:Core/Src/main.c **** 
 817              		.loc 1 312 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821 0000 08B5     		push	{r3, lr}
 822              	.LCFI8:
 823              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cckL8aRb.s 			page 29


 824              		.cfi_offset 3, -8
 825              		.cfi_offset 14, -4
 321:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 826              		.loc 1 321 3 view .LVU167
 321:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 827              		.loc 1 321 19 is_stmt 0 view .LVU168
 828 0002 0948     		ldr	r0, .L48
 829 0004 094B     		ldr	r3, .L48+4
 830 0006 0360     		str	r3, [r0]
 322:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 831              		.loc 1 322 3 is_stmt 1 view .LVU169
 322:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 832              		.loc 1 322 25 is_stmt 0 view .LVU170
 833 0008 0F23     		movs	r3, #15
 834 000a 4360     		str	r3, [r0, #4]
 323:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 835              		.loc 1 323 3 is_stmt 1 view .LVU171
 323:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 836              		.loc 1 323 27 is_stmt 0 view .LVU172
 837 000c 0023     		movs	r3, #0
 838 000e 8360     		str	r3, [r0, #8]
 324:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 839              		.loc 1 324 3 is_stmt 1 view .LVU173
 324:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 840              		.loc 1 324 22 is_stmt 0 view .LVU174
 841 0010 4FF6FF72 		movw	r2, #65535
 842 0014 C260     		str	r2, [r0, #12]
 325:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 843              		.loc 1 325 3 is_stmt 1 view .LVU175
 325:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 844              		.loc 1 325 29 is_stmt 0 view .LVU176
 845 0016 0361     		str	r3, [r0, #16]
 326:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 846              		.loc 1 326 3 is_stmt 1 view .LVU177
 326:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 847              		.loc 1 326 33 is_stmt 0 view .LVU178
 848 0018 8361     		str	r3, [r0, #24]
 327:Core/Src/main.c ****   {
 849              		.loc 1 327 3 is_stmt 1 view .LVU179
 327:Core/Src/main.c ****   {
 850              		.loc 1 327 7 is_stmt 0 view .LVU180
 851 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 852              	.LVL54:
 327:Core/Src/main.c ****   {
 853              		.loc 1 327 6 view .LVU181
 854 001e 00B9     		cbnz	r0, .L47
 335:Core/Src/main.c **** 
 855              		.loc 1 335 1 view .LVU182
 856 0020 08BD     		pop	{r3, pc}
 857              	.L47:
 329:Core/Src/main.c ****   }
 858              		.loc 1 329 5 is_stmt 1 view .LVU183
 859 0022 FFF7FEFF 		bl	Error_Handler
 860              	.LVL55:
 861              	.L49:
 862 0026 00BF     		.align	2
 863              	.L48:
ARM GAS  /tmp/cckL8aRb.s 			page 30


 864 0028 00000000 		.word	htim10
 865 002c 00440140 		.word	1073824768
 866              		.cfi_endproc
 867              	.LFE133:
 869              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 870              		.align	1
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	MX_USART2_UART_Init:
 877              	.LFB134:
 343:Core/Src/main.c **** 
 878              		.loc 1 343 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 08B5     		push	{r3, lr}
 883              	.LCFI9:
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 3, -8
 886              		.cfi_offset 14, -4
 352:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 887              		.loc 1 352 3 view .LVU185
 352:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 888              		.loc 1 352 19 is_stmt 0 view .LVU186
 889 0002 0A48     		ldr	r0, .L54
 890 0004 0A4B     		ldr	r3, .L54+4
 891 0006 0360     		str	r3, [r0]
 353:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 892              		.loc 1 353 3 is_stmt 1 view .LVU187
 353:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 893              		.loc 1 353 24 is_stmt 0 view .LVU188
 894 0008 4FF4E133 		mov	r3, #115200
 895 000c 4360     		str	r3, [r0, #4]
 354:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 896              		.loc 1 354 3 is_stmt 1 view .LVU189
 354:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 897              		.loc 1 354 26 is_stmt 0 view .LVU190
 898 000e 0023     		movs	r3, #0
 899 0010 8360     		str	r3, [r0, #8]
 355:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 900              		.loc 1 355 3 is_stmt 1 view .LVU191
 355:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 901              		.loc 1 355 24 is_stmt 0 view .LVU192
 902 0012 C360     		str	r3, [r0, #12]
 356:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 903              		.loc 1 356 3 is_stmt 1 view .LVU193
 356:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 904              		.loc 1 356 22 is_stmt 0 view .LVU194
 905 0014 0361     		str	r3, [r0, #16]
 357:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 906              		.loc 1 357 3 is_stmt 1 view .LVU195
 357:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 907              		.loc 1 357 20 is_stmt 0 view .LVU196
 908 0016 0C22     		movs	r2, #12
 909 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/cckL8aRb.s 			page 31


 358:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 910              		.loc 1 358 3 is_stmt 1 view .LVU197
 358:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 911              		.loc 1 358 25 is_stmt 0 view .LVU198
 912 001a 8361     		str	r3, [r0, #24]
 359:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 913              		.loc 1 359 3 is_stmt 1 view .LVU199
 359:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 914              		.loc 1 359 28 is_stmt 0 view .LVU200
 915 001c C361     		str	r3, [r0, #28]
 360:Core/Src/main.c ****   {
 916              		.loc 1 360 3 is_stmt 1 view .LVU201
 360:Core/Src/main.c ****   {
 917              		.loc 1 360 7 is_stmt 0 view .LVU202
 918 001e FFF7FEFF 		bl	HAL_UART_Init
 919              	.LVL56:
 360:Core/Src/main.c ****   {
 920              		.loc 1 360 6 view .LVU203
 921 0022 00B9     		cbnz	r0, .L53
 368:Core/Src/main.c **** 
 922              		.loc 1 368 1 view .LVU204
 923 0024 08BD     		pop	{r3, pc}
 924              	.L53:
 362:Core/Src/main.c ****   }
 925              		.loc 1 362 5 is_stmt 1 view .LVU205
 926 0026 FFF7FEFF 		bl	Error_Handler
 927              	.LVL57:
 928              	.L55:
 929 002a 00BF     		.align	2
 930              	.L54:
 931 002c 00000000 		.word	huart2
 932 0030 00440040 		.word	1073759232
 933              		.cfi_endproc
 934              	.LFE134:
 936              		.section	.text.SystemClock_Config,"ax",%progbits
 937              		.align	1
 938              		.global	SystemClock_Config
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu fpv4-sp-d16
 944              	SystemClock_Config:
 945              	.LFB132:
 270:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 946              		.loc 1 270 1 view -0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 80
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950 0000 00B5     		push	{lr}
 951              	.LCFI10:
 952              		.cfi_def_cfa_offset 4
 953              		.cfi_offset 14, -4
 954 0002 95B0     		sub	sp, sp, #84
 955              	.LCFI11:
 956              		.cfi_def_cfa_offset 88
 271:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 957              		.loc 1 271 3 view .LVU207
ARM GAS  /tmp/cckL8aRb.s 			page 32


 271:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 958              		.loc 1 271 22 is_stmt 0 view .LVU208
 959 0004 3022     		movs	r2, #48
 960 0006 0021     		movs	r1, #0
 961 0008 08A8     		add	r0, sp, #32
 962 000a FFF7FEFF 		bl	memset
 963              	.LVL58:
 272:Core/Src/main.c **** 
 964              		.loc 1 272 3 is_stmt 1 view .LVU209
 272:Core/Src/main.c **** 
 965              		.loc 1 272 22 is_stmt 0 view .LVU210
 966 000e 0023     		movs	r3, #0
 967 0010 0393     		str	r3, [sp, #12]
 968 0012 0493     		str	r3, [sp, #16]
 969 0014 0593     		str	r3, [sp, #20]
 970 0016 0693     		str	r3, [sp, #24]
 971 0018 0793     		str	r3, [sp, #28]
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 972              		.loc 1 276 3 is_stmt 1 view .LVU211
 973              	.LBB10:
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 974              		.loc 1 276 3 view .LVU212
 975 001a 0193     		str	r3, [sp, #4]
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 976              		.loc 1 276 3 view .LVU213
 977 001c 194A     		ldr	r2, .L62
 978 001e 116C     		ldr	r1, [r2, #64]
 979 0020 41F08051 		orr	r1, r1, #268435456
 980 0024 1164     		str	r1, [r2, #64]
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 981              		.loc 1 276 3 view .LVU214
 982 0026 126C     		ldr	r2, [r2, #64]
 983 0028 02F08052 		and	r2, r2, #268435456
 984 002c 0192     		str	r2, [sp, #4]
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 985              		.loc 1 276 3 view .LVU215
 986 002e 019A     		ldr	r2, [sp, #4]
 987              	.LBE10:
 276:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 988              		.loc 1 276 3 view .LVU216
 277:Core/Src/main.c **** 
 989              		.loc 1 277 3 view .LVU217
 990              	.LBB11:
 277:Core/Src/main.c **** 
 991              		.loc 1 277 3 view .LVU218
 992 0030 0293     		str	r3, [sp, #8]
 277:Core/Src/main.c **** 
 993              		.loc 1 277 3 view .LVU219
 994 0032 1549     		ldr	r1, .L62+4
 995 0034 0A68     		ldr	r2, [r1]
 996 0036 22F44042 		bic	r2, r2, #49152
 997 003a 42F40042 		orr	r2, r2, #32768
 998 003e 0A60     		str	r2, [r1]
 277:Core/Src/main.c **** 
 999              		.loc 1 277 3 view .LVU220
 1000 0040 0A68     		ldr	r2, [r1]
 1001 0042 02F44042 		and	r2, r2, #49152
ARM GAS  /tmp/cckL8aRb.s 			page 33


 1002 0046 0292     		str	r2, [sp, #8]
 277:Core/Src/main.c **** 
 1003              		.loc 1 277 3 view .LVU221
 1004 0048 029A     		ldr	r2, [sp, #8]
 1005              	.LBE11:
 277:Core/Src/main.c **** 
 1006              		.loc 1 277 3 view .LVU222
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1007              		.loc 1 282 3 view .LVU223
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1008              		.loc 1 282 36 is_stmt 0 view .LVU224
 1009 004a 0222     		movs	r2, #2
 1010 004c 0892     		str	r2, [sp, #32]
 283:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1011              		.loc 1 283 3 is_stmt 1 view .LVU225
 283:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1012              		.loc 1 283 30 is_stmt 0 view .LVU226
 1013 004e 0122     		movs	r2, #1
 1014 0050 0B92     		str	r2, [sp, #44]
 284:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1015              		.loc 1 284 3 is_stmt 1 view .LVU227
 284:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1016              		.loc 1 284 41 is_stmt 0 view .LVU228
 1017 0052 1022     		movs	r2, #16
 1018 0054 0C92     		str	r2, [sp, #48]
 285:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1019              		.loc 1 285 3 is_stmt 1 view .LVU229
 285:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1020              		.loc 1 285 34 is_stmt 0 view .LVU230
 1021 0056 0E93     		str	r3, [sp, #56]
 286:Core/Src/main.c ****   {
 1022              		.loc 1 286 3 is_stmt 1 view .LVU231
 286:Core/Src/main.c ****   {
 1023              		.loc 1 286 7 is_stmt 0 view .LVU232
 1024 0058 08A8     		add	r0, sp, #32
 1025 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1026              	.LVL59:
 286:Core/Src/main.c ****   {
 1027              		.loc 1 286 6 view .LVU233
 1028 005e 68B9     		cbnz	r0, .L60
 293:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1029              		.loc 1 293 3 is_stmt 1 view .LVU234
 293:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1030              		.loc 1 293 31 is_stmt 0 view .LVU235
 1031 0060 0F23     		movs	r3, #15
 1032 0062 0393     		str	r3, [sp, #12]
 295:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1033              		.loc 1 295 3 is_stmt 1 view .LVU236
 295:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1034              		.loc 1 295 34 is_stmt 0 view .LVU237
 1035 0064 0021     		movs	r1, #0
 1036 0066 0491     		str	r1, [sp, #16]
 296:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1037              		.loc 1 296 3 is_stmt 1 view .LVU238
 296:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1038              		.loc 1 296 35 is_stmt 0 view .LVU239
 1039 0068 0591     		str	r1, [sp, #20]
ARM GAS  /tmp/cckL8aRb.s 			page 34


 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1040              		.loc 1 297 3 is_stmt 1 view .LVU240
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1041              		.loc 1 297 36 is_stmt 0 view .LVU241
 1042 006a 0691     		str	r1, [sp, #24]
 298:Core/Src/main.c **** 
 1043              		.loc 1 298 3 is_stmt 1 view .LVU242
 298:Core/Src/main.c **** 
 1044              		.loc 1 298 36 is_stmt 0 view .LVU243
 1045 006c 0791     		str	r1, [sp, #28]
 300:Core/Src/main.c ****   {
 1046              		.loc 1 300 3 is_stmt 1 view .LVU244
 300:Core/Src/main.c ****   {
 1047              		.loc 1 300 7 is_stmt 0 view .LVU245
 1048 006e 03A8     		add	r0, sp, #12
 1049 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1050              	.LVL60:
 300:Core/Src/main.c ****   {
 1051              		.loc 1 300 6 view .LVU246
 1052 0074 20B9     		cbnz	r0, .L61
 304:Core/Src/main.c **** 
 1053              		.loc 1 304 1 view .LVU247
 1054 0076 15B0     		add	sp, sp, #84
 1055              	.LCFI12:
 1056              		.cfi_remember_state
 1057              		.cfi_def_cfa_offset 4
 1058              		@ sp needed
 1059 0078 5DF804FB 		ldr	pc, [sp], #4
 1060              	.L60:
 1061              	.LCFI13:
 1062              		.cfi_restore_state
 288:Core/Src/main.c ****   }
 1063              		.loc 1 288 5 is_stmt 1 view .LVU248
 1064 007c FFF7FEFF 		bl	Error_Handler
 1065              	.LVL61:
 1066              	.L61:
 302:Core/Src/main.c ****   }
 1067              		.loc 1 302 5 view .LVU249
 1068 0080 FFF7FEFF 		bl	Error_Handler
 1069              	.LVL62:
 1070              	.L63:
 1071              		.align	2
 1072              	.L62:
 1073 0084 00380240 		.word	1073887232
 1074 0088 00700040 		.word	1073770496
 1075              		.cfi_endproc
 1076              	.LFE132:
 1078              		.section	.text.main,"ax",%progbits
 1079              		.align	1
 1080              		.global	main
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu fpv4-sp-d16
 1086              	main:
 1087              	.LFB131:
 175:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/cckL8aRb.s 			page 35


 1088              		.loc 1 175 1 view -0
 1089              		.cfi_startproc
 1090              		@ Volatile: function does not return.
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093 0000 08B5     		push	{r3, lr}
 1094              	.LCFI14:
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 3, -8
 1097              		.cfi_offset 14, -4
 183:Core/Src/main.c **** 
 1098              		.loc 1 183 3 view .LVU251
 1099 0002 FFF7FEFF 		bl	HAL_Init
 1100              	.LVL63:
 190:Core/Src/main.c **** 
 1101              		.loc 1 190 3 view .LVU252
 1102 0006 FFF7FEFF 		bl	SystemClock_Config
 1103              	.LVL64:
 197:Core/Src/main.c ****   MX_TIM10_Init();
 1104              		.loc 1 197 3 view .LVU253
 1105 000a FFF7FEFF 		bl	MX_GPIO_Init
 1106              	.LVL65:
 198:Core/Src/main.c ****   MX_DMA_Init();
 1107              		.loc 1 198 3 view .LVU254
 1108 000e FFF7FEFF 		bl	MX_TIM10_Init
 1109              	.LVL66:
 199:Core/Src/main.c ****   MX_USART2_UART_Init();
 1110              		.loc 1 199 3 view .LVU255
 1111 0012 FFF7FEFF 		bl	MX_DMA_Init
 1112              	.LVL67:
 200:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1113              		.loc 1 200 3 view .LVU256
 1114 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1115              	.LVL68:
 204:Core/Src/main.c ****   
 1116              		.loc 1 204 3 view .LVU257
 1117 001a 2848     		ldr	r0, .L72
 1118 001c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1119              	.LVL69:
 1120 0020 15E0     		b	.L65
 1121              	.L71:
 230:Core/Src/main.c **** 		        
 1122              		.loc 1 230 11 view .LVU258
 1123 0022 0122     		movs	r2, #1
 1124 0024 2649     		ldr	r1, .L72+4
 1125 0026 2748     		ldr	r0, .L72+8
 1126 0028 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1127              	.LVL70:
 236:Core/Src/main.c ****     			 HAL_Delay(100);
 1128              		.loc 1 236 25 view .LVU259
 1129 002c 264C     		ldr	r4, .L72+12
 1130 002e 0122     		movs	r2, #1
 1131 0030 2021     		movs	r1, #32
 1132 0032 2046     		mov	r0, r4
 1133 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1134              	.LVL71:
 237:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
ARM GAS  /tmp/cckL8aRb.s 			page 36


 1135              		.loc 1 237 9 view .LVU260
 1136 0038 6420     		movs	r0, #100
 1137 003a FFF7FEFF 		bl	HAL_Delay
 1138              	.LVL72:
 238:Core/Src/main.c ****     			 HAL_Delay(100);
 1139              		.loc 1 238 9 view .LVU261
 1140 003e 0022     		movs	r2, #0
 1141 0040 2021     		movs	r1, #32
 1142 0042 2046     		mov	r0, r4
 1143 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1144              	.LVL73:
 239:Core/Src/main.c ****     			 break;
 1145              		.loc 1 239 9 view .LVU262
 1146 0048 6420     		movs	r0, #100
 1147 004a FFF7FEFF 		bl	HAL_Delay
 1148              	.LVL74:
 240:Core/Src/main.c ****                      case 1:   // state 1 : carte vérouillé
 1149              		.loc 1 240 9 view .LVU263
 1150              	.L65:
 214:Core/Src/main.c ****   {
 1151              		.loc 1 214 3 view .LVU264
 225:Core/Src/main.c **** 		   {
 1152              		.loc 1 225 5 view .LVU265
 1153 004e 1F4B     		ldr	r3, .L72+16
 1154 0050 1B68     		ldr	r3, [r3]
 1155 0052 012B     		cmp	r3, #1
 1156 0054 09D0     		beq	.L66
 1157 0056 022B     		cmp	r3, #2
 1158 0058 15D0     		beq	.L67
 1159 005a 002B     		cmp	r3, #0
 1160 005c E1D0     		beq	.L71
 258:Core/Src/main.c ****                      	 break;
 1161              		.loc 1 258 24 view .LVU266
 1162 005e 0022     		movs	r2, #0
 1163 0060 2021     		movs	r1, #32
 1164 0062 1948     		ldr	r0, .L72+12
 1165 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1166              	.LVL75:
 259:Core/Src/main.c ****                   }
 1167              		.loc 1 259 24 view .LVU267
 1168 0068 F1E7     		b	.L65
 1169              	.L66:
 243:Core/Src/main.c ****                         HAL_Delay(1000);
 1170              		.loc 1 243 25 view .LVU268
 1171 006a 0122     		movs	r2, #1
 1172 006c 2021     		movs	r1, #32
 1173 006e 1648     		ldr	r0, .L72+12
 1174 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1175              	.LVL76:
 244:Core/Src/main.c ****                         nb_push_second++;
 1176              		.loc 1 244 25 view .LVU269
 1177 0074 4FF47A70 		mov	r0, #1000
 1178 0078 FFF7FEFF 		bl	HAL_Delay
 1179              	.LVL77:
 245:Core/Src/main.c ****                         break;
 1180              		.loc 1 245 25 view .LVU270
 245:Core/Src/main.c ****                         break;
ARM GAS  /tmp/cckL8aRb.s 			page 37


 1181              		.loc 1 245 39 is_stmt 0 view .LVU271
 1182 007c 144A     		ldr	r2, .L72+20
 1183 007e 1388     		ldrh	r3, [r2]
 1184 0080 0133     		adds	r3, r3, #1
 1185 0082 1380     		strh	r3, [r2]	@ movhi
 246:Core/Src/main.c ****                      case 2:   // state 3 : carte dévérouillé
 1186              		.loc 1 246 25 is_stmt 1 view .LVU272
 1187 0084 E3E7     		b	.L65
 1188              	.L67:
 250:Core/Src/main.c ****     			 HAL_Delay(1000);
 1189              		.loc 1 250 25 view .LVU273
 1190 0086 104D     		ldr	r5, .L72+12
 1191 0088 0122     		movs	r2, #1
 1192 008a 2021     		movs	r1, #32
 1193 008c 2846     		mov	r0, r5
 1194 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1195              	.LVL78:
 251:Core/Src/main.c ****     			 nb_push_second++;
 1196              		.loc 1 251 9 view .LVU274
 1197 0092 4FF47A70 		mov	r0, #1000
 1198 0096 FFF7FEFF 		bl	HAL_Delay
 1199              	.LVL79:
 252:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1200              		.loc 1 252 9 view .LVU275
 252:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1201              		.loc 1 252 23 is_stmt 0 view .LVU276
 1202 009a 0D4C     		ldr	r4, .L72+20
 1203 009c 2388     		ldrh	r3, [r4]
 1204 009e 0133     		adds	r3, r3, #1
 1205 00a0 2380     		strh	r3, [r4]	@ movhi
 253:Core/Src/main.c ****     			 HAL_Delay(1000);
 1206              		.loc 1 253 9 is_stmt 1 view .LVU277
 1207 00a2 0022     		movs	r2, #0
 1208 00a4 2021     		movs	r1, #32
 1209 00a6 2846     		mov	r0, r5
 1210 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1211              	.LVL80:
 254:Core/Src/main.c ****     			 nb_push_second++;
 1212              		.loc 1 254 9 view .LVU278
 1213 00ac 4FF47A70 		mov	r0, #1000
 1214 00b0 FFF7FEFF 		bl	HAL_Delay
 1215              	.LVL81:
 255:Core/Src/main.c ****     			 break;
 1216              		.loc 1 255 9 view .LVU279
 255:Core/Src/main.c ****     			 break;
 1217              		.loc 1 255 23 is_stmt 0 view .LVU280
 1218 00b4 2388     		ldrh	r3, [r4]
 1219 00b6 0133     		adds	r3, r3, #1
 1220 00b8 2380     		strh	r3, [r4]	@ movhi
 256:Core/Src/main.c ****                      default:
 1221              		.loc 1 256 9 is_stmt 1 view .LVU281
 1222 00ba C8E7     		b	.L65
 1223              	.L73:
 1224              		.align	2
 1225              	.L72:
 1226 00bc 00000000 		.word	htim10
 1227 00c0 00000000 		.word	buffer
ARM GAS  /tmp/cckL8aRb.s 			page 38


 1228 00c4 00000000 		.word	huart2
 1229 00c8 00000240 		.word	1073872896
 1230 00cc 00000000 		.word	.LANCHOR0
 1231 00d0 00000000 		.word	.LANCHOR4
 1232              		.cfi_endproc
 1233              	.LFE131:
 1235              		.comm	mdp_try,10,4
 1236              		.global	mdp_try_size
 1237              		.comm	mdp,10,4
 1238              		.global	mdp_size
 1239              		.global	mdp_max_size
 1240              		.comm	buffer,1,1
 1241              		.global	state
 1242              		.global	nb_push_second
 1243              		.comm	timer_val,2,2
 1244              		.comm	uart_buf_len,4,4
 1245              		.comm	uart_buf,50,4
 1246              		.comm	hdma_usart2_tx,96,4
 1247              		.comm	hdma_usart2_rx,96,4
 1248              		.comm	huart2,68,4
 1249              		.comm	htim10,72,4
 1250              		.section	.bss.mdp_size,"aw",%nobits
 1251              		.align	2
 1252              		.set	.LANCHOR1,. + 0
 1255              	mdp_size:
 1256 0000 00000000 		.space	4
 1257              		.section	.bss.mdp_try_size,"aw",%nobits
 1258              		.align	2
 1259              		.set	.LANCHOR3,. + 0
 1262              	mdp_try_size:
 1263 0000 00000000 		.space	4
 1264              		.section	.bss.nb_push_second,"aw",%nobits
 1265              		.align	1
 1266              		.set	.LANCHOR4,. + 0
 1269              	nb_push_second:
 1270 0000 0000     		.space	2
 1271              		.section	.bss.state,"aw",%nobits
 1272              		.align	2
 1273              		.set	.LANCHOR0,. + 0
 1276              	state:
 1277 0000 00000000 		.space	4
 1278              		.section	.data.mdp_max_size,"aw"
 1279              		.align	2
 1280              		.set	.LANCHOR2,. + 0
 1283              	mdp_max_size:
 1284 0000 0A000000 		.word	10
 1285              		.text
 1286              	.Letext0:
 1287              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1288              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1289              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1290              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1291              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1292              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1293              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1294              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1295              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cckL8aRb.s 			page 39


 1296              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1297              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1298              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1299              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1300              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1301              		.file 17 "<built-in>"
ARM GAS  /tmp/cckL8aRb.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cckL8aRb.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cckL8aRb.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cckL8aRb.s:143    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/cckL8aRb.s:150    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cckL8aRb.s:156    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cckL8aRb.s:217    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/cckL8aRb.s:222    .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
     /tmp/cckL8aRb.s:257    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cckL8aRb.s:264    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cckL8aRb.s:567    .text.HAL_UART_RxCpltCallback:0000000000000188 $d
                            *COM*:0000000000000044 huart2
                            *COM*:0000000000000001 buffer
                            *COM*:000000000000000a mdp
                            *COM*:000000000000000a mdp_try
     /tmp/cckL8aRb.s:591    .rodata.HAL_GPIO_EXTI_Callback.str1.4:0000000000000000 $d
     /tmp/cckL8aRb.s:604    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cckL8aRb.s:611    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cckL8aRb.s:757    .text.HAL_GPIO_EXTI_Callback:000000000000009c $d
     /tmp/cckL8aRb.s:770    .text.Error_Handler:0000000000000000 $t
     /tmp/cckL8aRb.s:777    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cckL8aRb.s:809    .text.MX_TIM10_Init:0000000000000000 $t
     /tmp/cckL8aRb.s:815    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
     /tmp/cckL8aRb.s:864    .text.MX_TIM10_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim10
     /tmp/cckL8aRb.s:870    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cckL8aRb.s:876    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cckL8aRb.s:931    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/cckL8aRb.s:937    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cckL8aRb.s:944    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cckL8aRb.s:1073   .text.SystemClock_Config:0000000000000084 $d
     /tmp/cckL8aRb.s:1079   .text.main:0000000000000000 $t
     /tmp/cckL8aRb.s:1086   .text.main:0000000000000000 main
     /tmp/cckL8aRb.s:1226   .text.main:00000000000000bc $d
     /tmp/cckL8aRb.s:1262   .bss.mdp_try_size:0000000000000000 mdp_try_size
     /tmp/cckL8aRb.s:1255   .bss.mdp_size:0000000000000000 mdp_size
     /tmp/cckL8aRb.s:1283   .data.mdp_max_size:0000000000000000 mdp_max_size
     /tmp/cckL8aRb.s:1276   .bss.state:0000000000000000 state
     /tmp/cckL8aRb.s:1269   .bss.nb_push_second:0000000000000000 nb_push_second
                            *COM*:0000000000000002 timer_val
                            *COM*:0000000000000004 uart_buf_len
                            *COM*:0000000000000032 uart_buf
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_usart2_rx
     /tmp/cckL8aRb.s:1251   .bss.mdp_size:0000000000000000 $d
     /tmp/cckL8aRb.s:1258   .bss.mdp_try_size:0000000000000000 $d
     /tmp/cckL8aRb.s:1265   .bss.nb_push_second:0000000000000000 $d
     /tmp/cckL8aRb.s:1272   .bss.state:0000000000000000 $d
     /tmp/cckL8aRb.s:1279   .data.mdp_max_size:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
ARM GAS  /tmp/cckL8aRb.s 			page 41


strncmp
HAL_UART_Receive_DMA
HAL_GPIO_ReadPin
HAL_TIM_Base_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
