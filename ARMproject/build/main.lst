ARM GAS  /tmp/ccAy7H4i.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB136:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccAy7H4i.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** typedef struct {
  35:Core/Src/main.c **** 	char magic[8];
  36:Core/Src/main.c **** 	char idx;
  37:Core/Src/main.c **** 	char data[256];
  38:Core/Src/main.c **** } data_store_t;
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c ****  TIM_HandleTypeDef htim10;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart2;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c ****   char uart_buf[50];
  56:Core/Src/main.c ****   int uart_buf_len;
  57:Core/Src/main.c ****   uint16_t timer_val;
  58:Core/Src/main.c ****   uint16_t nb_push_second = 0; //nombre de seconde entre appuie et relachement 
  59:Core/Src/main.c ****   size_t state = 0;
  60:Core/Src/main.c ****   
  61:Core/Src/main.c ****   uint8_t buffer;
  62:Core/Src/main.c ****   
  63:Core/Src/main.c ****   static const data_store_t datastore __attribute__((__section__(".datastore"))) = {    // mémoire
  64:Core/Src/main.c **** 	.idx = 10,
  65:Core/Src/main.c **** 	.magic = "M4GIKNB",
  66:Core/Src/main.c **** 	.data = "alexandre"
  67:Core/Src/main.c ****   };
  68:Core/Src/main.c ****   
  69:Core/Src/main.c ****   size_t mdp_max_size = 10;
  70:Core/Src/main.c ****   size_t mdp_size = 0;
  71:Core/Src/main.c ****   uint8_t mdp[10];
  72:Core/Src/main.c ****   
  73:Core/Src/main.c ****   size_t mdp_try_size = 0;
  74:Core/Src/main.c ****   uint8_t mdp_try[10];
  75:Core/Src/main.c ****   
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   
  78:Core/Src/main.c **** /* USER CODE END PV */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  81:Core/Src/main.c **** void SystemClock_Config(void);
  82:Core/Src/main.c **** static void MX_GPIO_Init(void);
  83:Core/Src/main.c **** static void MX_TIM10_Init(void);
  84:Core/Src/main.c **** static void MX_DMA_Init(void);
  85:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  86:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  /tmp/ccAy7H4i.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
  94:Core/Src/main.c **** 	
  95:Core/Src/main.c **** 	if(state == 0){
  96:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
  97:Core/Src/main.c **** 		if(buffer == '\r')
  98:Core/Src/main.c **** 		{
  99:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, "End of MDP ! There is \' ", 24, 100);
 100:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, mdp, mdp_size, 100);
 101:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, " \'\r\n", 3, 100);
 102:Core/Src/main.c **** 			state = 1;
 103:Core/Src/main.c **** 		}	
 104:Core/Src/main.c **** 		else
 105:Core/Src/main.c **** 			if (mdp_size >= mdp_max_size){
 106:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 107:Core/Src/main.c **** 				mdp_size = 0;
 108:Core/Src/main.c **** 			}else{
 109:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, &buffer, 1, 10);
 110:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 111:Core/Src/main.c **** 				mdp[mdp_size++] = buffer;
 112:Core/Src/main.c **** 			}		
 113:Core/Src/main.c **** 	}
 114:Core/Src/main.c **** 	else if(state == 1){
 115:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "[TRY] Received : ", 17, 10);
 116:Core/Src/main.c **** 		if(buffer == '\r')
 117:Core/Src/main.c **** 		{
 118:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, "End of TRY ! \r\n", 15, 100);
 119:Core/Src/main.c **** 			if((mdp_try_size == mdp_size) && (strncmp(mdp_try,mdp_try,mdp_size)==0)){
 120:Core/Src/main.c **** 				state = 2;
 121:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 122:Core/Src/main.c **** 			} else {
 123:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Failed ! \r\n", 25, 100);
 124:Core/Src/main.c **** 			}
 125:Core/Src/main.c **** 			
 126:Core/Src/main.c **** 		}	
 127:Core/Src/main.c **** 		else{
 128:Core/Src/main.c **** 			if (mdp_try_size >= mdp_max_size){
 129:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 130:Core/Src/main.c **** 				mdp_try_size = 0;
 131:Core/Src/main.c **** 			}else{
 132:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, &buffer, 1, 10);
 133:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 134:Core/Src/main.c **** 				mdp_try[mdp_try_size++] = buffer;
 135:Core/Src/main.c **** 			}
 136:Core/Src/main.c **** 		}
 137:Core/Src/main.c **** 	}
 138:Core/Src/main.c **** 	
 139:Core/Src/main.c **** 	
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /*
 143:Core/Src/main.c **** 	~~~   Note Utile ~~~
 144:Core/Src/main.c **** 	
 145:Core/Src/main.c **** 	Pour écrire un retour à la ligne il faut un \r\n 
ARM GAS  /tmp/ccAy7H4i.s 			page 4


 146:Core/Src/main.c **** 	Pour capter un retour à la ligne il faut capté \r
 147:Core/Src/main.c **** */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* USER CODE END 0 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief  The application entry point.
 154:Core/Src/main.c ****   * @retval int
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c **** int main(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 165:Core/Src/main.c ****   HAL_Init();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END Init */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* Configure the system clock */
 172:Core/Src/main.c ****   SystemClock_Config();
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END SysInit */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* Initialize all configured peripherals */
 179:Core/Src/main.c ****   MX_GPIO_Init();
 180:Core/Src/main.c ****   MX_TIM10_Init();
 181:Core/Src/main.c ****   MX_DMA_Init();
 182:Core/Src/main.c ****   MX_USART2_UART_Init();
 183:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   // Start timer
 186:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim10);
 187:Core/Src/main.c ****   
 188:Core/Src/main.c ****   //TODO décommenter pour voir élément dans la mémoire 
 189:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, &datastore, sizeof(datastore), 200);
 190:Core/Src/main.c ****   
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Infinite loop */
 195:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 196:Core/Src/main.c ****   while (1)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     /* USER CODE END WHILE */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 201:Core/Src/main.c ****     
 202:Core/Src/main.c ****     
ARM GAS  /tmp/ccAy7H4i.s 			page 5


 203:Core/Src/main.c ****     
 204:Core/Src/main.c ****     //HAL_UART_Transmit(&huart2, &buffer, 10, 10);
 205:Core/Src/main.c ****     
 206:Core/Src/main.c ****     
 207:Core/Src/main.c ****     switch( state )
 208:Core/Src/main.c **** 		   {
 209:Core/Src/main.c **** 		      case 0:   // state 0 : carte non configuré
 210:Core/Src/main.c **** 		        // TODO initialisation de la carte ? 
 211:Core/Src/main.c **** 		        
 212:Core/Src/main.c **** 		        HAL_UART_Receive_DMA(&huart2, &buffer, 1);
 213:Core/Src/main.c **** 		        
 214:Core/Src/main.c **** 		        // si carte pas initialisé clé de chiffrement &mot de passe vide sinon clé et mot de p
 215:Core/Src/main.c **** 		        // clé et mot de passe en flash utile que mise hors tenssion de la carte.
 216:Core/Src/main.c **** 		        //  commande d'initialisation mot de passe  "./mon-script init "mon-mot-de-passe"
 217:Core/Src/main.c **** 		        //	tant que clé et mots de passe sont NULL alors on est à létat 0 sinon on passe état
 218:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 219:Core/Src/main.c ****     			 HAL_Delay(100);
 220:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 221:Core/Src/main.c ****     			 HAL_Delay(100);
 222:Core/Src/main.c ****     			 break;
 223:Core/Src/main.c ****                      case 1:   // state 1 : carte vérouillé
 224:Core/Src/main.c ****                      	 // pour dévérouillé on appuie et on a 30s pour écrire le mot de passe 
 225:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 226:Core/Src/main.c ****                         HAL_Delay(1000);
 227:Core/Src/main.c ****                         nb_push_second++;
 228:Core/Src/main.c ****                         break;
 229:Core/Src/main.c ****                      case 2:   // state 3 : carte dévérouillé
 230:Core/Src/main.c ****                      	 //une fois la carte dévérouiller elle peux effectuer le chiffrement d'un f
 231:Core/Src/main.c ****                      	 
 232:Core/Src/main.c ****                         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 233:Core/Src/main.c ****     			 HAL_Delay(1000);
 234:Core/Src/main.c ****     			 nb_push_second++;
 235:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 236:Core/Src/main.c ****     			 HAL_Delay(1000);
 237:Core/Src/main.c ****     			 nb_push_second++;
 238:Core/Src/main.c ****     			 break;
 239:Core/Src/main.c ****                      default:
 240:Core/Src/main.c ****                      	 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 241:Core/Src/main.c ****                      	 break;
 242:Core/Src/main.c ****                   }
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE END 3 */
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief System Clock Configuration
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** void SystemClock_Config(void)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 254:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 259:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
ARM GAS  /tmp/ccAy7H4i.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 262:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 268:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 277:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief TIM10 Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_TIM10_Init(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END TIM10_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 1 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END TIM10_Init 1 */
 303:Core/Src/main.c ****   htim10.Instance = TIM10;
 304:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 305:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 306:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 307:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 308:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 309:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END TIM10_Init 2 */
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccAy7H4i.s 			page 7


 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief USART2 Initialization Function
 321:Core/Src/main.c ****   * @param None
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 325:Core/Src/main.c **** {
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 334:Core/Src/main.c ****   huart2.Instance = USART2;
 335:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 336:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 337:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 338:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 339:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 340:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 341:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 342:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** }
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** /**
 353:Core/Src/main.c ****   * Enable DMA controller clock
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c **** static void MX_DMA_Init(void)
 356:Core/Src/main.c **** {
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* DMA controller clock enable */
 359:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* DMA interrupt init */
 362:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 363:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 1, 0);
 364:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 365:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 366:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 367:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** /**
 372:Core/Src/main.c ****   * @brief GPIO Initialization Function
 373:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/ccAy7H4i.s 			page 8


 374:Core/Src/main.c ****   * @retval None
 375:Core/Src/main.c ****   */
 376:Core/Src/main.c **** static void MX_GPIO_Init(void)
 377:Core/Src/main.c **** {
  28              		.loc 1 377 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 378:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 378 3 view .LVU1
  42              		.loc 1 378 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 381:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 381 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 381 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 381 3 view .LVU5
  54 0012 1C4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 381 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 381 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 381 3 view .LVU8
 382:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 382 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 382 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 382 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 382 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccAy7H4i.s 			page 9


  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 382 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 382 3 view .LVU14
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 385:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  82              		.loc 1 385 3 view .LVU15
  83 003a 134D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 388:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  89              		.loc 1 388 3 view .LVU16
  90              		.loc 1 388 23 is_stmt 0 view .LVU17
  91 0046 4FF40053 		mov	r3, #8192
  92 004a 0393     		str	r3, [sp, #12]
 389:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  93              		.loc 1 389 3 is_stmt 1 view .LVU18
  94              		.loc 1 389 24 is_stmt 0 view .LVU19
  95 004c 4FF44413 		mov	r3, #3211264
  96 0050 0493     		str	r3, [sp, #16]
 390:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 390 3 is_stmt 1 view .LVU20
  98              		.loc 1 390 24 is_stmt 0 view .LVU21
  99 0052 0594     		str	r4, [sp, #20]
 391:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 100              		.loc 1 391 3 is_stmt 1 view .LVU22
 101 0054 03A9     		add	r1, sp, #12
 102 0056 0D48     		ldr	r0, .L3+8
 103 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 394:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 105              		.loc 1 394 3 view .LVU23
 106              		.loc 1 394 23 is_stmt 0 view .LVU24
 107 005c 2023     		movs	r3, #32
 108 005e 0393     		str	r3, [sp, #12]
 395:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 395 3 is_stmt 1 view .LVU25
 110              		.loc 1 395 24 is_stmt 0 view .LVU26
 111 0060 0123     		movs	r3, #1
 112 0062 0493     		str	r3, [sp, #16]
 396:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 396 3 is_stmt 1 view .LVU27
 114              		.loc 1 396 24 is_stmt 0 view .LVU28
 115 0064 0594     		str	r4, [sp, #20]
 397:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 397 3 is_stmt 1 view .LVU29
 117              		.loc 1 397 25 is_stmt 0 view .LVU30
ARM GAS  /tmp/ccAy7H4i.s 			page 10


 118 0066 0694     		str	r4, [sp, #24]
 398:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119              		.loc 1 398 3 is_stmt 1 view .LVU31
 120 0068 03A9     		add	r1, sp, #12
 121 006a 2846     		mov	r0, r5
 122 006c FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* EXTI interrupt init*/
 401:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 124              		.loc 1 401 3 view .LVU32
 125 0070 2246     		mov	r2, r4
 126 0072 2146     		mov	r1, r4
 127 0074 2820     		movs	r0, #40
 128 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 129              	.LVL3:
 402:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 130              		.loc 1 402 3 view .LVU33
 131 007a 2820     		movs	r0, #40
 132 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 133              	.LVL4:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** }
 134              		.loc 1 404 1 is_stmt 0 view .LVU34
 135 0080 09B0     		add	sp, sp, #36
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0082 30BD     		pop	{r4, r5, pc}
 140              	.L4:
 141              		.align	2
 142              	.L3:
 143 0084 00380240 		.word	1073887232
 144 0088 00000240 		.word	1073872896
 145 008c 00080240 		.word	1073874944
 146              		.cfi_endproc
 147              	.LFE136:
 149              		.section	.text.MX_DMA_Init,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	MX_DMA_Init:
 157              	.LFB135:
 356:Core/Src/main.c **** 
 158              		.loc 1 356 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI4:
ARM GAS  /tmp/ccAy7H4i.s 			page 11


 169              		.cfi_def_cfa_offset 16
 359:Core/Src/main.c **** 
 170              		.loc 1 359 3 view .LVU36
 171              	.LBB6:
 359:Core/Src/main.c **** 
 172              		.loc 1 359 3 view .LVU37
 173 0004 0024     		movs	r4, #0
 174 0006 0194     		str	r4, [sp, #4]
 359:Core/Src/main.c **** 
 175              		.loc 1 359 3 view .LVU38
 176 0008 0D4B     		ldr	r3, .L7
 177 000a 1A6B     		ldr	r2, [r3, #48]
 178 000c 42F40012 		orr	r2, r2, #2097152
 179 0010 1A63     		str	r2, [r3, #48]
 359:Core/Src/main.c **** 
 180              		.loc 1 359 3 view .LVU39
 181 0012 1B6B     		ldr	r3, [r3, #48]
 182 0014 03F40013 		and	r3, r3, #2097152
 183 0018 0193     		str	r3, [sp, #4]
 359:Core/Src/main.c **** 
 184              		.loc 1 359 3 view .LVU40
 185 001a 019B     		ldr	r3, [sp, #4]
 186              	.LBE6:
 359:Core/Src/main.c **** 
 187              		.loc 1 359 3 view .LVU41
 363:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 188              		.loc 1 363 3 view .LVU42
 189 001c 2246     		mov	r2, r4
 190 001e 0121     		movs	r1, #1
 191 0020 1020     		movs	r0, #16
 192 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL5:
 364:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 194              		.loc 1 364 3 view .LVU43
 195 0026 1020     		movs	r0, #16
 196 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL6:
 366:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 198              		.loc 1 366 3 view .LVU44
 199 002c 2246     		mov	r2, r4
 200 002e 2146     		mov	r1, r4
 201 0030 1120     		movs	r0, #17
 202 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL7:
 367:Core/Src/main.c **** 
 204              		.loc 1 367 3 view .LVU45
 205 0036 1120     		movs	r0, #17
 206 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL8:
 369:Core/Src/main.c **** 
 208              		.loc 1 369 1 is_stmt 0 view .LVU46
 209 003c 02B0     		add	sp, sp, #8
 210              	.LCFI5:
 211              		.cfi_def_cfa_offset 8
 212              		@ sp needed
 213 003e 10BD     		pop	{r4, pc}
 214              	.L8:
ARM GAS  /tmp/ccAy7H4i.s 			page 12


 215              		.align	2
 216              	.L7:
 217 0040 00380240 		.word	1073887232
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 222              		.align	2
 223              	.LC0:
 224 0000 52656365 		.ascii	"Received : \000"
 224      69766564 
 224      203A2000 
 225              		.align	2
 226              	.LC1:
 227 000c 456E6420 		.ascii	"End of MDP ! There is ' \000"
 227      6F66204D 
 227      44502021 
 227      20546865 
 227      72652069 
 228 0025 000000   		.align	2
 229              	.LC2:
 230 0028 20270D0A 		.ascii	" '\015\012\000"
 230      00
 231 002d 000000   		.align	2
 232              	.LC3:
 233 0030 596F7572 		.ascii	"Your MDP is too long, rewrite it please with max 10"
 233      204D4450 
 233      20697320 
 233      746F6F20 
 233      6C6F6E67 
 234 0063 20636172 		.ascii	" caracters\015\012\000"
 234      61637465 
 234      72730D0A 
 234      00
 235              		.align	2
 236              	.LC4:
 237 0070 0D0A00   		.ascii	"\015\012\000"
 238 0073 00       		.align	2
 239              	.LC5:
 240 0074 5B545259 		.ascii	"[TRY] Received : \000"
 240      5D205265 
 240      63656976 
 240      6564203A 
 240      2000
 241 0086 0000     		.align	2
 242              	.LC6:
 243 0088 456E6420 		.ascii	"End of TRY ! \015\012\000"
 243      6F662054 
 243      52592021 
 243      200D0A00 
 244              		.align	2
 245              	.LC7:
 246 0098 44657665 		.ascii	"Deverouillage Done ! \015\012\000"
 246      726F7569 
 246      6C6C6167 
 246      6520446F 
 246      6E652021 
 247              		.align	2
ARM GAS  /tmp/ccAy7H4i.s 			page 13


 248              	.LC8:
 249 00b0 44657665 		.ascii	"Deverouillage Failed ! \015\012\000"
 249      726F7569 
 249      6C6C6167 
 249      65204661 
 249      696C6564 
 250              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 251              		.align	1
 252              		.global	HAL_UART_RxCpltCallback
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	HAL_UART_RxCpltCallback:
 259              	.LVL9:
 260              	.LFB130:
  93:Core/Src/main.c **** 	
 261              		.loc 1 93 56 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/main.c **** 	
 265              		.loc 1 93 56 is_stmt 0 view .LVU48
 266 0000 38B5     		push	{r3, r4, r5, lr}
 267              	.LCFI6:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 3, -16
 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 273              		.loc 1 95 2 is_stmt 1 view .LVU49
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 274              		.loc 1 95 11 is_stmt 0 view .LVU50
 275 0002 4D4B     		ldr	r3, .L23
 276 0004 1B68     		ldr	r3, [r3]
  95:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "Received : ", 11, 10);
 277              		.loc 1 95 4 view .LVU51
 278 0006 13B1     		cbz	r3, .L18
 114:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "[TRY] Received : ", 17, 10);
 279              		.loc 1 114 7 is_stmt 1 view .LVU52
 114:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, "[TRY] Received : ", 17, 10);
 280              		.loc 1 114 9 is_stmt 0 view .LVU53
 281 0008 012B     		cmp	r3, #1
 282 000a 48D0     		beq	.L19
 283              	.LVL10:
 284              	.L9:
 140:Core/Src/main.c **** 
 285              		.loc 1 140 1 view .LVU54
 286 000c 38BD     		pop	{r3, r4, r5, pc}
 287              	.LVL11:
 288              	.L18:
  96:Core/Src/main.c **** 		if(buffer == '\r')
 289              		.loc 1 96 3 is_stmt 1 view .LVU55
 290 000e 0A23     		movs	r3, #10
 291 0010 0B22     		movs	r2, #11
 292 0012 4A49     		ldr	r1, .L23+4
ARM GAS  /tmp/ccAy7H4i.s 			page 14


 293 0014 4A48     		ldr	r0, .L23+8
 294              	.LVL12:
  96:Core/Src/main.c **** 		if(buffer == '\r')
 295              		.loc 1 96 3 is_stmt 0 view .LVU56
 296 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 297              	.LVL13:
  97:Core/Src/main.c **** 		{
 298              		.loc 1 97 3 is_stmt 1 view .LVU57
  97:Core/Src/main.c **** 		{
 299              		.loc 1 97 13 is_stmt 0 view .LVU58
 300 001a 4A4B     		ldr	r3, .L23+12
 301 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97:Core/Src/main.c **** 		{
 302              		.loc 1 97 5 view .LVU59
 303 001e 0D2B     		cmp	r3, #13
 304 0020 0FD0     		beq	.L20
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 305              		.loc 1 105 4 is_stmt 1 view .LVU60
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 306              		.loc 1 105 17 is_stmt 0 view .LVU61
 307 0022 494B     		ldr	r3, .L23+16
 308 0024 1A68     		ldr	r2, [r3]
 309 0026 494B     		ldr	r3, .L23+20
 310 0028 1B68     		ldr	r3, [r3]
 105:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 311              		.loc 1 105 7 view .LVU62
 312 002a 9A42     		cmp	r2, r3
 313 002c 21D3     		bcc	.L13
 106:Core/Src/main.c **** 				mdp_size = 0;
 314              		.loc 1 106 5 is_stmt 1 view .LVU63
 315 002e 6423     		movs	r3, #100
 316 0030 3F22     		movs	r2, #63
 317 0032 4749     		ldr	r1, .L23+24
 318 0034 4248     		ldr	r0, .L23+8
 319 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 320              	.LVL14:
 107:Core/Src/main.c **** 			}else{
 321              		.loc 1 107 5 view .LVU64
 107:Core/Src/main.c **** 			}else{
 322              		.loc 1 107 14 is_stmt 0 view .LVU65
 323 003a 434B     		ldr	r3, .L23+16
 324 003c 0022     		movs	r2, #0
 325 003e 1A60     		str	r2, [r3]
 326 0040 E4E7     		b	.L9
 327              	.L20:
  99:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, mdp, mdp_size, 100);
 328              		.loc 1 99 4 is_stmt 1 view .LVU66
 329 0042 3F4C     		ldr	r4, .L23+8
 330 0044 6423     		movs	r3, #100
 331 0046 1822     		movs	r2, #24
 332 0048 4249     		ldr	r1, .L23+28
 333 004a 2046     		mov	r0, r4
 334 004c FFF7FEFF 		bl	HAL_UART_Transmit
 335              	.LVL15:
 100:Core/Src/main.c **** 			HAL_UART_Transmit(&huart2, " \'\r\n", 3, 100);
 336              		.loc 1 100 4 view .LVU67
 337 0050 6423     		movs	r3, #100
ARM GAS  /tmp/ccAy7H4i.s 			page 15


 338 0052 3D4A     		ldr	r2, .L23+16
 339 0054 1288     		ldrh	r2, [r2]
 340 0056 4049     		ldr	r1, .L23+32
 341 0058 2046     		mov	r0, r4
 342 005a FFF7FEFF 		bl	HAL_UART_Transmit
 343              	.LVL16:
 101:Core/Src/main.c **** 			state = 1;
 344              		.loc 1 101 4 view .LVU68
 345 005e 6423     		movs	r3, #100
 346 0060 0322     		movs	r2, #3
 347 0062 3E49     		ldr	r1, .L23+36
 348 0064 2046     		mov	r0, r4
 349 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 350              	.LVL17:
 102:Core/Src/main.c **** 		}	
 351              		.loc 1 102 4 view .LVU69
 102:Core/Src/main.c **** 		}	
 352              		.loc 1 102 10 is_stmt 0 view .LVU70
 353 006a 334B     		ldr	r3, .L23
 354 006c 0122     		movs	r2, #1
 355 006e 1A60     		str	r2, [r3]
 356 0070 CCE7     		b	.L9
 357              	.L13:
 109:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 358              		.loc 1 109 5 is_stmt 1 view .LVU71
 359 0072 344C     		ldr	r4, .L23+12
 360 0074 324D     		ldr	r5, .L23+8
 361 0076 0A23     		movs	r3, #10
 362 0078 0122     		movs	r2, #1
 363 007a 2146     		mov	r1, r4
 364 007c 2846     		mov	r0, r5
 365 007e FFF7FEFF 		bl	HAL_UART_Transmit
 366              	.LVL18:
 110:Core/Src/main.c **** 				mdp[mdp_size++] = buffer;
 367              		.loc 1 110 5 view .LVU72
 368 0082 6423     		movs	r3, #100
 369 0084 0222     		movs	r2, #2
 370 0086 3649     		ldr	r1, .L23+40
 371 0088 2846     		mov	r0, r5
 372 008a FFF7FEFF 		bl	HAL_UART_Transmit
 373              	.LVL19:
 111:Core/Src/main.c **** 			}		
 374              		.loc 1 111 5 view .LVU73
 111:Core/Src/main.c **** 			}		
 375              		.loc 1 111 17 is_stmt 0 view .LVU74
 376 008e 2E4A     		ldr	r2, .L23+16
 377 0090 1368     		ldr	r3, [r2]
 378 0092 591C     		adds	r1, r3, #1
 379 0094 1160     		str	r1, [r2]
 111:Core/Src/main.c **** 			}		
 380              		.loc 1 111 21 view .LVU75
 381 0096 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 382 0098 2F4A     		ldr	r2, .L23+32
 383 009a D154     		strb	r1, [r2, r3]
 384 009c B6E7     		b	.L9
 385              	.LVL20:
 386              	.L19:
ARM GAS  /tmp/ccAy7H4i.s 			page 16


 115:Core/Src/main.c **** 		if(buffer == '\r')
 387              		.loc 1 115 3 is_stmt 1 view .LVU76
 388 009e 0A23     		movs	r3, #10
 389 00a0 1122     		movs	r2, #17
 390 00a2 3049     		ldr	r1, .L23+44
 391 00a4 2648     		ldr	r0, .L23+8
 392              	.LVL21:
 115:Core/Src/main.c **** 		if(buffer == '\r')
 393              		.loc 1 115 3 is_stmt 0 view .LVU77
 394 00a6 FFF7FEFF 		bl	HAL_UART_Transmit
 395              	.LVL22:
 116:Core/Src/main.c **** 		{
 396              		.loc 1 116 3 is_stmt 1 view .LVU78
 116:Core/Src/main.c **** 		{
 397              		.loc 1 116 13 is_stmt 0 view .LVU79
 398 00aa 264B     		ldr	r3, .L23+12
 399 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116:Core/Src/main.c **** 		{
 400              		.loc 1 116 5 view .LVU80
 401 00ae 0D2B     		cmp	r3, #13
 402 00b0 0FD0     		beq	.L21
 128:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 403              		.loc 1 128 4 is_stmt 1 view .LVU81
 128:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 404              		.loc 1 128 21 is_stmt 0 view .LVU82
 405 00b2 2D4B     		ldr	r3, .L23+48
 406 00b4 1A68     		ldr	r2, [r3]
 407 00b6 254B     		ldr	r3, .L23+20
 408 00b8 1B68     		ldr	r3, [r3]
 128:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Your MDP is too long, rewrite it please with max 10 caracters\r\n",
 409              		.loc 1 128 7 view .LVU83
 410 00ba 9A42     		cmp	r2, r3
 411 00bc 26D3     		bcc	.L16
 129:Core/Src/main.c **** 				mdp_try_size = 0;
 412              		.loc 1 129 5 is_stmt 1 view .LVU84
 413 00be 6423     		movs	r3, #100
 414 00c0 3F22     		movs	r2, #63
 415 00c2 2349     		ldr	r1, .L23+24
 416 00c4 1E48     		ldr	r0, .L23+8
 417 00c6 FFF7FEFF 		bl	HAL_UART_Transmit
 418              	.LVL23:
 130:Core/Src/main.c **** 			}else{
 419              		.loc 1 130 5 view .LVU85
 130:Core/Src/main.c **** 			}else{
 420              		.loc 1 130 18 is_stmt 0 view .LVU86
 421 00ca 274B     		ldr	r3, .L23+48
 422 00cc 0022     		movs	r2, #0
 423 00ce 1A60     		str	r2, [r3]
 424 00d0 9CE7     		b	.L9
 425              	.L21:
 118:Core/Src/main.c **** 			if((mdp_try_size == mdp_size) && (strncmp(mdp_try,mdp_try,mdp_size)==0)){
 426              		.loc 1 118 4 is_stmt 1 view .LVU87
 427 00d2 6423     		movs	r3, #100
 428 00d4 0F22     		movs	r2, #15
 429 00d6 2549     		ldr	r1, .L23+52
 430 00d8 1948     		ldr	r0, .L23+8
 431 00da FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccAy7H4i.s 			page 17


 432              	.LVL24:
 119:Core/Src/main.c **** 				state = 2;
 433              		.loc 1 119 4 view .LVU88
 434              	.LBB7:
 119:Core/Src/main.c **** 				state = 2;
 435              		.loc 1 119 21 is_stmt 0 view .LVU89
 436 00de 224B     		ldr	r3, .L23+48
 437 00e0 1A68     		ldr	r2, [r3]
 438 00e2 194B     		ldr	r3, .L23+16
 439 00e4 1B68     		ldr	r3, [r3]
 119:Core/Src/main.c **** 				state = 2;
 440              		.loc 1 119 6 view .LVU90
 441 00e6 9A42     		cmp	r2, r3
 442 00e8 06D0     		beq	.L22
 123:Core/Src/main.c **** 			}
 443              		.loc 1 123 5 is_stmt 1 view .LVU91
 444 00ea 6423     		movs	r3, #100
 445 00ec 1922     		movs	r2, #25
 446 00ee 2049     		ldr	r1, .L23+56
 447 00f0 1348     		ldr	r0, .L23+8
 448 00f2 FFF7FEFF 		bl	HAL_UART_Transmit
 449              	.LVL25:
 450 00f6 89E7     		b	.L9
 451              	.L22:
 120:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 452              		.loc 1 120 5 discriminator 1 view .LVU92
 120:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "Deverouillage Done ! \r\n", 23, 100);
 453              		.loc 1 120 11 is_stmt 0 discriminator 1 view .LVU93
 454 00f8 0F4B     		ldr	r3, .L23
 455 00fa 0222     		movs	r2, #2
 456 00fc 1A60     		str	r2, [r3]
 121:Core/Src/main.c **** 			} else {
 457              		.loc 1 121 5 is_stmt 1 discriminator 1 view .LVU94
 458 00fe 6423     		movs	r3, #100
 459 0100 1722     		movs	r2, #23
 460 0102 1C49     		ldr	r1, .L23+60
 461 0104 0E48     		ldr	r0, .L23+8
 462 0106 FFF7FEFF 		bl	HAL_UART_Transmit
 463              	.LVL26:
 464 010a 7FE7     		b	.L9
 465              	.L16:
 466              	.LBE7:
 132:Core/Src/main.c **** 				HAL_UART_Transmit(&huart2, "\r\n", 2, 100);
 467              		.loc 1 132 5 view .LVU95
 468 010c 0D4C     		ldr	r4, .L23+12
 469 010e 0C4D     		ldr	r5, .L23+8
 470 0110 0A23     		movs	r3, #10
 471 0112 0122     		movs	r2, #1
 472 0114 2146     		mov	r1, r4
 473 0116 2846     		mov	r0, r5
 474 0118 FFF7FEFF 		bl	HAL_UART_Transmit
 475              	.LVL27:
 133:Core/Src/main.c **** 				mdp_try[mdp_try_size++] = buffer;
 476              		.loc 1 133 5 view .LVU96
 477 011c 6423     		movs	r3, #100
 478 011e 0222     		movs	r2, #2
 479 0120 0F49     		ldr	r1, .L23+40
ARM GAS  /tmp/ccAy7H4i.s 			page 18


 480 0122 2846     		mov	r0, r5
 481 0124 FFF7FEFF 		bl	HAL_UART_Transmit
 482              	.LVL28:
 134:Core/Src/main.c **** 			}
 483              		.loc 1 134 5 view .LVU97
 134:Core/Src/main.c **** 			}
 484              		.loc 1 134 25 is_stmt 0 view .LVU98
 485 0128 0F4A     		ldr	r2, .L23+48
 486 012a 1368     		ldr	r3, [r2]
 487 012c 591C     		adds	r1, r3, #1
 488 012e 1160     		str	r1, [r2]
 134:Core/Src/main.c **** 			}
 489              		.loc 1 134 29 view .LVU99
 490 0130 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 491 0132 114A     		ldr	r2, .L23+64
 492 0134 D154     		strb	r1, [r2, r3]
 140:Core/Src/main.c **** 
 493              		.loc 1 140 1 view .LVU100
 494 0136 69E7     		b	.L9
 495              	.L24:
 496              		.align	2
 497              	.L23:
 498 0138 00000000 		.word	.LANCHOR0
 499 013c 00000000 		.word	.LC0
 500 0140 00000000 		.word	huart2
 501 0144 00000000 		.word	buffer
 502 0148 00000000 		.word	.LANCHOR1
 503 014c 00000000 		.word	.LANCHOR2
 504 0150 30000000 		.word	.LC3
 505 0154 0C000000 		.word	.LC1
 506 0158 00000000 		.word	mdp
 507 015c 28000000 		.word	.LC2
 508 0160 70000000 		.word	.LC4
 509 0164 74000000 		.word	.LC5
 510 0168 00000000 		.word	.LANCHOR3
 511 016c 88000000 		.word	.LC6
 512 0170 B0000000 		.word	.LC8
 513 0174 98000000 		.word	.LC7
 514 0178 00000000 		.word	mdp_try
 515              		.cfi_endproc
 516              	.LFE130:
 518              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 519              		.align	2
 520              	.LC9:
 521 0000 30202D2D 		.ascii	"0 --> 1\015\012\000"
 521      3E20310D 
 521      0A00
 522 000a 0000     		.align	2
 523              	.LC10:
 524 000c 31202D2D 		.ascii	"1 --> 2\015\012\000"
 524      3E20320D 
 524      0A00
 525 0016 0000     		.align	2
 526              	.LC11:
 527 0018 31202D2D 		.ascii	"1 --> 1\015\012\000"
 527      3E20310D 
 527      0A00
ARM GAS  /tmp/ccAy7H4i.s 			page 19


 528 0022 0000     		.align	2
 529              	.LC12:
 530 0024 32202D2D 		.ascii	"2 --> 0\015\012\000"
 530      3E20300D 
 530      0A00
 531 002e 0000     		.align	2
 532              	.LC13:
 533 0030 32202D2D 		.ascii	"2 --> 1\015\012\000"
 533      3E20310D 
 533      0A00
 534              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 535              		.align	1
 536              		.global	HAL_GPIO_EXTI_Callback
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu fpv4-sp-d16
 542              	HAL_GPIO_EXTI_Callback:
 543              	.LVL29:
 544              	.LFB137:
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 411:Core/Src/main.c **** {
 545              		.loc 1 411 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 412:Core/Src/main.c **** 	int tmp;
 549              		.loc 1 412 2 view .LVU102
 413:Core/Src/main.c **** 	if( GPIO_Pin == GPIO_PIN_13 ) {
 550              		.loc 1 413 2 view .LVU103
 551              		.loc 1 413 4 is_stmt 0 view .LVU104
 552 0000 B0F5005F 		cmp	r0, #8192
 553 0004 00D0     		beq	.L36
 554 0006 7047     		bx	lr
 555              	.L36:
 411:Core/Src/main.c **** 	int tmp;
 556              		.loc 1 411 1 view .LVU105
 557 0008 10B5     		push	{r4, lr}
 558              	.LCFI7:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 414:Core/Src/main.c **** 		tmp = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
 562              		.loc 1 414 3 is_stmt 1 view .LVU106
 563              		.loc 1 414 9 is_stmt 0 view .LVU107
 564 000a 4FF40051 		mov	r1, #8192
 565 000e 00F18040 		add	r0, r0, #1073741824
 566              	.LVL30:
 567              		.loc 1 414 9 view .LVU108
 568 0012 00F5F430 		add	r0, r0, #124928
 569 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 570              	.LVL31:
ARM GAS  /tmp/ccAy7H4i.s 			page 20


 415:Core/Src/main.c **** 		if (tmp == 0) // on appuie
 571              		.loc 1 415 3 is_stmt 1 view .LVU109
 572              		.loc 1 415 6 is_stmt 0 view .LVU110
 573 001a 18B9     		cbnz	r0, .L27
 416:Core/Src/main.c **** 		{
 417:Core/Src/main.c **** 		   nb_push_second = 0;
 574              		.loc 1 417 6 is_stmt 1 view .LVU111
 575              		.loc 1 417 21 is_stmt 0 view .LVU112
 576 001c 234B     		ldr	r3, .L37
 577 001e 0022     		movs	r2, #0
 578 0020 1A80     		strh	r2, [r3]	@ movhi
 579              	.LVL32:
 580              	.L25:
 418:Core/Src/main.c **** 		} 
 419:Core/Src/main.c **** 		else		// onrelache
 420:Core/Src/main.c **** 		{
 421:Core/Src/main.c **** 		   switch( state )
 422:Core/Src/main.c **** 		   {
 423:Core/Src/main.c **** 		      case 0:
 424:Core/Src/main.c ****                         HAL_UART_Transmit(&huart2,"0 --> 1\r\n",11, 100);
 425:Core/Src/main.c ****                         state = 1;
 426:Core/Src/main.c ****                         break;
 427:Core/Src/main.c ****                      case 1:
 428:Core/Src/main.c ****                      	 if(nb_push_second < 1){   	// appuie cours de moins 1s
 429:Core/Src/main.c ****                      	    				//TODO accepte dévérouillage pendant 30s (si dévérouillage state 
 430:Core/Src/main.c ****                      	    state = 2;
 431:Core/Src/main.c ****                      	    HAL_UART_Transmit(&huart2,"1 --> 2\r\n", 11,100);
 432:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); // Lecture du mot de pass //TO
 433:Core/Src/main.c ****                      	 }
 434:Core/Src/main.c ****                      	 else
 435:Core/Src/main.c ****                      	 	HAL_UART_Transmit(&huart2,"1 --> 1\r\n", 11,100);
 436:Core/Src/main.c ****                         break;
 437:Core/Src/main.c ****                      case 2:
 438:Core/Src/main.c ****                         if(nb_push_second > 5){  	// appuie de plus de 5s reset la carte 
 439:Core/Src/main.c ****                         	state = 0;
 440:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 441:Core/Src/main.c ****                         }
 442:Core/Src/main.c ****                         else {			// appuie de plus de moins de 1s vérouillage de la carte  
 443:Core/Src/main.c ****                         	state = 1;
 444:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
 445:Core/Src/main.c ****                         }
 446:Core/Src/main.c ****                         break;
 447:Core/Src/main.c ****                      default:
 448:Core/Src/main.c **** 			 break;                     	
 449:Core/Src/main.c ****                   }
 450:Core/Src/main.c **** 		}
 451:Core/Src/main.c **** 		
 452:Core/Src/main.c **** 	}
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 581              		.loc 1 454 1 view .LVU113
 582 0022 10BD     		pop	{r4, pc}
 583              	.LVL33:
 584              	.L27:
 421:Core/Src/main.c **** 		   {
 585              		.loc 1 421 6 is_stmt 1 view .LVU114
 586 0024 224B     		ldr	r3, .L37+4
ARM GAS  /tmp/ccAy7H4i.s 			page 21


 587 0026 1B68     		ldr	r3, [r3]
 588 0028 012B     		cmp	r3, #1
 589 002a 0DD0     		beq	.L28
 590 002c 022B     		cmp	r3, #2
 591 002e 25D0     		beq	.L29
 592 0030 002B     		cmp	r3, #0
 593 0032 F6D1     		bne	.L25
 424:Core/Src/main.c ****                         state = 1;
 594              		.loc 1 424 25 view .LVU115
 595 0034 6423     		movs	r3, #100
 596 0036 0B22     		movs	r2, #11
 597 0038 1E49     		ldr	r1, .L37+8
 598 003a 1F48     		ldr	r0, .L37+12
 599              	.LVL34:
 424:Core/Src/main.c ****                         state = 1;
 600              		.loc 1 424 25 is_stmt 0 view .LVU116
 601 003c FFF7FEFF 		bl	HAL_UART_Transmit
 602              	.LVL35:
 425:Core/Src/main.c ****                         break;
 603              		.loc 1 425 25 is_stmt 1 view .LVU117
 425:Core/Src/main.c ****                         break;
 604              		.loc 1 425 31 is_stmt 0 view .LVU118
 605 0040 1B4B     		ldr	r3, .L37+4
 606 0042 0122     		movs	r2, #1
 607 0044 1A60     		str	r2, [r3]
 426:Core/Src/main.c ****                      case 1:
 608              		.loc 1 426 25 is_stmt 1 view .LVU119
 609 0046 ECE7     		b	.L25
 610              	.LVL36:
 611              	.L28:
 428:Core/Src/main.c ****                      	    				//TODO accepte dévérouillage pendant 30s (si dévérouillage state 
 612              		.loc 1 428 24 view .LVU120
 428:Core/Src/main.c ****                      	    				//TODO accepte dévérouillage pendant 30s (si dévérouillage state 
 613              		.loc 1 428 42 is_stmt 0 view .LVU121
 614 0048 184B     		ldr	r3, .L37
 615 004a 1B88     		ldrh	r3, [r3]
 428:Core/Src/main.c ****                      	    				//TODO accepte dévérouillage pendant 30s (si dévérouillage state 
 616              		.loc 1 428 26 view .LVU122
 617 004c 7BB9     		cbnz	r3, .L30
 430:Core/Src/main.c ****                      	    HAL_UART_Transmit(&huart2,"1 --> 2\r\n", 11,100);
 618              		.loc 1 430 27 is_stmt 1 view .LVU123
 430:Core/Src/main.c ****                      	    HAL_UART_Transmit(&huart2,"1 --> 2\r\n", 11,100);
 619              		.loc 1 430 33 is_stmt 0 view .LVU124
 620 004e 184B     		ldr	r3, .L37+4
 621 0050 0222     		movs	r2, #2
 622 0052 1A60     		str	r2, [r3]
 431:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); // Lecture du mot de pass //TO
 623              		.loc 1 431 27 is_stmt 1 view .LVU125
 624 0054 184C     		ldr	r4, .L37+12
 625 0056 6423     		movs	r3, #100
 626 0058 0B22     		movs	r2, #11
 627 005a 1849     		ldr	r1, .L37+16
 628 005c 2046     		mov	r0, r4
 629              	.LVL37:
 431:Core/Src/main.c ****                      	    HAL_UART_Receive_DMA(&huart2, &buffer, 1); // Lecture du mot de pass //TO
 630              		.loc 1 431 27 is_stmt 0 view .LVU126
 631 005e FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccAy7H4i.s 			page 22


 632              	.LVL38:
 432:Core/Src/main.c ****                      	 }
 633              		.loc 1 432 27 is_stmt 1 view .LVU127
 634 0062 0122     		movs	r2, #1
 635 0064 1649     		ldr	r1, .L37+20
 636 0066 2046     		mov	r0, r4
 637 0068 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 638              	.LVL39:
 639 006c D9E7     		b	.L25
 640              	.LVL40:
 641              	.L30:
 435:Core/Src/main.c ****                         break;
 642              		.loc 1 435 25 view .LVU128
 643 006e 6423     		movs	r3, #100
 644 0070 0B22     		movs	r2, #11
 645 0072 1449     		ldr	r1, .L37+24
 646 0074 1048     		ldr	r0, .L37+12
 647              	.LVL41:
 435:Core/Src/main.c ****                         break;
 648              		.loc 1 435 25 is_stmt 0 view .LVU129
 649 0076 FFF7FEFF 		bl	HAL_UART_Transmit
 650              	.LVL42:
 651 007a D2E7     		b	.L25
 652              	.LVL43:
 653              	.L29:
 438:Core/Src/main.c ****                         	state = 0;
 654              		.loc 1 438 25 is_stmt 1 view .LVU130
 438:Core/Src/main.c ****                         	state = 0;
 655              		.loc 1 438 43 is_stmt 0 view .LVU131
 656 007c 0B4B     		ldr	r3, .L37
 657 007e 1B88     		ldrh	r3, [r3]
 438:Core/Src/main.c ****                         	state = 0;
 658              		.loc 1 438 27 view .LVU132
 659 0080 052B     		cmp	r3, #5
 660 0082 09D9     		bls	.L31
 439:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 661              		.loc 1 439 26 is_stmt 1 view .LVU133
 439:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 0\r\n", 11,100);
 662              		.loc 1 439 32 is_stmt 0 view .LVU134
 663 0084 0A4B     		ldr	r3, .L37+4
 664 0086 0022     		movs	r2, #0
 665 0088 1A60     		str	r2, [r3]
 440:Core/Src/main.c ****                         }
 666              		.loc 1 440 26 is_stmt 1 view .LVU135
 667 008a 6423     		movs	r3, #100
 668 008c 0B22     		movs	r2, #11
 669 008e 0E49     		ldr	r1, .L37+28
 670 0090 0948     		ldr	r0, .L37+12
 671              	.LVL44:
 440:Core/Src/main.c ****                         }
 672              		.loc 1 440 26 is_stmt 0 view .LVU136
 673 0092 FFF7FEFF 		bl	HAL_UART_Transmit
 674              	.LVL45:
 675 0096 C4E7     		b	.L25
 676              	.LVL46:
 677              	.L31:
 443:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
ARM GAS  /tmp/ccAy7H4i.s 			page 23


 678              		.loc 1 443 26 is_stmt 1 view .LVU137
 443:Core/Src/main.c ****                         	HAL_UART_Transmit(&huart2,"2 --> 1\r\n", 11,100);
 679              		.loc 1 443 32 is_stmt 0 view .LVU138
 680 0098 054B     		ldr	r3, .L37+4
 681 009a 0122     		movs	r2, #1
 682 009c 1A60     		str	r2, [r3]
 444:Core/Src/main.c ****                         }
 683              		.loc 1 444 26 is_stmt 1 view .LVU139
 684 009e 6423     		movs	r3, #100
 685 00a0 0B22     		movs	r2, #11
 686 00a2 0A49     		ldr	r1, .L37+32
 687 00a4 0448     		ldr	r0, .L37+12
 688              	.LVL47:
 444:Core/Src/main.c ****                         }
 689              		.loc 1 444 26 is_stmt 0 view .LVU140
 690 00a6 FFF7FEFF 		bl	HAL_UART_Transmit
 691              	.LVL48:
 692              		.loc 1 454 1 view .LVU141
 693 00aa BAE7     		b	.L25
 694              	.L38:
 695              		.align	2
 696              	.L37:
 697 00ac 00000000 		.word	.LANCHOR4
 698 00b0 00000000 		.word	.LANCHOR0
 699 00b4 00000000 		.word	.LC9
 700 00b8 00000000 		.word	huart2
 701 00bc 0C000000 		.word	.LC10
 702 00c0 00000000 		.word	buffer
 703 00c4 18000000 		.word	.LC11
 704 00c8 24000000 		.word	.LC12
 705 00cc 30000000 		.word	.LC13
 706              		.cfi_endproc
 707              	.LFE137:
 709              		.section	.text.Error_Handler,"ax",%progbits
 710              		.align	1
 711              		.global	Error_Handler
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	Error_Handler:
 718              	.LFB138:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /* USER CODE END 4 */
 457:Core/Src/main.c **** 
 458:Core/Src/main.c **** /**
 459:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 460:Core/Src/main.c ****   * @retval None
 461:Core/Src/main.c ****   */
 462:Core/Src/main.c **** void Error_Handler(void)
 463:Core/Src/main.c **** {
 719              		.loc 1 463 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ Volatile: function does not return.
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		@ link register save eliminated.
ARM GAS  /tmp/ccAy7H4i.s 			page 24


 464:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 465:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 466:Core/Src/main.c ****   __disable_irq();
 725              		.loc 1 466 3 view .LVU143
 726              	.LBB8:
 727              	.LBI8:
 728              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/ccAy7H4i.s 			page 25


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccAy7H4i.s 			page 26


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 729              		.loc 2 140 27 view .LVU144
 730              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 731              		.loc 2 142 3 view .LVU145
 732              		.syntax unified
 733              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 734 0000 72B6     		cpsid i
 735              	@ 0 "" 2
 736              		.thumb
 737              		.syntax unified
 738              	.L40:
 739              	.LBE9:
 740              	.LBE8:
 467:Core/Src/main.c ****   while (1)
 741              		.loc 1 467 3 discriminator 1 view .LVU146
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****   }
 742              		.loc 1 469 3 discriminator 1 view .LVU147
 467:Core/Src/main.c ****   while (1)
 743              		.loc 1 467 9 discriminator 1 view .LVU148
 744 0002 FEE7     		b	.L40
 745              		.cfi_endproc
 746              	.LFE138:
ARM GAS  /tmp/ccAy7H4i.s 			page 27


 748              		.section	.text.MX_TIM10_Init,"ax",%progbits
 749              		.align	1
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu fpv4-sp-d16
 755              	MX_TIM10_Init:
 756              	.LFB133:
 294:Core/Src/main.c **** 
 757              		.loc 1 294 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 08B5     		push	{r3, lr}
 762              	.LCFI8:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 3, -8
 765              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 766              		.loc 1 303 3 view .LVU150
 303:Core/Src/main.c ****   htim10.Init.Prescaler = 16 - 1;
 767              		.loc 1 303 19 is_stmt 0 view .LVU151
 768 0002 0948     		ldr	r0, .L45
 769 0004 094B     		ldr	r3, .L45+4
 770 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 771              		.loc 1 304 3 is_stmt 1 view .LVU152
 304:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 772              		.loc 1 304 25 is_stmt 0 view .LVU153
 773 0008 0F23     		movs	r3, #15
 774 000a 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 775              		.loc 1 305 3 is_stmt 1 view .LVU154
 305:Core/Src/main.c ****   htim10.Init.Period = 65536 - 1;
 776              		.loc 1 305 27 is_stmt 0 view .LVU155
 777 000c 0023     		movs	r3, #0
 778 000e 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 779              		.loc 1 306 3 is_stmt 1 view .LVU156
 306:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 780              		.loc 1 306 22 is_stmt 0 view .LVU157
 781 0010 4FF6FF72 		movw	r2, #65535
 782 0014 C260     		str	r2, [r0, #12]
 307:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 783              		.loc 1 307 3 is_stmt 1 view .LVU158
 307:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 784              		.loc 1 307 29 is_stmt 0 view .LVU159
 785 0016 0361     		str	r3, [r0, #16]
 308:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 786              		.loc 1 308 3 is_stmt 1 view .LVU160
 308:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 787              		.loc 1 308 33 is_stmt 0 view .LVU161
 788 0018 8361     		str	r3, [r0, #24]
 309:Core/Src/main.c ****   {
 789              		.loc 1 309 3 is_stmt 1 view .LVU162
 309:Core/Src/main.c ****   {
 790              		.loc 1 309 7 is_stmt 0 view .LVU163
ARM GAS  /tmp/ccAy7H4i.s 			page 28


 791 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 792              	.LVL49:
 309:Core/Src/main.c ****   {
 793              		.loc 1 309 6 view .LVU164
 794 001e 00B9     		cbnz	r0, .L44
 317:Core/Src/main.c **** 
 795              		.loc 1 317 1 view .LVU165
 796 0020 08BD     		pop	{r3, pc}
 797              	.L44:
 311:Core/Src/main.c ****   }
 798              		.loc 1 311 5 is_stmt 1 view .LVU166
 799 0022 FFF7FEFF 		bl	Error_Handler
 800              	.LVL50:
 801              	.L46:
 802 0026 00BF     		.align	2
 803              	.L45:
 804 0028 00000000 		.word	htim10
 805 002c 00440140 		.word	1073824768
 806              		.cfi_endproc
 807              	.LFE133:
 809              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 810              		.align	1
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	MX_USART2_UART_Init:
 817              	.LFB134:
 325:Core/Src/main.c **** 
 818              		.loc 1 325 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 08B5     		push	{r3, lr}
 823              	.LCFI9:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 3, -8
 826              		.cfi_offset 14, -4
 334:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 827              		.loc 1 334 3 view .LVU168
 334:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 828              		.loc 1 334 19 is_stmt 0 view .LVU169
 829 0002 0A48     		ldr	r0, .L51
 830 0004 0A4B     		ldr	r3, .L51+4
 831 0006 0360     		str	r3, [r0]
 335:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 832              		.loc 1 335 3 is_stmt 1 view .LVU170
 335:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 833              		.loc 1 335 24 is_stmt 0 view .LVU171
 834 0008 4FF4E133 		mov	r3, #115200
 835 000c 4360     		str	r3, [r0, #4]
 336:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 836              		.loc 1 336 3 is_stmt 1 view .LVU172
 336:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 837              		.loc 1 336 26 is_stmt 0 view .LVU173
 838 000e 0023     		movs	r3, #0
 839 0010 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccAy7H4i.s 			page 29


 337:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 840              		.loc 1 337 3 is_stmt 1 view .LVU174
 337:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 841              		.loc 1 337 24 is_stmt 0 view .LVU175
 842 0012 C360     		str	r3, [r0, #12]
 338:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 843              		.loc 1 338 3 is_stmt 1 view .LVU176
 338:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 844              		.loc 1 338 22 is_stmt 0 view .LVU177
 845 0014 0361     		str	r3, [r0, #16]
 339:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 846              		.loc 1 339 3 is_stmt 1 view .LVU178
 339:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 847              		.loc 1 339 20 is_stmt 0 view .LVU179
 848 0016 0C22     		movs	r2, #12
 849 0018 4261     		str	r2, [r0, #20]
 340:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 850              		.loc 1 340 3 is_stmt 1 view .LVU180
 340:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 851              		.loc 1 340 25 is_stmt 0 view .LVU181
 852 001a 8361     		str	r3, [r0, #24]
 341:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 853              		.loc 1 341 3 is_stmt 1 view .LVU182
 341:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 854              		.loc 1 341 28 is_stmt 0 view .LVU183
 855 001c C361     		str	r3, [r0, #28]
 342:Core/Src/main.c ****   {
 856              		.loc 1 342 3 is_stmt 1 view .LVU184
 342:Core/Src/main.c ****   {
 857              		.loc 1 342 7 is_stmt 0 view .LVU185
 858 001e FFF7FEFF 		bl	HAL_UART_Init
 859              	.LVL51:
 342:Core/Src/main.c ****   {
 860              		.loc 1 342 6 view .LVU186
 861 0022 00B9     		cbnz	r0, .L50
 350:Core/Src/main.c **** 
 862              		.loc 1 350 1 view .LVU187
 863 0024 08BD     		pop	{r3, pc}
 864              	.L50:
 344:Core/Src/main.c ****   }
 865              		.loc 1 344 5 is_stmt 1 view .LVU188
 866 0026 FFF7FEFF 		bl	Error_Handler
 867              	.LVL52:
 868              	.L52:
 869 002a 00BF     		.align	2
 870              	.L51:
 871 002c 00000000 		.word	huart2
 872 0030 00440040 		.word	1073759232
 873              		.cfi_endproc
 874              	.LFE134:
 876              		.section	.text.SystemClock_Config,"ax",%progbits
 877              		.align	1
 878              		.global	SystemClock_Config
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccAy7H4i.s 			page 30


 884              	SystemClock_Config:
 885              	.LFB132:
 252:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 886              		.loc 1 252 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 80
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890 0000 00B5     		push	{lr}
 891              	.LCFI10:
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 14, -4
 894 0002 95B0     		sub	sp, sp, #84
 895              	.LCFI11:
 896              		.cfi_def_cfa_offset 88
 253:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 897              		.loc 1 253 3 view .LVU190
 253:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 898              		.loc 1 253 22 is_stmt 0 view .LVU191
 899 0004 3022     		movs	r2, #48
 900 0006 0021     		movs	r1, #0
 901 0008 08A8     		add	r0, sp, #32
 902 000a FFF7FEFF 		bl	memset
 903              	.LVL53:
 254:Core/Src/main.c **** 
 904              		.loc 1 254 3 is_stmt 1 view .LVU192
 254:Core/Src/main.c **** 
 905              		.loc 1 254 22 is_stmt 0 view .LVU193
 906 000e 0023     		movs	r3, #0
 907 0010 0393     		str	r3, [sp, #12]
 908 0012 0493     		str	r3, [sp, #16]
 909 0014 0593     		str	r3, [sp, #20]
 910 0016 0693     		str	r3, [sp, #24]
 911 0018 0793     		str	r3, [sp, #28]
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 912              		.loc 1 258 3 is_stmt 1 view .LVU194
 913              	.LBB10:
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 914              		.loc 1 258 3 view .LVU195
 915 001a 0193     		str	r3, [sp, #4]
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 916              		.loc 1 258 3 view .LVU196
 917 001c 194A     		ldr	r2, .L59
 918 001e 116C     		ldr	r1, [r2, #64]
 919 0020 41F08051 		orr	r1, r1, #268435456
 920 0024 1164     		str	r1, [r2, #64]
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 921              		.loc 1 258 3 view .LVU197
 922 0026 126C     		ldr	r2, [r2, #64]
 923 0028 02F08052 		and	r2, r2, #268435456
 924 002c 0192     		str	r2, [sp, #4]
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 925              		.loc 1 258 3 view .LVU198
 926 002e 019A     		ldr	r2, [sp, #4]
 927              	.LBE10:
 258:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 928              		.loc 1 258 3 view .LVU199
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccAy7H4i.s 			page 31


 929              		.loc 1 259 3 view .LVU200
 930              	.LBB11:
 259:Core/Src/main.c **** 
 931              		.loc 1 259 3 view .LVU201
 932 0030 0293     		str	r3, [sp, #8]
 259:Core/Src/main.c **** 
 933              		.loc 1 259 3 view .LVU202
 934 0032 1549     		ldr	r1, .L59+4
 935 0034 0A68     		ldr	r2, [r1]
 936 0036 22F44042 		bic	r2, r2, #49152
 937 003a 42F40042 		orr	r2, r2, #32768
 938 003e 0A60     		str	r2, [r1]
 259:Core/Src/main.c **** 
 939              		.loc 1 259 3 view .LVU203
 940 0040 0A68     		ldr	r2, [r1]
 941 0042 02F44042 		and	r2, r2, #49152
 942 0046 0292     		str	r2, [sp, #8]
 259:Core/Src/main.c **** 
 943              		.loc 1 259 3 view .LVU204
 944 0048 029A     		ldr	r2, [sp, #8]
 945              	.LBE11:
 259:Core/Src/main.c **** 
 946              		.loc 1 259 3 view .LVU205
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 947              		.loc 1 264 3 view .LVU206
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 948              		.loc 1 264 36 is_stmt 0 view .LVU207
 949 004a 0222     		movs	r2, #2
 950 004c 0892     		str	r2, [sp, #32]
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 951              		.loc 1 265 3 is_stmt 1 view .LVU208
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 952              		.loc 1 265 30 is_stmt 0 view .LVU209
 953 004e 0122     		movs	r2, #1
 954 0050 0B92     		str	r2, [sp, #44]
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 955              		.loc 1 266 3 is_stmt 1 view .LVU210
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 956              		.loc 1 266 41 is_stmt 0 view .LVU211
 957 0052 1022     		movs	r2, #16
 958 0054 0C92     		str	r2, [sp, #48]
 267:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 959              		.loc 1 267 3 is_stmt 1 view .LVU212
 267:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 960              		.loc 1 267 34 is_stmt 0 view .LVU213
 961 0056 0E93     		str	r3, [sp, #56]
 268:Core/Src/main.c ****   {
 962              		.loc 1 268 3 is_stmt 1 view .LVU214
 268:Core/Src/main.c ****   {
 963              		.loc 1 268 7 is_stmt 0 view .LVU215
 964 0058 08A8     		add	r0, sp, #32
 965 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 966              	.LVL54:
 268:Core/Src/main.c ****   {
 967              		.loc 1 268 6 view .LVU216
 968 005e 68B9     		cbnz	r0, .L57
 275:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccAy7H4i.s 			page 32


 969              		.loc 1 275 3 is_stmt 1 view .LVU217
 275:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 970              		.loc 1 275 31 is_stmt 0 view .LVU218
 971 0060 0F23     		movs	r3, #15
 972 0062 0393     		str	r3, [sp, #12]
 277:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 973              		.loc 1 277 3 is_stmt 1 view .LVU219
 277:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 974              		.loc 1 277 34 is_stmt 0 view .LVU220
 975 0064 0021     		movs	r1, #0
 976 0066 0491     		str	r1, [sp, #16]
 278:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 977              		.loc 1 278 3 is_stmt 1 view .LVU221
 278:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 978              		.loc 1 278 35 is_stmt 0 view .LVU222
 979 0068 0591     		str	r1, [sp, #20]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 980              		.loc 1 279 3 is_stmt 1 view .LVU223
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 981              		.loc 1 279 36 is_stmt 0 view .LVU224
 982 006a 0691     		str	r1, [sp, #24]
 280:Core/Src/main.c **** 
 983              		.loc 1 280 3 is_stmt 1 view .LVU225
 280:Core/Src/main.c **** 
 984              		.loc 1 280 36 is_stmt 0 view .LVU226
 985 006c 0791     		str	r1, [sp, #28]
 282:Core/Src/main.c ****   {
 986              		.loc 1 282 3 is_stmt 1 view .LVU227
 282:Core/Src/main.c ****   {
 987              		.loc 1 282 7 is_stmt 0 view .LVU228
 988 006e 03A8     		add	r0, sp, #12
 989 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 990              	.LVL55:
 282:Core/Src/main.c ****   {
 991              		.loc 1 282 6 view .LVU229
 992 0074 20B9     		cbnz	r0, .L58
 286:Core/Src/main.c **** 
 993              		.loc 1 286 1 view .LVU230
 994 0076 15B0     		add	sp, sp, #84
 995              	.LCFI12:
 996              		.cfi_remember_state
 997              		.cfi_def_cfa_offset 4
 998              		@ sp needed
 999 0078 5DF804FB 		ldr	pc, [sp], #4
 1000              	.L57:
 1001              	.LCFI13:
 1002              		.cfi_restore_state
 270:Core/Src/main.c ****   }
 1003              		.loc 1 270 5 is_stmt 1 view .LVU231
 1004 007c FFF7FEFF 		bl	Error_Handler
 1005              	.LVL56:
 1006              	.L58:
 284:Core/Src/main.c ****   }
 1007              		.loc 1 284 5 view .LVU232
 1008 0080 FFF7FEFF 		bl	Error_Handler
 1009              	.LVL57:
 1010              	.L60:
ARM GAS  /tmp/ccAy7H4i.s 			page 33


 1011              		.align	2
 1012              	.L59:
 1013 0084 00380240 		.word	1073887232
 1014 0088 00700040 		.word	1073770496
 1015              		.cfi_endproc
 1016              	.LFE132:
 1018              		.section	.text.main,"ax",%progbits
 1019              		.align	1
 1020              		.global	main
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1024              		.fpu fpv4-sp-d16
 1026              	main:
 1027              	.LFB131:
 157:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1028              		.loc 1 157 1 view -0
 1029              		.cfi_startproc
 1030              		@ Volatile: function does not return.
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 08B5     		push	{r3, lr}
 1034              	.LCFI14:
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 3, -8
 1037              		.cfi_offset 14, -4
 165:Core/Src/main.c **** 
 1038              		.loc 1 165 3 view .LVU234
 1039 0002 FFF7FEFF 		bl	HAL_Init
 1040              	.LVL58:
 172:Core/Src/main.c **** 
 1041              		.loc 1 172 3 view .LVU235
 1042 0006 FFF7FEFF 		bl	SystemClock_Config
 1043              	.LVL59:
 179:Core/Src/main.c ****   MX_TIM10_Init();
 1044              		.loc 1 179 3 view .LVU236
 1045 000a FFF7FEFF 		bl	MX_GPIO_Init
 1046              	.LVL60:
 180:Core/Src/main.c ****   MX_DMA_Init();
 1047              		.loc 1 180 3 view .LVU237
 1048 000e FFF7FEFF 		bl	MX_TIM10_Init
 1049              	.LVL61:
 181:Core/Src/main.c ****   MX_USART2_UART_Init();
 1050              		.loc 1 181 3 view .LVU238
 1051 0012 FFF7FEFF 		bl	MX_DMA_Init
 1052              	.LVL62:
 182:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1053              		.loc 1 182 3 view .LVU239
 1054 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1055              	.LVL63:
 186:Core/Src/main.c ****   
 1056              		.loc 1 186 3 view .LVU240
 1057 001a 2848     		ldr	r0, .L69
 1058 001c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1059              	.LVL64:
 1060 0020 15E0     		b	.L62
 1061              	.L68:
ARM GAS  /tmp/ccAy7H4i.s 			page 34


 212:Core/Src/main.c **** 		        
 1062              		.loc 1 212 11 view .LVU241
 1063 0022 0122     		movs	r2, #1
 1064 0024 2649     		ldr	r1, .L69+4
 1065 0026 2748     		ldr	r0, .L69+8
 1066 0028 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1067              	.LVL65:
 218:Core/Src/main.c ****     			 HAL_Delay(100);
 1068              		.loc 1 218 25 view .LVU242
 1069 002c 264C     		ldr	r4, .L69+12
 1070 002e 0122     		movs	r2, #1
 1071 0030 2021     		movs	r1, #32
 1072 0032 2046     		mov	r0, r4
 1073 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1074              	.LVL66:
 219:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1075              		.loc 1 219 9 view .LVU243
 1076 0038 6420     		movs	r0, #100
 1077 003a FFF7FEFF 		bl	HAL_Delay
 1078              	.LVL67:
 220:Core/Src/main.c ****     			 HAL_Delay(100);
 1079              		.loc 1 220 9 view .LVU244
 1080 003e 0022     		movs	r2, #0
 1081 0040 2021     		movs	r1, #32
 1082 0042 2046     		mov	r0, r4
 1083 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1084              	.LVL68:
 221:Core/Src/main.c ****     			 break;
 1085              		.loc 1 221 9 view .LVU245
 1086 0048 6420     		movs	r0, #100
 1087 004a FFF7FEFF 		bl	HAL_Delay
 1088              	.LVL69:
 222:Core/Src/main.c ****                      case 1:   // state 1 : carte vérouillé
 1089              		.loc 1 222 9 view .LVU246
 1090              	.L62:
 196:Core/Src/main.c ****   {
 1091              		.loc 1 196 3 view .LVU247
 207:Core/Src/main.c **** 		   {
 1092              		.loc 1 207 5 view .LVU248
 1093 004e 1F4B     		ldr	r3, .L69+16
 1094 0050 1B68     		ldr	r3, [r3]
 1095 0052 012B     		cmp	r3, #1
 1096 0054 09D0     		beq	.L63
 1097 0056 022B     		cmp	r3, #2
 1098 0058 15D0     		beq	.L64
 1099 005a 002B     		cmp	r3, #0
 1100 005c E1D0     		beq	.L68
 240:Core/Src/main.c ****                      	 break;
 1101              		.loc 1 240 24 view .LVU249
 1102 005e 0022     		movs	r2, #0
 1103 0060 2021     		movs	r1, #32
 1104 0062 1948     		ldr	r0, .L69+12
 1105 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1106              	.LVL70:
 241:Core/Src/main.c ****                   }
 1107              		.loc 1 241 24 view .LVU250
 1108 0068 F1E7     		b	.L62
ARM GAS  /tmp/ccAy7H4i.s 			page 35


 1109              	.L63:
 225:Core/Src/main.c ****                         HAL_Delay(1000);
 1110              		.loc 1 225 25 view .LVU251
 1111 006a 0122     		movs	r2, #1
 1112 006c 2021     		movs	r1, #32
 1113 006e 1648     		ldr	r0, .L69+12
 1114 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1115              	.LVL71:
 226:Core/Src/main.c ****                         nb_push_second++;
 1116              		.loc 1 226 25 view .LVU252
 1117 0074 4FF47A70 		mov	r0, #1000
 1118 0078 FFF7FEFF 		bl	HAL_Delay
 1119              	.LVL72:
 227:Core/Src/main.c ****                         break;
 1120              		.loc 1 227 25 view .LVU253
 227:Core/Src/main.c ****                         break;
 1121              		.loc 1 227 39 is_stmt 0 view .LVU254
 1122 007c 144A     		ldr	r2, .L69+20
 1123 007e 1388     		ldrh	r3, [r2]
 1124 0080 0133     		adds	r3, r3, #1
 1125 0082 1380     		strh	r3, [r2]	@ movhi
 228:Core/Src/main.c ****                      case 2:   // state 3 : carte dévérouillé
 1126              		.loc 1 228 25 is_stmt 1 view .LVU255
 1127 0084 E3E7     		b	.L62
 1128              	.L64:
 232:Core/Src/main.c ****     			 HAL_Delay(1000);
 1129              		.loc 1 232 25 view .LVU256
 1130 0086 104D     		ldr	r5, .L69+12
 1131 0088 0122     		movs	r2, #1
 1132 008a 2021     		movs	r1, #32
 1133 008c 2846     		mov	r0, r5
 1134 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1135              	.LVL73:
 233:Core/Src/main.c ****     			 nb_push_second++;
 1136              		.loc 1 233 9 view .LVU257
 1137 0092 4FF47A70 		mov	r0, #1000
 1138 0096 FFF7FEFF 		bl	HAL_Delay
 1139              	.LVL74:
 234:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1140              		.loc 1 234 9 view .LVU258
 234:Core/Src/main.c ****     			 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1141              		.loc 1 234 23 is_stmt 0 view .LVU259
 1142 009a 0D4C     		ldr	r4, .L69+20
 1143 009c 2388     		ldrh	r3, [r4]
 1144 009e 0133     		adds	r3, r3, #1
 1145 00a0 2380     		strh	r3, [r4]	@ movhi
 235:Core/Src/main.c ****     			 HAL_Delay(1000);
 1146              		.loc 1 235 9 is_stmt 1 view .LVU260
 1147 00a2 0022     		movs	r2, #0
 1148 00a4 2021     		movs	r1, #32
 1149 00a6 2846     		mov	r0, r5
 1150 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1151              	.LVL75:
 236:Core/Src/main.c ****     			 nb_push_second++;
 1152              		.loc 1 236 9 view .LVU261
 1153 00ac 4FF47A70 		mov	r0, #1000
 1154 00b0 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccAy7H4i.s 			page 36


 1155              	.LVL76:
 237:Core/Src/main.c ****     			 break;
 1156              		.loc 1 237 9 view .LVU262
 237:Core/Src/main.c ****     			 break;
 1157              		.loc 1 237 23 is_stmt 0 view .LVU263
 1158 00b4 2388     		ldrh	r3, [r4]
 1159 00b6 0133     		adds	r3, r3, #1
 1160 00b8 2380     		strh	r3, [r4]	@ movhi
 238:Core/Src/main.c ****                      default:
 1161              		.loc 1 238 9 is_stmt 1 view .LVU264
 1162 00ba C8E7     		b	.L62
 1163              	.L70:
 1164              		.align	2
 1165              	.L69:
 1166 00bc 00000000 		.word	htim10
 1167 00c0 00000000 		.word	buffer
 1168 00c4 00000000 		.word	huart2
 1169 00c8 00000240 		.word	1073872896
 1170 00cc 00000000 		.word	.LANCHOR0
 1171 00d0 00000000 		.word	.LANCHOR4
 1172              		.cfi_endproc
 1173              	.LFE131:
 1175              		.comm	mdp_try,10,4
 1176              		.global	mdp_try_size
 1177              		.comm	mdp,10,4
 1178              		.global	mdp_size
 1179              		.global	mdp_max_size
 1180              		.comm	buffer,1,1
 1181              		.global	state
 1182              		.global	nb_push_second
 1183              		.comm	timer_val,2,2
 1184              		.comm	uart_buf_len,4,4
 1185              		.comm	uart_buf,50,4
 1186              		.comm	hdma_usart2_tx,96,4
 1187              		.comm	hdma_usart2_rx,96,4
 1188              		.comm	huart2,68,4
 1189              		.comm	htim10,72,4
 1190              		.section	.bss.mdp_size,"aw",%nobits
 1191              		.align	2
 1192              		.set	.LANCHOR1,. + 0
 1195              	mdp_size:
 1196 0000 00000000 		.space	4
 1197              		.section	.bss.mdp_try_size,"aw",%nobits
 1198              		.align	2
 1199              		.set	.LANCHOR3,. + 0
 1202              	mdp_try_size:
 1203 0000 00000000 		.space	4
 1204              		.section	.bss.nb_push_second,"aw",%nobits
 1205              		.align	1
 1206              		.set	.LANCHOR4,. + 0
 1209              	nb_push_second:
 1210 0000 0000     		.space	2
 1211              		.section	.bss.state,"aw",%nobits
 1212              		.align	2
 1213              		.set	.LANCHOR0,. + 0
 1216              	state:
 1217 0000 00000000 		.space	4
ARM GAS  /tmp/ccAy7H4i.s 			page 37


 1218              		.section	.data.mdp_max_size,"aw"
 1219              		.align	2
 1220              		.set	.LANCHOR2,. + 0
 1223              	mdp_max_size:
 1224 0000 0A000000 		.word	10
 1225              		.text
 1226              	.Letext0:
 1227              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1228              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1229              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1230              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1231              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1232              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1233              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1234              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1235              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1236              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1237              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1238              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1239              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1240              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1241              		.file 17 "<built-in>"
ARM GAS  /tmp/ccAy7H4i.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccAy7H4i.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccAy7H4i.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccAy7H4i.s:143    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/ccAy7H4i.s:150    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccAy7H4i.s:156    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccAy7H4i.s:217    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/ccAy7H4i.s:222    .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccAy7H4i.s:251    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccAy7H4i.s:258    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccAy7H4i.s:498    .text.HAL_UART_RxCpltCallback:0000000000000138 $d
                            *COM*:0000000000000044 huart2
                            *COM*:0000000000000001 buffer
                            *COM*:000000000000000a mdp
                            *COM*:000000000000000a mdp_try
     /tmp/ccAy7H4i.s:519    .rodata.HAL_GPIO_EXTI_Callback.str1.4:0000000000000000 $d
     /tmp/ccAy7H4i.s:535    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccAy7H4i.s:542    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccAy7H4i.s:697    .text.HAL_GPIO_EXTI_Callback:00000000000000ac $d
     /tmp/ccAy7H4i.s:710    .text.Error_Handler:0000000000000000 $t
     /tmp/ccAy7H4i.s:717    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccAy7H4i.s:749    .text.MX_TIM10_Init:0000000000000000 $t
     /tmp/ccAy7H4i.s:755    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
     /tmp/ccAy7H4i.s:804    .text.MX_TIM10_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim10
     /tmp/ccAy7H4i.s:810    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccAy7H4i.s:816    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccAy7H4i.s:871    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccAy7H4i.s:877    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccAy7H4i.s:884    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccAy7H4i.s:1013   .text.SystemClock_Config:0000000000000084 $d
     /tmp/ccAy7H4i.s:1019   .text.main:0000000000000000 $t
     /tmp/ccAy7H4i.s:1026   .text.main:0000000000000000 main
     /tmp/ccAy7H4i.s:1166   .text.main:00000000000000bc $d
     /tmp/ccAy7H4i.s:1202   .bss.mdp_try_size:0000000000000000 mdp_try_size
     /tmp/ccAy7H4i.s:1195   .bss.mdp_size:0000000000000000 mdp_size
     /tmp/ccAy7H4i.s:1223   .data.mdp_max_size:0000000000000000 mdp_max_size
     /tmp/ccAy7H4i.s:1216   .bss.state:0000000000000000 state
     /tmp/ccAy7H4i.s:1209   .bss.nb_push_second:0000000000000000 nb_push_second
                            *COM*:0000000000000002 timer_val
                            *COM*:0000000000000004 uart_buf_len
                            *COM*:0000000000000032 uart_buf
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_usart2_rx
     /tmp/ccAy7H4i.s:1191   .bss.mdp_size:0000000000000000 $d
     /tmp/ccAy7H4i.s:1198   .bss.mdp_try_size:0000000000000000 $d
     /tmp/ccAy7H4i.s:1205   .bss.nb_push_second:0000000000000000 $d
     /tmp/ccAy7H4i.s:1212   .bss.state:0000000000000000 $d
     /tmp/ccAy7H4i.s:1219   .data.mdp_max_size:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
ARM GAS  /tmp/ccAy7H4i.s 			page 39


HAL_GPIO_ReadPin
HAL_UART_Receive_DMA
HAL_TIM_Base_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
